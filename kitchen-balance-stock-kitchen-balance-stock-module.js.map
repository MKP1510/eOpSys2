{"version":3,"sources":["webpack:///./src/app/restaurants/kitchen/kitchen-balance-stock/add-kitchen-balance-stock/add-kitchen-balance-stock.component.css","webpack:///./src/app/restaurants/kitchen/kitchen-balance-stock/add-kitchen-balance-stock/add-kitchen-balance-stock.component.html","webpack:///./src/app/restaurants/kitchen/kitchen-balance-stock/add-kitchen-balance-stock/add-kitchen-balance-stock.component.ts","webpack:///./src/app/restaurants/kitchen/kitchen-balance-stock/kitchen-balance-stock-routing.module.ts","webpack:///./src/app/restaurants/kitchen/kitchen-balance-stock/kitchen-balance-stock.component.css","webpack:///./src/app/restaurants/kitchen/kitchen-balance-stock/kitchen-balance-stock.component.html","webpack:///./src/app/restaurants/kitchen/kitchen-balance-stock/kitchen-balance-stock.component.ts","webpack:///./src/app/restaurants/kitchen/kitchen-balance-stock/kitchen-balance-stock.module.ts","webpack:///./src/app/restaurants/kitchen/kitchen-balance-stock/kitchen-balance-stock.service.ts","webpack:///./src/app/restaurants/kitchen/kitchen-balance-stock/kitchen-balance-stock.ts"],"names":[],"mappings":"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","file":"kitchen-balance-stock-kitchen-balance-stock-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <form (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\">\\n    <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"example-form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput #input placeholder=\\\"Name\\\" aria-label=\\\"name\\\" [(ngModel)]=\\\"balanceStock.name\\\" name=\\\"name\\\" [matAutocomplete]=\\\"auto1\\\">\\n            <mat-autocomplete #auto1=\\\"matAutocomplete\\\">\\n              <mat-option *ngFor=\\\"let emp of employee\\\" [value]=\\\"emp.employeeName\\\" >\\n                <span>{{emp.employeeName}} </span>\\n              </mat-option>\\n            </mat-autocomplete>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"example-form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Date\\\" value=\\\"{{today | date}}\\\" name=\\\"date\\\">\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"example-form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Time\\\" value=\\\"{{today | date:'shortTime'}}\\\" name=\\\"time\\\">\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <mat-divider style=\\\"margin-top: 10px;\\\"></mat-divider>\\n    <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>Item Name</h6>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>Quantity</h6>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>Unit</h6>\\n      </div>\\n    </div>\\n    <mat-divider style=\\\"margin-top: 10px;\\\"></mat-divider>\\n    <div *ngFor=\\\"let options of Option; let in=index;\\\" class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\n      <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"example-form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput #input placeholder=\\\"ItemCode\\\" aria-label=\\\"itemName\\\" [(ngModel)]=\\\"Option[in].itemName\\\" name=\\\"itemName{{in}}\\\"\\n              [matAutocomplete]=\\\"auto2\\\">\\n            <mat-autocomplete #auto2=\\\"matAutocomplete\\\">\\n              <mat-option *ngFor=\\\"let stocks of stock\\\" [value]=\\\"stocks.itemName\\\" (click)=\\\"selectItemId(in,stocks.itemId)\\\">\\n                <span>{{stocks.itemName}}</span>\\n              </mat-option>\\n            </mat-autocomplete>\\n          </mat-form-field>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"example-form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Quantity\\\" [(ngModel)]=\\\"Option[in].quantity\\\" #quantity name=\\\"quantity{{in}}\\\" required>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"example-form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select name=\\\"unit\\\" placeholder=\\\"Unit\\\" [(ngModel)]=\\\"Option[in].unit\\\" name=\\\"unit{{in}}\\\" required>\\n              <mat-option value=\\\"KiloGram\\\">KiloGram</mat-option>\\n              <mat-option value=\\\"Gram\\\">Gram</mat-option>\\n              <mat-option value=\\\"Litre\\\">Litre</mat-option>\\n              <mat-option value=\\\"MilliLitre\\\">MilliLitre</mat-option>\\n              <mat-option value=\\\"Picese\\\">Picese</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"form\\\">\\n          <button mat-icon-button (click)=\\\"add()\\\" [disabled]=\\\"!formControl.valid\\\">\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" >add</mat-icon>\\n          </button>\\n          <button mat-icon-button (click)=\\\"remove(in)\\\">\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete</mat-icon>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <mat-divider style=\\\"margin-top: 10px;\\\"></mat-divider>\\n    <div>\\n      <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\n        <div class=\\\"col-sm-4\\\">\\n\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"saveKitchenStock()\\\" [disabled]=\\\"!formControl.valid\\\">Save</button>\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"cloase()\\\" style=\\\"margin-left: 10px;\\\" >Cancel</button>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n\\n        </div>\\n      </div>\\n      \\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../../../admin/HRM/employee/employee.service';\nimport { Employee } from '../../../admin/HRM/employee/employee';\nimport { DatePipe, Time } from '../../../../../../node_modules/@angular/common';\nimport { Router } from '../../../../../../node_modules/@angular/router';\nimport { KitchenBalanceStock } from '../kitchen-balance-stock';\nimport { StockService } from '../../../admin/stock/stock.service';\nimport { Stock } from '../../../admin/stock/stock';\nimport { KitchenBalanceStockService } from '../kitchen-balance-stock.service';\n@Component({\n  selector: 'app-add-kitchen-balance-stock',\n  templateUrl: './add-kitchen-balance-stock.component.html',\n  styleUrls: ['./add-kitchen-balance-stock.component.css'],\n  providers: [DatePipe]\n})\nexport class AddKitchenBalanceStockComponent implements OnInit {\n\n  private itemId: number;\n  private employee: Employee;\n  private time;\n  private date;\n  private availableQuantity: number;\n  private quantity: number;\n  private quantity2: number;\n  private amountPerKg: number;\n  private amount: number;\n  private unit: string;\n  private units;\n  private amountPerGram: number;\n  private balanceStock: KitchenBalanceStock;\n  private stock: Stock;\n  today: number = Date.now();\n  Option = [{ itemId: '', itemName: '', quantity: '', unit: '' }];\n  constructor(private employeeService: EmployeeService,\n    private stockService: StockService,\n    private datePipe: DatePipe,\n    private kitchenService: KitchenBalanceStockService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.getEmployeeList();\n    this.getStockList();\n    this.employee = new Employee();\n    this.time = this.datePipe.transform(new Date(), 'hh:mm:ss');\n    this.date = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n    this.balanceStock = new KitchenBalanceStock();\n  }\n\n  getEmployeeList() {\n    this.employeeService.getEmployeeDetails().subscribe((data) => {\n      this.employee = data;\n    }, err => {\n      console.log('erroe')\n    });\n  }\n\n  getStockList() {\n    this.stockService.getStockList().subscribe((data) => {\n      this.stock = data;\n    }, (error) => {\n      console.log(error);\n    })\n  }\n  selectItemId(i: number, itemId: number) {\n    console.log(i);\n    console.log(itemId);\n    this.Option[i].itemId = itemId.toString();\n  }\n  saveKitchenStock() {\n    this.balanceStock.kitchenBalanceStockItem = this.Option;\n    this.balanceStock.date = this.date;\n    this.balanceStock.time = this.time;\n    this.kitchenService.saveKitchenBalanceStock(this.balanceStock).subscribe((data) => {\n      console.log(data);\n    }, (error) => {\n      console.log(error);\n    })\n  }\n  add(i: number) {\n    this.Option.push({ itemId: '', itemName: '', quantity: '', unit: '' });\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {AddKitchenBalanceStockComponent} from './add-kitchen-balance-stock/add-kitchen-balance-stock.component';\r\nimport {KitchenBalanceStockComponent} from './kitchen-balance-stock.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: 'addBalanceStock', component: AddKitchenBalanceStockComponent\r\n    },\r\n    {\r\n        path: '', component: KitchenBalanceStockComponent\r\n    },\r\n \r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class KitchenBalanceStRoutingModule {\r\n}","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 100%;\\r\\n    padding-left: 20px;\\r\\n    padding-top: 20px;\\r\\n  }\\r\\n  \\r\\n  button{\\r\\n    margin-left: 20px;\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n  \\r\\n  h6{\\r\\n    text-align: center;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    font-size: 20px;\\r\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n  <h6>Stock Item</h6>\\n  <div class=\\\"example-container mat-elevation-z8\\\">\\n    <div class=\\\"example-header\\\">\\n      <mat-form-field>\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n      </mat-form-field>\\n    </div>\\n    <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <mat-container matColumnDef=\\\"stockId\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>StockId Id</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let stock\\\">{{stock.kitchenBalanceStockItemId}}</mat-cell>\\n      </mat-container>\\n\\n      <mat-container matColumnDef=\\\"itemName\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Item Name</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let stock\\\">{{stock.itemName}}</mat-cell>\\n      </mat-container>\\n\\n      <mat-container matColumnDef=\\\"quantity\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Quantity</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let stock\\\">{{stock.quantity}}</mat-cell>\\n      </mat-container>\\n\\n      <mat-container matColumnDef=\\\"unit\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Unit</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let stock\\\">{{stock.unit}}</mat-cell>\\n      </mat-container>\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <mat-header-cell *matHeaderCellDef>\\n          <button mat-icon-button matTooltip=\\\"Create the new User\\\" color=\\\"primary\\\" (click)=\\\"addKitchenBalance()\\\">\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n          </button>\\n        </mat-header-cell>\\n\\n        <mat-cell *matCellDef=\\\"let gst; let i=index;\\\">\\n        </mat-cell>\\n      </ng-container>\\n      <mat-header-row mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    </mat-table>\\n    <mat-paginator [pageSizeOptions]=\\\"[ 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {KitchenBalanceStockService} from './kitchen-balance-stock.service';\nimport {KitchenBalanceStock} from './kitchen-balance-stock';\nimport {KitchenBalanceStockItem} from './kitchen-balance-stock-item';\nimport { Router } from '../../../../../node_modules/@angular/router';\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\n@Component({\n  selector: 'app-kitchen-balance-stock',\n  templateUrl: './kitchen-balance-stock.component.html',\n  styleUrls: ['./kitchen-balance-stock.component.css']\n})\nexport class KitchenBalanceStockComponent implements OnInit {\n\n\n  displayedColumns = ['stockId', 'itemName', 'quantity', 'unit','actions']\n\n  private stock:KitchenBalanceStock[];\n  private item:KitchenBalanceStockItem[];\n  private dataSource;\n  constructor(private balanceService:KitchenBalanceStockService,\n    private router:Router) { }\n\n  ngOnInit() {\n    this.getAllKitchenBalanceStock();\n  }\n\n  getAllKitchenBalanceStock(){\n    this.balanceService.getKitchenBalanceStockList().subscribe((data)=>{\n      this.stock=data;\n      console.log(data.length);\n      let stock=data;\n    \n      stock.forEach(data=>{\n        this.item=data['kitchenBalanceStockItem']\n        console.log(this.item);\n      });\n      this.dataSource = new MatTableDataSource(this.item);\n    },(error)=>{\n      console.log(error);\n    })\n  }\n  addKitchenBalance(){\n    this.router.navigate(['restaurants/kitchen/stock/addBalanceStock'])\n  }\n}\n","import { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { KitchenBalanceStockComponent } from './kitchen-balance-stock.component';\nimport { AddKitchenBalanceStockComponent } from './add-kitchen-balance-stock/add-kitchen-balance-stock.component';\nimport { HttpModule } from '../../../../../node_modules/@angular/http';\nimport {\n  MatFormFieldModule, MatInputModule, MatButtonModule, MatNativeDateModule,\n  MatDatepickerModule, MatAutocompleteModule, MatSelectModule, MatOptionModule,\n  MatIconModule, MatDividerModule, MatTableModule, MatTooltipModule,\n  MatDialogModule, MatSortModule, MatPaginatorModule\n} from '../../../../../node_modules/@angular/material';\nimport { ReactiveFormsModule, FormsModule } from '../../../../../node_modules/@angular/forms';\nimport { EmployeeService } from '../../admin/HRM/employee/employee.service';\nimport { KitchenBalanceStRoutingModule } from './kitchen-balance-stock-routing.module';\nimport {KitchenBalanceStockService} from './kitchen-balance-stock.service';\nimport {StockService} from '../../admin/stock/stock.service';\n@NgModule({\n  imports: [\n    CommonModule,\n    MatFormFieldModule, MatInputModule, MatButtonModule, MatNativeDateModule,\n    MatDatepickerModule, MatAutocompleteModule, MatSelectModule, MatOptionModule,\n    HttpModule, MatIconModule, MatDividerModule, MatTableModule, MatTooltipModule,\n    MatDialogModule, MatSortModule, MatPaginatorModule,\n    ReactiveFormsModule, FormsModule,\n    KitchenBalanceStRoutingModule\n  ],\n  providers: [\n    EmployeeService,KitchenBalanceStockService,StockService\n  ],\n  declarations: [KitchenBalanceStockComponent, AddKitchenBalanceStockComponent],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class KitchenBalanceStockModule { }\n","import { Injectable } from '@angular/core';\nimport { RequestOptions, Response, Headers, Http } from '@angular/http'\nimport { map, catchError } from '../../../../../node_modules/rxjs/operators';\nimport { Observable } from '../../../../../node_modules/rxjs';\nimport { KitchenBalanceStock } from './kitchen-balance-stock';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KitchenBalanceStockService {\n\n  private baseUrl: string = 'http://localhost:8080/api';\n\n  private headers = new Headers({ 'Content-Type': 'application/json' });\n\n  private options = new RequestOptions({ headers: this.headers });\n\n  constructor(private http: Http) { }\n\n  getKitchenBalanceStockList() :Observable<any>{\n    return this.http.get(this.baseUrl + '/getAllBalanceStock', this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error)\n        }));\n\n  }\n  saveKitchenBalanceStock(stock: KitchenBalanceStock) {\n    console.log('ff', stock)\n    return this.http.post(this.baseUrl + '/saveKitchenBalanceStock', JSON.stringify(stock), this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error)\n        }));\n  }\n  \n}\n","import { Time } from \"../../../../../node_modules/@angular/common\";\n\nexport class KitchenBalanceStock {\n    kitchenBalanceStockId:number;\n    name:string;\n    date:Date;\n    time:Time;\n    kitchenBalanceStockItem=[];\n}\n"],"sourceRoot":""}