{"version":3,"sources":["webpack:///./src/app/restaurants/admin/KOT/live-order/live-order-routing.module.ts","webpack:///./src/app/restaurants/admin/KOT/live-order/live-order.component.css","webpack:///./src/app/restaurants/admin/KOT/live-order/live-order.component.html","webpack:///./src/app/restaurants/admin/KOT/live-order/live-order.component.ts","webpack:///./src/app/restaurants/admin/KOT/live-order/live-order.module.ts","webpack:///./src/app/restaurants/admin/KOT/live-order/live-order.service.ts","webpack:///./src/app/restaurants/admin/KOT/live-order/view-menu/view-menu.component.css","webpack:///./src/app/restaurants/admin/KOT/live-order/view-menu/view-menu.component.html","webpack:///./src/app/restaurants/admin/KOT/live-order/view-menu/view-menu.component.ts","webpack:///./src/app/restaurants/admin/KOT/order/order.ts","webpack:///./src/app/restaurants/admin/KOT/table/table.service.ts"],"names":[],"mappings":"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","file":"KOT-live-order-live-order-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LiveOrderComponent } from './live-order.component';\r\nimport {ViewMenuComponent} from './view-menu/view-menu.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: LiveOrderComponent,\r\n    },\r\n    {\r\n        path:'viewmenu',component:ViewMenuComponent,\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class LiveOrederRoutingModule{\r\n}\r\n","module.exports = \"button{\\r\\n    width: 150px;\\r\\n}\\r\\nh6{\\r\\n    font-size: 14px;\\r\\n}\\r\\n#newOrder{\\r\\n    \\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <button type=\\\"submit\\\" id=\\\"newOrder\\\"  mat-raised-button color=\\\"primary\\\" (click)=\\\"newOrder()\\\">New Order</button>\\n  <div *ngFor=\\\"let orders of order\\\">\\n    <div *ngIf=\\\"orders.status!='payment'\\\">\\n      <mat-card>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-2\\\">\\n            <h6>Order Id: {{orders.orderId}}</h6>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n            <h6>Waiter Name: {{orders.waiterName}}</h6>\\n            <h6>Table Name: {{orders.tableName}}</h6>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n            <h6>Date: {{orders.date}}</h6>\\n            <h6>Time: {{orders.time}}</h6>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n            {{countDown}}\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n  \\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n              <div *ngIf=\\\"orders.status!='close'\\\">\\n                  <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"viewMenu(orders.orderId)\\\">View Order</button>\\n                  <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"editOrder(orders.orderId)\\\">ReOrder</button>\\n              </div>\\n            <div *ngIf=\\\"orders.status=='order'\\\">\\n              <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"pay(orders.tableId,orders.orderId)\\\">Close Order</button>\\n            </div>\\n            <div *ngIf=\\\"orders.status=='close'\\\">\\n              <button type=\\\"submit\\\"  mat-raised-button color=\\\"accent\\\" (click)=\\\"billing(orders.orderId)\\\">Payment</button>\\n            </div>\\n          </div>\\n        </div>\\n      </mat-card>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {OrderService} from '../order/order.service';\nimport {Order} from '../order/order';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport {MenuOrder} from '../order/menu-order';\nimport { MatDialog } from '@angular/material';\nimport {ViewMenuComponent} from './view-menu/view-menu.component';\nimport {TableService} from '../table/table.service';\nimport {Table} from '../table/table';\n@Component({\n  selector: 'app-live-order',\n  host: {'(window:keydown)': 'hotkeys($event)'},\n  templateUrl: './live-order.component.html',\n  styleUrls: ['./live-order.component.css']\n})\nexport class LiveOrderComponent implements OnInit {\n\n  private table:Table;\n  private order:Order[];\n  private orderId;\n  private tableId;\n  private menuOrder:MenuOrder[];\n  constructor(private orderService:OrderService,\n              private router:Router,\n              private dialog:MatDialog,\n              private tableService:TableService) { \n              }\n\n  ngOnInit() {\n    this.getAllOrder();\n    this.table=new Table();\n  }\n\n\n  getAllOrder(){\n    this.orderService.getAllOrder().subscribe(data=>{\n     this.order=data;\n     console.log(data);\n     if(data.length>=1){\n      console.log(this.order);\n     }\n     else{\n       alert(\"Not Data Fount!\")\n     }\n    },(error)=>{\n      console.log(error);\n    });\n  }\n\n\n\n  viewMenu(orderId:number){\n    this.orderId=orderId;\n      const dialogRef = this.dialog.open(ViewMenuComponent, {\n        data: {orderId:orderId}\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result === 1) {\n          this.getAllOrder();\n        }\n      });\n  \n  }\n  hotkeys(event){\n    if (event.keyCode == 86){\n       this.viewMenu(event);\n    }\n }\n  editOrder(orderId:number){\n    this.router.navigate(['restaurants/admin/order/editOrder',orderId]);\n  }\n\n  pay(tableId:number,orderId:number){\n    this.table.tableId=tableId;\n    this.table.status='payment';\n    this.tableService.updateStatus(this.table).subscribe((data)=>{\n      console.log(data);\n      this.orderService.updateOrderStatus(orderId).subscribe((data)=>{\n        console.log(data);\n        this.getAllOrder();\n      },(error)=>{\n        console.log(error);\n      });\n    },(error)=>{\n      console.log(error);\n    });\n  }\n\n  billing(orderId:number){\n    this.router.navigate(['restaurants/admin/billing',orderId])\n  }\n\n  hotkeys1(event){\n    if (event.keyCode == 78){\n       this.newOrder();\n    }\n     if (event.keyCode == 78){\n       this.newOrder();\n    }\n }\n\n  newOrder(){\n    this.router.navigate(['restaurants/admin/order'])\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LiveOrderComponent } from '../../KOT/live-order/live-order.component';\nimport {LiveOrederRoutingModule} from './live-order-routing.module';\nimport {LiveOrderService} from './live-order.service';\nimport {OrderService} from '../order/order.service';\nimport { HttpModule } from '@angular/http';\nimport {MatCardModule,MatButtonModule,MatDialogModule,MatDividerModule} from '@angular/material';\nimport { ViewMenuComponent } from '../../KOT/live-order/view-menu/view-menu.component';\nimport {TableService} from '../table/table.service';\n@NgModule({\n  imports: [\n    CommonModule,\n    LiveOrederRoutingModule,\n    HttpModule,\n    MatCardModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatDividerModule\n  ],\n  providers:[\n    LiveOrderService,OrderService,TableService\n  ],\n  entryComponents:[\n    ViewMenuComponent\n  ],\n  declarations: [LiveOrderComponent, ViewMenuComponent]\n})\nexport class LiveOrderModule { }\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  map, filter, catchError, mergeMap,\n} from 'rxjs/operators';\n\nimport {LiveOrder} from './live-order';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LiveOrderService {\n  private baseUrl: string = 'http://localhost:8080/api';\n\n  private headers = new Headers({ 'Content-Type': 'application/json' });\n\n  private options = new RequestOptions({ headers: this.headers });\n  dialogData: any;\n\n  dataChange: BehaviorSubject<LiveOrder[]> = new BehaviorSubject<LiveOrder[]>([]);\n\n  private liveOrder: LiveOrder;\n\n  constructor(private _http: Http) { }\n\n  get data(): LiveOrder[] {\n    return this.dataChange.value;\n  }\n\n \n}\n","module.exports = \"h6{\\r\\n    text-align: center;\\r\\n    font-size: 14px;\\r\\n}\\r\\n#menulist{\\r\\n    margin-top: 10px;\\r\\n}\\r\\nbutton{\\r\\n    margin-top: 10px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>MenuId</h6>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>MenuName</h6>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>Quantity</h6>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>Amount</h6>\\n    </div>\\n  </div>\\n  <mat-divider></mat-divider>\\n  <div *ngFor=\\\"let menu of menuOrder\\\">\\n    <div class=\\\"row\\\" id=\\\"menulist\\\">\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>{{menu.menuId}}</h6>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>{{menu.menuName}}</h6>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>{{menu.quantity}}</h6>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>{{menu.amount}}</h6>\\n      </div>\\n    </div>\\n  </div>\\n  <button  mat-raised-button color=\\\"primary\\\" style=\\\"float: right;\\\" (click)=\\\" onNoClick()\\\">Close</button>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport {Order} from '../../order/order';\nimport {MenuOrder} from '../../order/menu-order';\nimport {OrderService} from '../../order/order.service';\nimport { timer } from 'rxjs'; // (for rxjs < 6) use 'rxjs/observable/timer'\nimport { take, map } from 'rxjs/operators';\n@Component({\n  selector: 'app-view-menu',\n  templateUrl: './view-menu.component.html',\n  styleUrls: ['./view-menu.component.css']\n})\nexport class ViewMenuComponent implements OnInit {\n\n  private order:Order;\n  \n  private menuOrder:MenuOrder[];\n  constructor(public dialogRef: MatDialogRef<ViewMenuComponent>,\n              @Inject(MAT_DIALOG_DATA) public data:Order,\n              private orderService:OrderService) {\n              \n               }\n\n  ngOnInit() {\n    console.log('Order',this.data.orderId);\n    this.getOrder();\n  }\n \n\n  getOrder(){\n    this.orderService.getMenuOrder(this.data.orderId).subscribe((data)=>{\n      this.menuOrder=data;\n      console.log('menu',this.menuOrder.length);\n    },(error)=>{\n      console.log(error);\n    });\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","import { Time } from \"../../../../../../node_modules/@angular/common\";\nimport { MenuOrder } from \"./menu-order\";\n\nexport class Order {\n    orderId: number;\n    waiterId: number;\n    tableId: number;\n    waiterName:string;\n    tableName:string;\n    date:Date;\n    time:Time;\n     menuOrder:MenuOrder;\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Table } from './table';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableService {\n  private baseUrl: string = 'http://localhost:8080/api';\n\n  private headers = new Headers({ 'Content-Type': 'application/json' });\n\n  private options = new RequestOptions({ headers: this.headers });\n\n  private table: Table;\n\n  dialogData: any;\n\n  dataChange: BehaviorSubject<Table[]> = new BehaviorSubject<Table[]>([]);\n\n  constructor(private _http: Http) { }\n\n  getter() {\n    return this.table;\n  }\n\n  setter(table: Table) {\n    this.table = table;\n  }\n\n\n  getAllTableList(): Observable<Table[]> {\n    return this._http.get(this.baseUrl + '/GetAllTables', this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  createTable(table: Table): Observable<any> {\n    return this._http.post(this.baseUrl + '/createTable', JSON.stringify(table), this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  deleteTable(id: Number): Observable<any> {\n    return this._http.delete(this.baseUrl + '/deleteTable/' + id, this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n\n  }\n  editTable(table: Table): Observable<any> {\n    return this._http.put(this.baseUrl + '/updateTable', JSON.stringify(table), this.options)\n      .pipe(map((response: Response) => response.json())\n        , catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  getTableName(tableId: number) {\n    return this._http.get(this.baseUrl + '/getTableName/' + tableId, this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n  updateStatus(table:Table){\n    return this._http.put(this.baseUrl + '/updateStatus',JSON.stringify(table), this.options)\n    .pipe(map((response: Response) => response.json()),\n      catchError((error: any) => {\n        return Observable.throw(error);\n      }));\n  }\n}\n\n\n"],"sourceRoot":""}