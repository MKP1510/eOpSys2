{"version":3,"sources":["webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: LoginComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class LoginRoutingModule {}\n","module.exports = \"<div class=\\\"login-page\\\" [@routerTransition]>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4\\\">\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <h6>Login</h6>\\n                <form (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\">\\n                    <div class=\\\"example-form\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                            <input matInput placeholder=\\\"Enter your User Name\\\" name=\\\"userName\\\" [(ngModel)]=\\\"user.userName\\\" required>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"example-form\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                            <input matInput type=\\\"password\\\" placeholder=\\\"Enter your password\\\"  name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\"\\n                                required>\\n                        </mat-form-field>\\n                    </div>\\n                    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"login()\\\" [disabled]=\\\"!formControl.valid\\\" style=\\\"margin-left: 40px;\\\" value=\\\"save\\\">Login</button>\\n                    <button type=\\\"reset\\\" mat-raised-button value=\\\"reset\\\" color=\\\"warn\\\" style=\\\"margin-left: 40px;\\\">Reset</button>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".container {\\n  margin-top: 200px; }\\n\\n.example-form {\\n  margin-top: 20px;\\n  min-width: 100px;\\n  max-width: 400px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%;\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 20px; }\\n\\nh6 {\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 24px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { routerTransition } from '../router.animations';\nimport {LoginService} from './login.service';\nimport {user} from '../restaurants/admin/settings/accesscontrol/user';\nimport {Role} from '../restaurants/admin/settings/accesscontrol/role';\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n    animations: [routerTransition()]\n})\nexport class LoginComponent implements OnInit {\n    private user:user;\n    private role:Role[];\n    private password;\n    constructor(public router: Router,\n        private loginService:LoginService) {}\n\n    ngOnInit() {\n        this.user=new user();\n    }\n    onLoggedin() {\n        localStorage.setItem('isLoggedin', 'true');\n    }\n    login(){\n        this.password=this.user.password;\n        this.loginService.logIn(this.user).subscribe((data)=>{\n            this.user=data;\n            this.role=this.user.role\n            if(this.password==this.user.password)\n            {\n                if(this.user.status=='Active'){\n                    if(this.role[0].role=='SUPERADMIN' ||this.role[0].role=='ADMIN'|| this.role[0].role=='COUNTER'){\n                        this.router.navigate(['restaurants/admin']);\n                    }\n                    else if(this.role[0].role=='WAITER'){\n                        this.router.navigate(['restaurants/waiter']);\n                    }\n                    else if(this.role[0].role=='COOK'){\n                        this.router.navigate(['restaurants/kitchen']);\n                    }\n                }else{\n                    alert(\"This user is not Active \")\n                }\n            }else{\n                alert(\"Your Passward is Worng!\")\n            }\n           \n        },(error)=>{\n            alert('User Name is Worng!')\n        });\n      }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport {MatInputModule,MatSelectModule,MatButtonModule,MatIconModule} from '@angular/material';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport {LoginService} from './login.service';\nimport{HttpModule} from '@angular/http';\n@NgModule({\n    imports: [CommonModule, LoginRoutingModule,\n        MatInputModule,MatSelectModule,MatButtonModule,MatIconModule,\n        FormsModule,ReactiveFormsModule,HttpModule\n    ],providers:[\n        LoginService\n    ],\n    declarations: [LoginComponent]\n})\nexport class LoginModule {}\n"],"sourceRoot":""}