{"version":3,"sources":["webpack:///./src/app/restaurants/admin/settings/accesscontrol/accesscontrol-routing.module.ts","webpack:///./src/app/restaurants/admin/settings/accesscontrol/accesscontrol.component.css","webpack:///./src/app/restaurants/admin/settings/accesscontrol/accesscontrol.component.html","webpack:///./src/app/restaurants/admin/settings/accesscontrol/accesscontrol.component.ts","webpack:///./src/app/restaurants/admin/settings/accesscontrol/accesscontrol.module.ts","webpack:///./src/app/restaurants/admin/settings/accesscontrol/accesscontrol.service.ts","webpack:///./src/app/restaurants/admin/settings/accesscontrol/update-user/update-user.component.css","webpack:///./src/app/restaurants/admin/settings/accesscontrol/update-user/update-user.component.html","webpack:///./src/app/restaurants/admin/settings/accesscontrol/update-user/update-user.component.ts"],"names":[],"mappings":"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","file":"settings-accesscontrol-accesscontrol-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AccesscontrolComponent } from './accesscontrol.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: AccesscontrolComponent,\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AccesscontorlRoutingModule {\r\n}\r\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 100%;\\r\\n    padding-left: 20px;\\r\\n    padding-top: 20px;\\r\\n  }\\r\\n  \\r\\n  button{\\r\\n    margin-left: 20px;\\r\\n    margin-top: 20px;\\r\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"example-container mat-elevation-z8\\\">\\n    <div class=\\\"example-header\\\">\\n      <mat-form-field>\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n      </mat-form-field>\\n    </div>\\n    <mat-header-cell *matHeaderCellDef>\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n      </button>\\n    </mat-header-cell>\\n    <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n      <!-- Position Column -->\\n      <ng-container matColumnDef=\\\"userId\\\">\\n        <th mat-header-cell *matHeaderCellDef>User Id </th>\\n        <td mat-cell *matCellDef=\\\"let user\\\"> {{user.userId}} </td>\\n      </ng-container>\\n\\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"userName\\\">\\n        <th mat-header-cell *matHeaderCellDef>User Name </th>\\n        <td mat-cell *matCellDef=\\\"let user\\\"> {{user.userName}} </td>\\n      </ng-container>\\n\\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"mobileno\\\">\\n        <th mat-header-cell *matHeaderCellDef>Mobile No</th>\\n        <td mat-cell *matCellDef=\\\"let user\\\"> {{user.mobileNo}} </td>\\n      </ng-container>\\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"role\\\">\\n        <th mat-header-cell *matHeaderCellDef>Role </th>\\n        <td mat-cell *matCellDef=\\\"let user;let i=index;\\\"> {{user.role[0].role}} </td>\\n      </ng-container>\\n      <!-- Weight Column -->\\n      <ng-container matColumnDef=\\\"status\\\">\\n        <th mat-header-cell *matHeaderCellDef>Status</th>\\n        <td mat-cell *matCellDef=\\\"let user\\\"> {{user.status}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <mat-header-cell *matHeaderCellDef>\\n          <button matTooltip=\\\"Refresh\\\" mat-icon-button (click)=\\\"refresh()\\\">\\n            <mat-icon>refresh</mat-icon>\\n          </button>\\n        </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let user; let i=index;\\\">\\n          <button mat-icon-button matTooltip=\\\"Edit the customer\\\" color=\\\"accent\\\" (click)=\\\"updateUser(user.userId,user.employeeId,user.userName,user.role[0].role,user.status,user.mobileNo,user.password)\\\">\\n            <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\n          </button>\\n\\n        </mat-cell>\\n      </ng-container>\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let user; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 20]\\\" showFirstLastButtons></mat-paginator>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { AccesscontrolService } from './accesscontrol.service';\nimport { MatDialog } from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\nimport { MatTableDataSource, MatPaginator } from '@angular/material';\nimport {UpdateUserComponent} from './update-user/update-user.component';\n@Component({\n  selector: 'app-accesscontrol',\n  templateUrl: './accesscontrol.component.html',\n  styleUrls: ['./accesscontrol.component.css']\n})\nexport class AccesscontrolComponent implements OnInit {\n\n  constructor(private accesscontrolService: AccesscontrolService,\n    private dialog:MatDialog) { }\n  dataSource;\n  displayedColumns = ['userId', 'userName', 'mobileno', 'role', 'status', 'actions'];\n\n  ngOnInit() {\n    this.getAllUser();\n  }\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild('filter') filter: ElementRef;\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  getAllUser() {\n    this.accesscontrolService.gatAllUser().subscribe((data) => {\n      console.log(data);\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.paginator = this.paginator;\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n\n  updateUser(userId:number,employeeId:number,userName:string,role:string,status:string,mobileNo:string,password:string){\n    if(role!='SUPERADMIN'){\n      const dialogRef = this.dialog.open(UpdateUserComponent, {\n        data: { userId: userId,employeeId:employeeId,userName:userName,role:role,status:status,mobileNo:mobileNo,password:password }  \n      });\n      dialogRef.afterClosed().subscribe(result => {\n         this.getAllUser();\n      });\n    }\n    else{\n      alert(\"D'Not Change Super Admin\")\n    }\n   \n  }\n  refresh(){\n    this.getAllUser();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AccesscontrolComponent } from './accesscontrol.component';\nimport {AccesscontrolService} from './accesscontrol.service';\nimport {AccesscontorlRoutingModule} from './accesscontrol-routing.module';\nimport { HttpModule } from '@angular/http';\nimport {\n  MatTableModule, MatDialogModule, MatButtonModule,MatRadioModule,\n  MatInputModule, MatPaginatorModule, MatIconModule, MatTooltipModule,\n  MatFormFieldModule, MatToolbarModule, MatSortModule, MatSelectModule,MatDatepickerModule\n} from '@angular/material';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UpdateUserComponent } from './update-user/update-user.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    AccesscontorlRoutingModule,HttpModule,\n    MatTableModule, MatDialogModule, MatButtonModule,MatRadioModule,ReactiveFormsModule,\n    MatInputModule, MatPaginatorModule, MatIconModule, MatTooltipModule,FormsModule,\n    MatFormFieldModule, MatToolbarModule, MatSortModule, MatSelectModule,MatDatepickerModule\n  ],\n  providers:[\n    AccesscontrolService\n  ],entryComponents:[\n    UpdateUserComponent\n  ],\n  declarations: [AccesscontrolComponent, UpdateUserComponent]\n})\nexport class AccesscontrolModule { }\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  map, filter, catchError, mergeMap,\n} from 'rxjs/operators';\nimport {user} from './user';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccesscontrolService {\n  private baseUrl: string = 'http://localhost:8080/api';\n\n  private headers = new Headers({ 'Content-Type': 'application/json' });\n\n  private options = new RequestOptions({ headers: this.headers });\n  constructor(private _http: Http) { }\n\n  gatAllUser() {\n    return this._http.get(this.baseUrl + '/getAllUser', this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error) => {\n          return Observable.throw(error);\n        }));\n  }\n  updateUser(user:user){\n    console.log(user);\n    return this._http.put(this.baseUrl + '/updateUser',JSON.stringify(user), this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error) => {\n          return Observable.throw(error);\n        }));\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"panel\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h4 style=\\\"text-align: center;\\\">User Status</h4>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <form class=\\\"mat-dialog-content\\\" (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\">\\n        <div class=\\\"form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select name=\\\"status\\\" placeholder=\\\"Status\\\" [(ngModel)]=\\\"data.status\\\" required>\\n              <mat-option value=\\\"Active\\\">Active</mat-option>\\n              <mat-option value=\\\"Deactive\\\">Deactive</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n        <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"updateUser()\\\">Save</button>\\n        <button type=\\\"reset\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\" onNoClick()\\\">Cancel</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport {AccesscontrolService} from '../accesscontrol.service';\nimport {user} from '../user';\nimport{Role} from '../role';\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css']\n})\nexport class UpdateUserComponent implements OnInit {\n\n  private user:user;\n  Role=[{role:''}];\n  constructor(public dialogRef: MatDialogRef<UpdateUserComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private accesscontrolService: AccesscontrolService) { }\n\n  ngOnInit() {\n    console.log(this.data);\n    this.user=new user();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  updateUser(){\n    this.user.userId=this.data.userId;\n    this.user.userName=this.data.userName;\n    this.user.status=this.data.status;\n    this.user.mobileNo=this.data.mobileNo;\n    this.user.password=this.data.password;\n    this.user.employeeId=this.data.employeeId;\n    this.Role[0].role=this.data.role;\n    this.user.role=this.Role;\n    console.log('2',this.user);\n    this.accesscontrolService.updateUser(this.user).subscribe((data)=>{\n      alert(\"Update Successfully\")\n      this.dialogRef.close();\n    },(error)=>{\n      console.log(error);\n    })\n  }\n}\n"],"sourceRoot":""}