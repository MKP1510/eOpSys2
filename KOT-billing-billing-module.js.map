{"version":3,"sources":["webpack:///./src/app/restaurants/admin/KOT/billing/billing-routing.module.ts","webpack:///./src/app/restaurants/admin/KOT/billing/billing.component.css","webpack:///./src/app/restaurants/admin/KOT/billing/billing.component.html","webpack:///./src/app/restaurants/admin/KOT/billing/billing.component.ts","webpack:///./src/app/restaurants/admin/KOT/billing/billing.module.ts","webpack:///./src/app/restaurants/admin/KOT/billing/billing.service.ts","webpack:///./src/app/restaurants/admin/KOT/billing/billing.ts","webpack:///./src/app/restaurants/admin/KOT/table/table.service.ts"],"names":[],"mappings":"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","file":"KOT-billing-billing-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BillingComponent } from './billing.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: BillingComponent,\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class BillingRoutingModule{\r\n}\r\n","module.exports = \".container{\\r\\n    margin-top: 50px;\\r\\n    margin-left: 50px;\\r\\n    margin-right: 100px;\\r\\n    background-color:aliceblue;\\r\\n    width: 1100px;\\r\\n}\\r\\nh6{\\r\\n    text-align: center;\\r\\n    font-size: 14px;\\r\\n}\\r\\n#order{\\r\\nmargin-top: 10px;\\r\\npadding-top: 10px;\\r\\nmargin-bottom: 10px;\\r\\n}\\r\\n#menuname{\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n#menulist{\\r\\n    margin-top: 10px;\\r\\n}\\r\\n#amount{\\r\\n    margin-top: 10px;\\r\\n}\\r\\nbutton{\\r\\n    margin-top: 10px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\" id=\\\"order\\\">\\n    <div class=\\\"col-sm-2\\\">\\n      <h6>Order Id: {{orderId}}</h6>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      <h6>Waiter Name: {{waiterName}}</h6>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      <h6>Table Name: {{tableName}}</h6>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      <h6>Date: {{order.date}}</h6>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      <h6>Time: {{order.time}}</h6>\\n    </div>\\n  </div>\\n  <mat-divider></mat-divider>\\n  <div class=\\\"row\\\" id=\\\"menuname\\\">\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>Menu Id</h6>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <h6> Menu Name</h6>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>Quantity</h6>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>Amount</h6>\\n    </div>\\n  </div>\\n  <mat-divider></mat-divider>\\n  <div *ngFor=\\\"let menu of menuOrder\\\">\\n    <div class=\\\"row\\\" id=\\\"menulist\\\">\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>{{menu.menuId}}</h6>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>{{menu.menuName}}</h6>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>{{menu.quantity}}</h6>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>{{menu.amount}}</h6>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-divider style=\\\"margin-top: 10px;\\\"></mat-divider>\\n  <div class=\\\"row\\\" id=\\\"amount\\\">\\n    <div class=\\\"col-sm-3\\\"></div>\\n    <div class=\\\"col-sm-3\\\"></div>\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>Amount</h6>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>{{amount}}</h6>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"tableType=='AC'\\\">\\n    <div class=\\\"row\\\" id=\\\"amount\\\">\\n      <div class=\\\"col-sm-3\\\"></div>\\n      <div class=\\\"col-sm-3\\\"></div>\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>Service Amount</h6>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>{{serviceCharge}}</h6>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\"></div>\\n    <div class=\\\"col-sm-3\\\"></div>\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>  \\n        <div class=\\\"form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\"  style=\\\"width: 100px; \\\">\\n            <mat-select name=\\\"discount\\\" placeholder=\\\"Discount\\\" required>\\n              <mat-option #dis1 value=\\\"0\\\" (click)=\\\"discounts(dis1.value)\\\">0%</mat-option>\\n              <mat-option #dis2 value=\\\"5\\\" (click)=\\\"discounts(dis2.value)\\\">5%</mat-option>\\n              <mat-option #dis3 value=\\\"10\\\" (click)=\\\"discounts(dis3.value)\\\">10%</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </h6>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>{{discount}}</h6>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\"></div>\\n    <div class=\\\"col-sm-3\\\">\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>\\n        <div class=\\\"form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\"  style=\\\"width: 100px; \\\">\\n            <mat-select name=\\\"gst\\\" placeholder=\\\"GST\\\" [(ngModel)]=\\\"billing.gst\\\" required>\\n              <div *ngFor=\\\"let gsts of gst\\\">\\n                <div *ngIf=\\\"gsts.gstType=='intergstdealer'\\\">\\n                    <mat-option value=\\\"{{gsts.gst}}\\\" (click)=\\\"calgst(gsts.gst)\\\">{{gsts.gst}}</mat-option>\\n                </div> \\n              </div>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </h6>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>{{gsts}}</h6>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" id=\\\"amount\\\">\\n    <div class=\\\"col-sm-3\\\"></div>\\n    <div class=\\\"col-sm-3\\\"></div>\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>Total Amount</h6>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>{{totalamount}}</h6>\\n    </div>\\n  </div>\\n  <mat-divider style=\\\"margin-top: 10px;\\\"></mat-divider>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"form\\\">\\n            <mat-form-field class=\\\"example-full-width \\\">\\n              <mat-select name=\\\"cashType\\\" placeholder=\\\"Cash Type\\\" [(ngModel)]=\\\"billing.cashType\\\" required>\\n                <mat-option  value=\\\"cash\\\">Cash</mat-option>\\n                <mat-option value=\\\"card\\\">Card</mat-option>\\n                <mat-option value=\\\"cash\\\">Other</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput #input placeholder=\\\"Customer Mobile No\\\" aria-label=\\\"Customer Mobile No\\\" [matAutocomplete]=\\\"auto\\\" [(ngModel)]=\\\"billing.customerMobileNo\\\" >\\n            <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n                <mat-option #waiter *ngFor=\\\"let customers of customer\\\" [value]=\\\"customers.phoneNo\\\" (click)=\\\"customer1(customers.phoneNo)\\\">     \\n                        {{customers.phoneNo}}\\n                </mat-option>\\n            </mat-autocomplete>\\n        </mat-form-field>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n        <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"payment()\\\">Pay</button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {OrderService} from '../order/order.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport {Order} from '../order/order';\nimport { Table } from '../table/table';\nimport { TableService } from '../table/table.service';\nimport {MenuOrder} from '../order/menu-order';\nimport { TempOrder } from '../Order/temp-order';;\nimport { MatDialog } from '@angular/material';\nimport { DatePipe, Time } from '@angular/common';\nimport { Employee } from '../../HRM/employee/employee';\nimport {GstService} from '../../settings/gst/gst.service';\nimport {Gst} from '../../settings/gst/gst';\nimport {Billing} from './billing';\nimport {Customer} from '../../CRM/customer/customer';\nimport {CustomerService} from '../../CRM/customer/customer.service';\nimport{BillingService} from './billing.service';\n@Component({\n  selector: 'app-billing',\n  templateUrl: './billing.component.html',\n  styleUrls: ['./billing.component.css']\n})\nexport class BillingComponent implements OnInit {\n\n  private orderId:number\n  private order:Order;\n  private table:Table;\n  private menuOrder:MenuOrder[];\n  private gst:Gst[];\n  private billing:Billing;\n  private employee:Employee;\n  private customer:Customer[];\n  private tableId:number;\n  private tableName;\n  private tableType;\n  private serviceCharge;\n  private waiterId:number;\n  private waiterName:string;\n  private date:Date;\n  private time:Time;\n  private amount=0;\n  private totalamount=0;\n  private totalamount1=0;\n  private totalamount2=0;\n  private quantity=0;\n  private discount:number;\n  private gsts:number;\n  private phoneNo:number;\n  constructor(private orderService:OrderService,\n              private activatedRoute:ActivatedRoute,\n              private tableService:TableService,\n              private gstService:GstService,\n              private customerService:CustomerService,\n              private billingService:BillingService,\n              private router:Router\n              ) { }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(paramsId => {\n      this.orderId = paramsId.orderId;\n      console.log(this.orderId);\n    });\n    this.getOrder();\n    this.getMenuOrder();\n    this.getAllGst();\n    this.getAllCustomer();\n    this.billing=new Billing();\n  }\n\n  getOrder(){\n    this.orderService.getOrder(this.orderId).subscribe((data)=>{\n      this.order=data;\n      this.tableId=this.order.tableId;\n      this.waiterId=this.order.waiterId;\n      this.date=this.order.date;\n      this.time=this.order.time;\n      this.getTableName();\n      this.getWaiter();\n    },(error)=>{\n      console.log(error);\n    });\n  }\n  getTableName() {\n    this.tableService.getTableName(this.tableId).subscribe((data) => {\n      this.table = data;\n      this.tableName=this.table.tableName;\n      this.tableType=this.table.tableType;\n      this.serviceCharge=this.table.serviceCharge;\n      console.log('tableName', this.table)\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  getWaiter() {\n    console.log('WaiterId',this.waiterId);\n    this.orderService.getWaiter(this.waiterId).subscribe((data) => {\n      this.employee = data;\n      console.log(this.employee);\n      this.waiterName = this.employee.employeeName;\n      console.log(this.employee);\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  getMenuOrder(){\n    this.orderService.getMenuOrder(this.orderId).subscribe((data)=>{\n      this.menuOrder=data;\n      console.log('menu',this.amount);\n      for(let i of this.menuOrder){\n        this.quantity=this.quantity+i.quantity;\n        this.amount=this.amount+i.amount;\n      }\n      this.totalamount=this.amount;\n      this.totalamount1=this.totalamount;\n      console.log('amount',this.amount);\n      console.log('service',this.serviceCharge);\n    },(error)=>{\n      console.log(error);\n    });\n  }\n\n  getAllGst(){\n    this.gstService.getGst().subscribe((data)=>{\n      this.gst=data;\n      console.log('gst',this.gst);\n    },(error)=>{\n      console.log(error);\n    })\n  }\n  discounts(discounts:number){\n    console.log(discounts);\n    this.discount=0;\n    this.totalamount=this.totalamount1+this.serviceCharge;\n    this.discount=this.totalamount*discounts/100;\n    console.log(this.discount);\n    this.totalamount=this.totalamount-this.discount;\n    this.totalamount2=this.totalamount;\n  }\n  calgst(gst:number){\n   \n    this.gsts=0;\n    this.gsts=this.totalamount*gst/100;\n    this.totalamount=this.totalamount2+this.gsts;\n   \n  }\n\n  getAllCustomer(){\n    this.customerService.getCustomer().subscribe((data)=>{\n      this.customer=data;\n      console.log('customer',this.customer);\n    },(error)=>{\n      console.log(error);\n    });\n  }\n  customer1(phoneNo:number){\n    console.log(phoneNo)\n    this.phoneNo=phoneNo;\n  }\n  payment(){\n    this.billing.orderId=this.orderId;\n    this.billing.waiterId=this.waiterId;\n    this.billing.tableId=this.tableId;\n    this.billing.date=this.date;\n    this.billing.time=this.time;\n    this.billing.amount=this.amount;\n    this.billing.serviceCharge=this.serviceCharge;\n    this.billing.discount=this.discount;\n    this.billing.gstAmount=this.gsts;\n    this.billing.totalAmount=this.totalamount;\n    this.billing.customerMobileNo=this.phoneNo;\n    console.log('payment',this.billing)\n    this.billingService.saveBilling(this.billing).subscribe((data)=>{\n      console.log(data);\n      this.table.tableId=this.tableId;\n      this.table.status='available';\n      this.orderService.deleteTempOrderByTableId(this.tableId).subscribe((data)=>{\n        this.tableService.updateStatus(this.table).subscribe((data)=>{\n          this.orderService.updateOrderStatus(this.orderId).subscribe((data)=>{\n            console.log(data);\n            this.router.navigate(['restaurants/admin/liveorder'])\n          },(error)=>{\n            console.log(error);\n          });\n        },(error)=>{\n          console.log(error);\n        });\n      },(error)=>{\n        console.log(error);\n      });\n    },(error)=>{\n      console.log(error);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BillingComponent } from '../../KOT/billing/billing.component';\nimport {BillingRoutingModule} from './billing-routing.module';\nimport {BillingService} from './billing.service';\nimport {OrderService} from '../order/order.service';\nimport {\n  MatTableModule, MatDialogModule, MatButtonModule, MatRadioModule,MatCardModule,MatDividerModule,\n  MatInputModule, MatPaginatorModule, MatIconModule, MatTooltipModule,MatTabsModule,MatAutocompleteModule,\n  MatFormFieldModule, MatToolbarModule, MatSortModule, MatSelectModule, MatDatepickerModule\n} from '@angular/material';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { TableService } from '../table/table.service';\nimport {GstService} from '../../settings/gst/gst.service';\nimport {CustomerService} from '../../CRM/customer/customer.service';\n@NgModule({\n  imports: [\n    CommonModule,\n    BillingRoutingModule,\n    HttpModule,\n    MatDividerModule,\n    MatButtonModule,\n    FormsModule,\n     ReactiveFormsModule,\n     MatSelectModule,\n     MatFormFieldModule,\n     MatAutocompleteModule,\n     MatInputModule\n  ],\n  providers:[\n    BillingService,OrderService,TableService,GstService,CustomerService\n  ],\n  declarations: [BillingComponent]\n})\nexport class BillingModule { }\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  map, filter, catchError, mergeMap,\n} from 'rxjs/operators';\nimport { Billing } from './billing';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillingService {\n\n  private billing:Billing;\n  private baseUrl: string = 'http://localhost:8080/api';\n\n  private headers = new Headers({ 'Content-Type': 'application/json' });\n\n  private options = new RequestOptions({ headers: this.headers });\n  dialogData: any;\n\n  constructor(private _http: Http) { }\n\n  setter(billing:Billing){\n    this.billing=billing;\n  }\n\n  getter(){\n    return this.billing;\n  }\n\n  saveBilling(billing: Billing) {\n    return this._http.post(this.baseUrl + '/saveBilling', JSON.stringify(billing), this.options)\n      .pipe(map((response: Response) => response.json())\n        , catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  getAllBilling() {\n    return this._http.get(this.baseUrl + '/getAllBilling', this.options)\n      .pipe(map((response: Response) => response.json())\n        , catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  updateBilling(billing: Billing) {\n    return this._http.put(this.baseUrl + '/updateBilling', JSON.stringify(billing), this.options)\n      .pipe(map((response: Response) => response.json())\n        , catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  getBilling(billingId: number) {\n    return this._http.get(this.baseUrl + '/getBilling/' + billingId, this.options)\n      .pipe(map((response: Response) => response.json())\n        , catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n  \n  deleteBilling(billingId: number) {\n    return this._http.delete(this.baseUrl + '/deleteBilling/' + billingId, this.options)\n      .pipe(map((response: Response) => response.json())\n        , catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n}\n","import { Time } from \"../../../../../../node_modules/@angular/common\";\n\nexport class Billing {\n    billingId: number;\n    orderId: number;\n    waiterId: number;\n    tableId: number;\n    date: Date;\n    time: Time;\n    amount: number;\n    serviceCharge:number;\n    gst: number;\n    discount: number;\n    gstAmount: number;\n    totalAmount: number;\n    caseType: string;\n    customerMobileNo: number;\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Table } from './table';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableService {\n  private baseUrl: string = 'http://localhost:8080/api';\n\n  private headers = new Headers({ 'Content-Type': 'application/json' });\n\n  private options = new RequestOptions({ headers: this.headers });\n\n  private table: Table;\n\n  dialogData: any;\n\n  dataChange: BehaviorSubject<Table[]> = new BehaviorSubject<Table[]>([]);\n\n  constructor(private _http: Http) { }\n\n  getter() {\n    return this.table;\n  }\n\n  setter(table: Table) {\n    this.table = table;\n  }\n\n\n  getAllTableList(): Observable<Table[]> {\n    return this._http.get(this.baseUrl + '/GetAllTables', this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  createTable(table: Table): Observable<any> {\n    return this._http.post(this.baseUrl + '/createTable', JSON.stringify(table), this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  deleteTable(id: Number): Observable<any> {\n    return this._http.delete(this.baseUrl + '/deleteTable/' + id, this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n\n  }\n  editTable(table: Table): Observable<any> {\n    return this._http.put(this.baseUrl + '/updateTable', JSON.stringify(table), this.options)\n      .pipe(map((response: Response) => response.json())\n        , catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  getTableName(tableId: number) {\n    return this._http.get(this.baseUrl + '/getTableName/' + tableId, this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n  updateStatus(table:Table){\n    return this._http.put(this.baseUrl + '/updateStatus',JSON.stringify(table), this.options)\n    .pipe(map((response: Response) => response.json()),\n      catchError((error: any) => {\n        return Observable.throw(error);\n      }));\n  }\n}\n\n\n"],"sourceRoot":""}