{"version":3,"sources":["webpack:///./src/app/restaurants/admin/inventory/recipes/addrecipes/addrecipes.component.css","webpack:///./src/app/restaurants/admin/inventory/recipes/addrecipes/addrecipes.component.html","webpack:///./src/app/restaurants/admin/inventory/recipes/addrecipes/addrecipes.component.ts","webpack:///./src/app/restaurants/admin/inventory/recipes/deleterecipes/deleterecipes.component.css","webpack:///./src/app/restaurants/admin/inventory/recipes/deleterecipes/deleterecipes.component.html","webpack:///./src/app/restaurants/admin/inventory/recipes/deleterecipes/deleterecipes.component.ts","webpack:///./src/app/restaurants/admin/inventory/recipes/editrecipes/editrecipes.component.css","webpack:///./src/app/restaurants/admin/inventory/recipes/editrecipes/editrecipes.component.html","webpack:///./src/app/restaurants/admin/inventory/recipes/editrecipes/editrecipes.component.ts","webpack:///./src/app/restaurants/admin/inventory/recipes/recipes-routing.module.ts","webpack:///./src/app/restaurants/admin/inventory/recipes/recipes.component.css","webpack:///./src/app/restaurants/admin/inventory/recipes/recipes.component.html","webpack:///./src/app/restaurants/admin/inventory/recipes/recipes.component.ts","webpack:///./src/app/restaurants/admin/inventory/recipes/recipes.module.ts","webpack:///./src/app/restaurants/admin/inventory/recipes/view-ingredients/view-ingredients.component.css","webpack:///./src/app/restaurants/admin/inventory/recipes/view-ingredients/view-ingredients.component.html","webpack:///./src/app/restaurants/admin/inventory/recipes/view-ingredients/view-ingredients.component.ts"],"names":[],"mappings":"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","file":"inventory-recipes-recipes-module.js","sourcesContent":["module.exports = \".example-full-width,h6,.form{\\r\\n    text-align: center;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    font-size: 14px;\\r\\n}\\r\\n.container{\\r\\n    margin-top: 50px;\\r\\n    margin-left: 100px;\\r\\n    width: 800px;\\r\\n}\\r\\nh6{\\r\\n    text-align: center;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    font-size: 20px;\\r\\n  }\\r\\n \"","module.exports = \"<div class=\\\"container\\\">\\n  <h6>Add Recipes</h6>\\n  <form (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput #name  placeholder=\\\"Menu Name\\\" #input aria-label=\\\"State\\\" [(ngModel)]=\\\"recipes.menuName\\\"  [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"stateCtrl\\\">\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"getMenuName($event.option.value)\\\">\\n            <mat-option *ngFor=\\\"let state of filteredStates | async\\\" [value]=\\\"state.menuName\\\" >\\n              <span>{{state.menuCode}}  |  </span>\\n              <small>{{state.menuName}}</small>\\n            </mat-option>\\n          </mat-autocomplete>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput #inputstate #name  placeholder=\\\"Quantity\\\" [(ngModel)]=\\\"recipes.quantity\\\" name=\\\"quantity\\\" required>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select name=\\\"Unit\\\" #input placeholder=\\\"Unit\\\" [(ngModel)]=\\\"recipes.unit\\\" (ngModelChange)=\\\"calcMenuUnit(recipes.quantity,recipes.unit)\\\"\\n              required>\\n              <mat-option value=\\\"KiloGram\\\">KG</mat-option>\\n              <mat-option value=\\\"Gram\\\">GRAM</mat-option>\\n              <mat-option value=\\\"Litre\\\">LITER</mat-option>\\n              <mat-option value=\\\"MilliLitre\\\">ML</mat-option>\\n              <mat-option value=\\\"Pieces\\\">Pieces</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <mat-divider style=\\\"margin-top: 10px; margin-bottom: 10px;\\\"></mat-divider>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <h6>Item Name</h6>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>Quantity</h6>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>Unit</h6>\\n      </div>\\n      <div class=\\\"col-sm-2\\\">\\n        <h6>Action</h6>\\n      </div>\\n    </div>\\n    <mat-divider style=\\\"margin-top: 10px; margin-bottom: 10px;\\\"></mat-divider>\\n    <div *ngFor=\\\"let options of Option; let in=index;\\\" class=\\\"row\\\" id=\\\"item\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\" style=\\\"width: 150px;\\\">\\n            <input matInput #input placeholder=\\\"Item Name\\\" aria-label=\\\"itemName\\\"  name=\\\"itemName{{in}}\\\" [matAutocomplete]=\\\"auto2\\\" [formControl]=\\\"testCtrl\\\">\\n            <mat-autocomplete #auto2=\\\"matAutocomplete\\\" (optionSelected)=\\\"getItemName($event.option.value,in)\\\">\\n              <mat-option #waiter *ngFor=\\\"let state of filteredtest | async\\\" [value]=\\\"state.itemName\\\">\\n                <span>{{state.itemCode}}  |  </span>\\n                <small>{{state.itemName}}</small>\\n              </mat-option>\\n            </mat-autocomplete>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\" style=\\\"width: 150px;\\\">\\n            <input matInput placeholder=\\\"Quantity\\\" [(ngModel)]=\\\"Option[in].quantity\\\" name=\\\"quantity{{in}}\\\" required>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\" style=\\\"width: 150px;\\\">\\n            <mat-select placeholder=\\\"Unit\\\" [(ngModel)]=\\\"Option[in].unit\\\" name=\\\"unit{{in}}\\\" (ngModelChange)=\\\"calcItemUnit(in,Option[in].quantity,Option[in].unit)\\\"\\n               required>\\n              <mat-option value=\\\"KiloGram\\\">KG</mat-option>\\n              <mat-option value=\\\"Gram\\\">GRAM</mat-option>\\n              <mat-option value=\\\"Litre\\\">LITRE</mat-option>\\n              <mat-option value=\\\"MilliLitre\\\">ML</mat-option>\\n              <mat-option value=\\\"Pieces\\\">Pieces</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-2\\\">\\n        <div class=\\\"form\\\">\\n          <button mat-icon-button (click)=\\\"add()\\\" [disabled]=\\\"!formControl.valid\\\">\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n          </button>\\n          <button mat-icon-button (click)=\\\"remove(in)\\\">\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete</mat-icon>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <mat-divider style=\\\"margin-top: 10px; margin-bottom: 10px;\\\"></mat-divider>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <button mat-raised-button color=\\\"primary\\\" style=\\\"margin-left: 20px;\\\" [type]=\\\"submit\\\" (click)=\\\" saveRecipes()\\\">Save F2</button>\\n        <button mat-raised-button color=\\\"accent\\\" style=\\\"margin-left: 20px;\\\" (click)=\\\"onNoClick()\\\" type=\\\"reset\\\">Cancel F4</button>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n      </div>\\n    </div>\\n  </form>\\n\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { RecipesService } from '../recipes.service';\nimport { ItemMasterService } from '../../item-master/item-master.service';\nimport { MenuMasterService } from '../../../KOT/menu-master/menu-master.service';\nimport { Recipes } from '../recipes';\nimport { ItemMaster } from '../../item-master/item-master';\nimport { MenuMaster } from '../../../KOT/menu-master/menu-master';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport * as $ from 'jquery/dist/jquery.min.js';\n@Component({\n  selector: 'app-addrecipes',\n  host: { '(window:keydown)': 'hotkeys($event)' },\n  templateUrl: './addrecipes.component.html',\n  styleUrls: ['./addrecipes.component.css']\n})\nexport class AddrecipesComponent implements OnInit {\n\n  private recipes: Recipes;\n  private itemMaster: ItemMaster[];\n  private itemMaster1: ItemMaster;\n  private menuMaster: MenuMaster[];\n  private menuMaster1: MenuMaster;\n  stateCtrl = new FormControl();\n  testCtrl = new FormControl();\n  filteredStates: Observable<MenuMaster[]>\n  filteredtest: Observable<ItemMaster[]>\n\n  private quantity;\n  private quantity1 = [];\n  Option = [{ itemId: '', itemName: '', quantity: '', unit: '' }]\n  @ViewChild(\"name\") nameField: ElementRef;\n\n  constructor(\n    private recipesService: RecipesService,\n    private itemMasterService: ItemMasterService,\n    private menuMasterService: MenuMasterService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.recipes = new Recipes();\n    this.getAllMenuMaster();\n    this.getAllItemMaster();\n  }\n\n\n\n  hotkeys(event) {\n    if (event.keyCode == 113) {\n      this.saveRecipes();\n    }\n    if (event.keyCode == 115) {\n      this.onNoClick();\n    }\n  }\n\n  getAllMenuMaster() {\n    this.menuMasterService.getMenuMaster().subscribe((data) => {\n      this.menuMaster = data;\n      console.log(this.menuMaster)\n      this.filteredStates = this.stateCtrl.valueChanges\n        .pipe(\n          startWith(''),\n          map(state => state ? this._filterStates(state) : this.menuMaster.slice())\n        );\n    }, (error) => {\n      console.log(error);\n    })\n  }\n\n\n  private _filterStates(value: string): MenuMaster[] {\n    const filterValue = value.toLowerCase();\n    return this.menuMaster.filter(menu => menu.menuCode.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  getMenuName(menuName: string) {\n    this.menuMasterService.getMenuDetails(menuName).subscribe((data) => {\n      this.menuMaster1 = data;\n      this.recipes.menuId = this.menuMaster1.menuId;\n    }, (error) => {\n      console.log(error);\n    })\n  }\n\n  getAllItemMaster() {\n    this.itemMasterService.getAllItemMaster().subscribe((data) => {\n      this.itemMaster = data;\n      console.log(this.itemMaster)\n      this.filteredtest = this.testCtrl.valueChanges\n        .pipe(\n          startWith(''),\n          map(state => state ? this._filterState(state) : this.itemMaster.slice())\n        );\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  private _filterState(value: string): ItemMaster[] {\n    const filterValue = value.toLowerCase();\n    return this.itemMaster.filter(item => item.itemCode.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  getItemName(itemName: string, i: number) {\n    this.Option[i].itemName=itemName;\n    this.itemMasterService.getItemMasterByItemName(itemName).subscribe((data) => {\n      \n      this.itemMaster1 = data;\n      this.Option[i].itemId = this.itemMaster1.itemId.toString();\n    }, (error) => {\n      console.log(error);\n    })\n  }\n\n  selectIdemId(i: number, itemId: number, itemName: string) {\n    this.Option[i].itemId = itemId.toString();\n    this.Option[i].itemName = itemName;\n    console.log(this.Option)\n  }\n\n  calcMenuUnit(quantity: number, unit: string) {\n    console.log('unit', unit, 'q', quantity)\n    if (unit == 'Gram' || unit == 'MilliLitre' || unit == 'Pieces') {\n      console.log('1', this.quantity);\n      this.quantity = quantity;\n      console.log('2', this.quantity);\n    }\n    else if (unit == 'KiloGram' || unit == 'Litre') {\n      console.log('1', this.quantity);\n      this.quantity = quantity * 1000;\n      console.log('2', this.quantity);\n    }\n    console.log(this.quantity);\n  }\n\n  calcItemUnit(i: number, quantity: number, unit: string) {\n    if (unit == 'Gram' || unit == 'MilliLitre' || unit == 'Pieces') {\n      this.quantity1[i] = quantity;\n    }\n    else if (unit == 'KiloGram' || unit == 'Litre') {\n      this.quantity1[i] = quantity * 1000;\n    }\n    console.log(this.quantity1[i]);\n    console.log(this.quantity1);\n  }\n\n  add() {\n    this.Option.push({ itemId: '', itemName: '', quantity: '', unit: '' });\n  }\n\n  remove(i:number) {\n    this.Option.splice(i,1)\n  }\n\n  saveRecipes() {\n    let i;\n    this.recipes.quantity = this.quantity;\n    for (i = 0; i < this.quantity1.length; i++) {\n      this.Option[i].quantity = this.quantity1[i];\n    }\n    this.recipes.ingredients = this.Option;\n    console.log(this.recipes);\n    this.recipesService.saveRecipes(this.recipes).subscribe((data) => {\n      this.router.navigate(['restaurants/admin/recipes']);\n      alert('Save Recipes');\n    }, (error) => {\n      alert(\"All Ready this recipes are Added\");\n    });\n  }\n  onNoClick() {\n    this.router.navigate(['restaurants/admin/recipes']);\n  }\n}\n","module.exports = \"button{\\r\\n    \\r\\n}\\r\\np,h3{\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    font-size: 14px;\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <h3 mat-dialog-title>Are you sure want to permenantly delete?</h3>\\n  <div mat-dialog-content>\\n    <p> Recipes Id: {{data.recipesId}}</p>\\n    <p>Menu Name : {{data.menuName}}</p>\\n  </div>\\n  <div mat-dialog-actions>\\n    <button mat-raised-button color=\\\"primary\\\" style=\\\"margin-left: 20px;\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"confirmDeleteRecipes()\\\">Delete</button>\\n    <button mat-raised-button color=\\\"accent\\\" style=\\\"margin-left: 20px;\\\" (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n  </div>\\n</div>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport { RecipesService } from '../recipes.service';\nimport { Recipes } from '../recipes';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Ingredients } from '../ingredients';\n\n@Component({\n  selector: 'app-deleterecipes',\n  templateUrl: './deleterecipes.component.html',\n  styleUrls: ['./deleterecipes.component.css']\n})\nexport class DeleterecipesComponent implements OnInit {\n\n  private recipes: Recipes;\n  private ingredients:Ingredients[];\n  private recipesId\n  constructor(private recipesService: RecipesService,\n    public dialogRef: MatDialogRef<DeleterecipesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Recipes) { }\n\n  ngOnInit() {\n  }\n\n  onNoClick():void {\n    this.dialogRef.close();\n  }\n  confirmDeleteRecipes(){\n    this.recipesService.deleteRecipes(this.data.recipesId).subscribe((data)=>{\n      alert('Delete Successfully');\n    },(error)=>{\n      console.log(error);\n    })\n  }\n}\n","module.exports = \".example-full-width.form{\\r\\n    text-align: center;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    font-size: 14px;\\r\\n}\\r\\n.container{\\r\\n    margin-top: 50px;\\r\\n    margin-left: 100px;\\r\\n    width: 800px;\\r\\n}\\r\\nh6{\\r\\n    text-align: center;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    font-size: 20px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <h6>Edit Recipes</h6>\\n  <form (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Menu Name\\\" aria-label=\\\"State\\\" [(ngModel)]=\\\"recipes.menuName\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"stateCtrl\\\">\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n            <mat-option *ngFor=\\\"let state of filteredStates | async\\\" [value]=\\\"state.menuName\\\" (click)=\\\"selectMenuId(state.menuId)\\\">\\n              <span>{{state.menuCode}} </span>\\n              <small>{{state.menuName}}</small>\\n            </mat-option>\\n          </mat-autocomplete>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput #inputstate placeholder=\\\"Quantity\\\" [(ngModel)]=\\\"recipes.quantity\\\" name=\\\"quantity\\\" required>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select name=\\\"Unit\\\" placeholder=\\\"Unit\\\" [(ngModel)]=\\\"recipes.unit\\\" (ngModelChange)=\\\"calcMenuUnit(recipes.quantity,recipes.unit)\\\"\\n              required>\\n              <mat-option value=\\\"kiloGram\\\">KG</mat-option>\\n              <mat-option value=\\\"gram\\\">GRAM</mat-option>\\n              <mat-option value=\\\"litre\\\">LITER</mat-option>\\n              <mat-option value=\\\"milliLitre\\\">ML</mat-option>\\n              <mat-option value=\\\"others\\\">Others</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <mat-divider style=\\\"margin-top: 10px; margin-bottom: 10px;\\\"></mat-divider>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <h6>Item Name</h6>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <h6>Quantity</h6>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <h6>Unit</h6>\\n      </div>\\n    </div>\\n    <mat-divider style=\\\"margin-top: 10px; margin-bottom: 10px;\\\"></mat-divider>\\n    <div *ngFor=\\\"let options of Option; let in=index;\\\" class=\\\"row\\\" id=\\\"item\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\" style=\\\"width: 150px;\\\">\\n            <input matInput #input placeholder=\\\"Item Name\\\" aria-label=\\\"itemName\\\" [(ngModel)]=\\\"Option[in].itemName\\\" (ngModelChange)=\\\"select(in,Option[in].itemName)\\\"\\n              name=\\\"itemName{{in}}\\\" [matAutocomplete]=\\\"auto2\\\">\\n            <mat-autocomplete #auto2=\\\"matAutocomplete\\\">\\n              <mat-option #waiter *ngFor=\\\"let state of filteredtest | async\\\" [value]=\\\"state.itemName\\\" (click)=\\\"selectIdemId(in,state.itemId)\\\">\\n                <span>{{state.itemCode}}</span>\\n                <small>{{state.itemName}}</small>\\n              </mat-option>\\n            </mat-autocomplete>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\" style=\\\"width: 150px;\\\">\\n            <input matInput placeholder=\\\"Quantity\\\" [(ngModel)]=\\\"Option[in].quantity\\\" name=\\\"quantity{{in}}\\\" required>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\" style=\\\"width: 150px;\\\">\\n            <mat-select placeholder=\\\"Unit\\\" [(ngModel)]=\\\"Option[in].unit\\\" name=\\\"name{{in}}\\\" required>\\n              <mat-option value=\\\"KiloGram\\\">KG</mat-option>\\n              <mat-option value=\\\"Gram\\\">GRAM</mat-option>\\n              <mat-option value=\\\"Litre\\\">LITRE</mat-option>\\n              <mat-option value=\\\"MilliLitre\\\">ML</mat-option>\\n              <mat-option value=\\\"Pieces\\\">Pieces</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-10\\\">\\n      </div>\\n      <div class=\\\"col-sm-2\\\">\\n        <div class=\\\"form\\\">\\n          <button mat-icon-button (click)=\\\"add()\\\" [disabled]=\\\"!formControl.valid\\\">\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n          </button>\\n          <button mat-icon-button (click)=\\\"remove()\\\">\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete</mat-icon>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <mat-divider style=\\\"margin-top: 10px; margin-bottom: 10px;\\\"></mat-divider>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <button mat-raised-button color=\\\"primary\\\" style=\\\"margin-left: 20px;\\\" [type]=\\\"submit\\\" (click)=\\\" updateRecipes()\\\">Save</button>\\n        <button mat-raised-button color=\\\"accent\\\" style=\\\"margin-left: 20px;\\\" (click)=\\\"onNoClick()\\\" type=\\\"reset\\\">Cancel</button>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n\\n      </div>\\n    </div>\\n  </form>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RecipesService } from '../recipes.service';\nimport { ItemMasterService } from '../../item-master/item-master.service';\nimport { MenuMasterService } from '../../../KOT/menu-master/menu-master.service';\nimport { Recipes } from '../recipes';\nimport { ItemMaster } from '../../item-master/item-master';\nimport { MenuMaster } from '../../../KOT/menu-master/menu-master';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Ingredients } from '../ingredients';\n@Component({\n  selector: 'app-editrecipes',\n  templateUrl: './editrecipes.component.html',\n  styleUrls: ['./editrecipes.component.css']\n})\nexport class EditrecipesComponent implements OnInit {\n\n\n  private recipesId;\n  private recipes: Recipes;\n  private ingredients: Ingredients[];\n  private itemMaster: ItemMaster[];\n  private menuMaster: MenuMaster[];\n  stateCtrl = new FormControl();\n  testCtrl = new FormControl();\n  filteredStates: Observable<MenuMaster[]>\n  filteredtest: Observable<ItemMaster[]>\n  private quantity;\n  private quantity1 = [];\n  Option = [{itemId:'', itemName: '', quantity: '', unit: '' }]\n  constructor(private recipesService: RecipesService,\n    private itemMasterService: ItemMasterService,\n    private router:Router,\n    private menuMasterService: MenuMasterService,\n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(paramsId => {\n      this.recipesId = paramsId.recipesId;\n      console.log(this.recipesId);\n    });\n    this.getRecipes();\n    this.getAllMenuMaster();\n    this.getAllItemMaster();\n  }\n\n\n  getAllMenuMaster() {\n    this.menuMasterService.getMenuMaster().subscribe((data) => {\n      this.menuMaster = data;\n      console.log(this.menuMaster)\n      this.filteredStates = this.stateCtrl.valueChanges\n        .pipe(\n          startWith(''),\n          map(state => state ? this._filterStates(state) : this.menuMaster.slice())\n        );\n    }, (error) => {\n      console.log(error);\n    })\n  }\n\n  private _filterStates(value: string): MenuMaster[] {\n    const filterValue = value.toLowerCase();\n    return this.menuMaster.filter(menu => menu.menuCode.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n\n  getAllItemMaster() {\n    this.itemMasterService.getAllItemMaster().subscribe((data) => {\n      this.itemMaster = data;\n      console.log(this.itemMaster)\n      this.filteredtest = this.testCtrl.valueChanges\n        .pipe(\n          startWith(''),\n          map(state => state ? this._filterState(state) : this.itemMaster.slice())\n        );\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  private _filterState(value: string): ItemMaster[] {\n    const filterValue = value.toLowerCase();\n    return this.itemMaster.filter(item => item.itemCode.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  selectMenuId(menuId:number){\n    this.recipes.menuId=menuId;\n  }\n  selectIdemId(i:number,itemId:number){\n    this.Option[i].itemId=itemId.toString();\n    console.log(this.Option[i].itemId)\n  }\n\n  getRecipes() {\n    this.recipesService.getRecipes(this.recipesId).subscribe((data) => {\n      console.log(data);\n      this.recipes = data;\n      let i;\n      this.Option = this.recipes.ingredients;\n      for (i = 0; i < this.Option.length; i++) {\n        if (this.Option[i].unit == 'Gram' || this.Option[i].unit == 'MilliLitre' || this.Option[i].unit == 'Pieces') {\n          this.Option[i].quantity = this.Option[i].quantity;\n        }\n        else if (this.Option[i].unit == 'KiloGram' || this.Option[i].unit == 'Litre') {\n          let s = Number(this.Option[i].quantity);\n          s = s / 1000;\n          this.Option[i].quantity = s.toString();\n        }\n      }\n    }, (error) => {\n      console.log(error);\n    })\n  }\n  select(i: number, itemName: string) {\n    this.Option[i].itemName = itemName;\n    console.log(this.Option[i].itemName)\n  }\n  add() {\n    this.Option.push({itemId:'',  itemName: '', quantity: '', unit: '' });\n  }\n\n  remove() {\n    this.Option.pop();\n  }\n  updateRecipes() {\n    let i;\n    for (i = 0; i < this.Option.length; i++) {\n      if (this.Option[i].unit == 'Gram' || this.Option[i].unit == 'MilliLitre' || this.Option[i].unit == 'Pieces'){\n        this.Option[i].quantity = this.Option[i].quantity;\n      }\n      else if(this.Option[i].unit == 'KiloGram' || this.Option[i].unit == 'Litre'){\n        let s = Number(this.Option[i].quantity);\n        s = s * 1000;\n        this.Option[i].quantity = s.toString();\n      }\n    }\n    this.recipes.ingredients = this.Option;\n    console.log(this.recipes)\n    this.recipesService.updateRecipes(this.recipes).subscribe((data) => {\n      alert('Update Successfully');\n      this.router.navigate(['restaurants/admin/recipes']);\n    }, (error) => {\n      console.log(error);\n    });\n  }\n  onNoClick() {\n    this.router.navigate(['restaurants/admin/recipes']);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RecipesComponent } from './recipes.component';\r\nimport { AddrecipesComponent } from './addrecipes/addrecipes.component';\r\nimport { DeleterecipesComponent } from './deleterecipes/deleterecipes.component';\r\nimport { EditrecipesComponent } from './editrecipes/editrecipes.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: RecipesComponent\r\n    },\r\n    {\r\n        path: 'addRecipes', component: AddrecipesComponent\r\n    },\r\n    {\r\n        path: 'editRecipes/:recipesId', component: EditrecipesComponent\r\n    }\r\n\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class RecipesRoutingModule {\r\n}","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 100%;\\r\\n    padding-left: 20px;\\r\\n    padding-top: 20px;\\r\\n    padding-right: 20px;\\r\\n  }\\r\\n\\r\\n  button{\\r\\n    margin-left: 20px;\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  h6{\\r\\n    text-align: center;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    font-size: 20px;\\r\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n  <h6>Recipes</h6>\\n  <div class=\\\"example-container mat-elevation-z8\\\">\\n    <div class=\\\"example-header\\\">\\n      <mat-form-field>\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n      </mat-form-field>\\n    </div>\\n    <mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n      <mat-container matColumnDef=\\\"recpiesId\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Recipes Id</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let recipes\\\">{{recipes.recipesId}}</mat-cell>\\n      </mat-container>\\n\\n      <mat-container matColumnDef=\\\"recpiesName\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Recipes Name</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let recipes\\\">{{recipes.menuName}}</mat-cell>\\n      </mat-container>\\n\\n      <mat-container matColumnDef=\\\"quantity\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Quantity</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let recipes\\\">{{recipes.quantity}}</mat-cell>\\n      </mat-container>\\n\\n\\n      <mat-container matColumnDef=\\\"unit\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Unit</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let recipes\\\">{{recipes.unit}}</mat-cell>\\n      </mat-container>\\n      <mat-container matColumnDef=\\\"ingredients\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Ingredients</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let recipes\\\">\\n          <button mat-icon-button matTooltip=\\\"View Ingredients\\\" color=\\\"accent\\\" (click)=\\\"viewIngredients(recipes.recipesId)\\\">\\n            <mat-icon aria-label=\\\"Edit\\\">open_in_new</mat-icon>\\n          </button>\\n          </mat-cell>\\n      </mat-container>\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <mat-header-cell *matHeaderCellDef>\\n          <button mat-icon-button matTooltip=\\\"Add Recipes\\\" color=\\\"primary\\\" (click)=\\\"addRecipes()\\\">\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n          </button>\\n          <button matTooltip=\\\"Refresh\\\" mat-icon-button (click)=\\\"refresh()\\\">\\n            <mat-icon>refresh</mat-icon>\\n          </button>\\n        </mat-header-cell>\\n\\n        <mat-cell *matCellDef=\\\"let recipes; let i=index;\\\">\\n          <button mat-icon-button matTooltip=\\\"Edit Recipes\\\" color=\\\"accent\\\" (click)=\\\"editRecipes(i,recipes.recipesId)\\\">\\n            <mat-icon aria-label=\\\"Edit\\\">edit </mat-icon>\\n          </button>\\n\\n          <button mat-icon-button matTooltip=\\\"Delete Recipes\\\" color=\\\"accent\\\" (click)=\\\"deleteRecipes(i,recipes.recipesId,recipes.menuName,recipes.quantity)\\\">\\n            <mat-icon aria-label=\\\"Delete\\\">delete </mat-icon>\\n          </button>\\n\\n        </mat-cell>\\n      </ng-container>\\n      <mat-header-row mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    </mat-table>\\n    <mat-paginator [pageSizeOptions]=\\\"[ 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n  </div>\"","import { Component, OnInit, ViewChild,ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatTableDataSource, MatDialog, MatSort, MatPaginator } from '@angular/material';\nimport { Recipes } from './recipes';\nimport { RecipesService } from './recipes.service';\nimport {ViewIngredientsComponent} from './view-ingredients/view-ingredients.component';\nimport {DeleterecipesComponent}from './deleterecipes/deleterecipes.component';\n@Component({\n  selector: 'app-recipes',\n  host: {'(window:keydown)': 'hotkeys($event)'},\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n\n  private recipes: Recipes[];\n  dataSource;\n  displayedColumns = ['recpiesId', 'recpiesName', 'quantity', 'unit', 'ingredients', 'actions']\n\n\n  constructor(private router: Router,\n    private recipesService: RecipesService,\n    private dialog:MatDialog) { }\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild('filter') filter: ElementRef;\n    @ViewChild(MatSort) sort:MatSort;\n  \n    ngOnInit() {\n    this.getAllRecipes();\n    }\n    hotkeys(event){\n      if (event.keyCode == 113){\n         this.addRecipes();\n      }\n   }\n  \n    applyFilter(filterValue: string) {\n      filterValue = filterValue.trim(); // Remove whitespace\n      filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n      this.dataSource.filter = filterValue;\n    }\n\n    getAllRecipes(){\n      this.recipesService.getAllRecipes().subscribe((data)=>{\n        this.recipes=data;\n       \n      let i;\n      for (i = 0; i < this.recipes.length; i++) {\n        if (this.recipes[i].unit == 'Gram' || this.recipes[i].unit == 'MilliLitre' || this.recipes[i].unit == 'Pieces') {\n          this.recipes[i].quantity = this.recipes[i].quantity;\n        }\n        else if(this.recipes[i].unit == 'KiloGram' || this.recipes[i].unit == 'Litre') {\n          this.recipes[i].quantity = this.recipes[i].quantity/1000;\n        }\n      }\n      this.dataSource = new MatTableDataSource(this.recipes);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort=this.sort;\n      },(error)=>{\n        console.log(error);\n      })\n    }\n  \n  addRecipes() {\n    this.router.navigate(['restaurants/admin/recipes/addRecipes'])\n  }\n\n  refresh(){\n    this.getAllRecipes();\n  }\n  viewIngredients(recipesId:number){\n    const dialogRef = this.dialog.open(ViewIngredientsComponent,{\n      data:{recipesId:recipesId}\n     });\n     dialogRef.afterClosed().subscribe(result => {\n       if(result === 1){\n         this.getAllRecipes();\n    }\n     });\n  }\n  deleteRecipes(i:number,recipesId:number,menuName:string,quantity:number){\n    const dialogRef = this.dialog.open(DeleterecipesComponent,{\n      data:{recipesId:recipesId,menuName:menuName,guantity:quantity}\n     });\n     dialogRef.afterClosed().subscribe(result => {\n       if(result === 1){\n         this.getAllRecipes();\n    }\n     });\n  }\n  editRecipes(i:number,recipesId:number){\n    this.router.navigate(['restaurants/admin/recipes/editRecipes/'+recipesId])\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RecipesComponent } from './recipes.component';\nimport {RecipesRoutingModule} from './recipes-routing.module';\nimport {RecipesService} from './recipes.service';\nimport {ItemMasterService} from '../item-master/item-master.service';\nimport {MenuMasterService} from '../../KOT/menu-master/menu-master.service';\nimport { AddrecipesComponent } from './addrecipes/addrecipes.component';\nimport { EditrecipesComponent } from './editrecipes/editrecipes.component';\nimport { DeleterecipesComponent } from './deleterecipes/deleterecipes.component';\nimport { HttpModule } from '@angular/http';\nimport { DataTablesModule } from 'angular-datatables';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatTableModule, MatDialogModule, MatButtonModule, MatDatepickerModule,MatAutocompleteModule,\n  MatInputModule, MatPaginatorModule, MatIconModule, MatNativeDateModule,\n  MatSortModule, MatToolbarModule, MatSelectModule, MatTooltipModule, MatDividerModule\n} from '@angular/material';\nimport { ViewIngredientsComponent } from './view-ingredients/view-ingredients.component';\n@NgModule({\n  imports: [\n    CommonModule,RecipesRoutingModule,\n    HttpModule,FormsModule, ReactiveFormsModule,\n    MatTableModule, MatDialogModule, MatButtonModule, MatDatepickerModule,MatAutocompleteModule,\n    MatInputModule, MatPaginatorModule, MatIconModule, MatNativeDateModule,DataTablesModule,\n    MatSortModule, MatToolbarModule, MatSelectModule, MatTooltipModule, MatDividerModule\n  ],\n  providers:[\n    RecipesService,ItemMasterService,MenuMasterService\n  ], schemas:[\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  entryComponents:[\n    ViewIngredientsComponent,DeleterecipesComponent\n  ],\n  declarations: [RecipesComponent, AddrecipesComponent, EditrecipesComponent, DeleterecipesComponent, ViewIngredientsComponent]\n})\nexport class RecipesModule { }\n","module.exports = \"h6{\\r\\n    text-align: center;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    font-size: 14px;\\r\\n}\\r\\ntable{\\r\\n    text-align: center;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    font-size: 14px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <table datatable id=\\\"example\\\" class=\\\"row-border hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\n    <thead>\\n      <th>Ingredients Id</th>\\n      <th>Item Name</th>\\n      <th>Quantity</th>\\n      <th>Unit</th>\\n    </thead>\\n    <tbody *ngIf=\\\"ingredients?.length > 0\\\">\\n      <tr *ngFor=\\\"let in of ingredients\\\">\\n        <td>{{in.ingredientId}}</td>\\n        <td>{{in.itemName}}</td>\\n        <td>{{in.quantity}}</td>\\n        <td>{{in.unit}}</td>\\n      </tr>\\n    </tbody>\\n    <tbody *ngIf=\\\"ingredients?.length == 0\\\">\\n      <tr>\\n        <td class=\\\"no-data-available\\\" colspan=\\\"4\\\">No Data Available in datatable</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <mat-divider style=\\\"margin-top: 10px; margin-bottom: 10px;\\\"></mat-divider>\\n  <button mat-button style=\\\"float: right;\\\" (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Close</button>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { RecipesService } from '../recipes.service';\nimport { Recipes } from '../recipes';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Ingredients } from '../ingredients';\n@Component({\n  selector: 'app-view-ingredients',\n  templateUrl: './view-ingredients.component.html',\n  styleUrls: ['./view-ingredients.component.css']\n})\nexport class ViewIngredientsComponent implements OnInit {\n\n  private recipes: Recipes;\n  private ingredients: Ingredients[];\n  private recipesId\n\n  constructor(private recipesService: RecipesService,\n    public dialogRef: MatDialogRef<ViewIngredientsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Recipes) { }\n\n  ngOnInit() {\n    this.ingredients = [];\n    this.recipes = this.data;\n    this.recipesId = this.recipes.recipesId;\n    this.getRecipes();\n  }\n\n  getRecipes() {\n    this.recipesService.getRecipes(this.recipesId).subscribe((data) => {\n      this.recipes = data;\n      this.ingredients = this.recipes.ingredients;\n      let i;\n      for (i = 0; i < this.ingredients.length; i++) {\n        if (this.ingredients[i].unit == 'Gram' || this.ingredients[i].unit == 'MilliLitre' || this.ingredients[i].unit == 'Pieces') {\n          this.ingredients[i].quantity = this.ingredients[i].quantity;\n        }\n        else if (this.ingredients[i].unit == 'KiloGram' || this.ingredients[i].unit == 'Litre') {\n          this.ingredients[i].quantity = this.ingredients[i].quantity / 1000;\n        }\n      }\n    }, (error) => {\n      console.log(error);\n    });\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n"],"sourceRoot":""}