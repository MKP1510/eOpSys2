{"version":3,"sources":["webpack:///./src/app/restaurants/admin/KOT/order/menu-order.ts","webpack:///./src/app/restaurants/admin/KOT/table/table.service.ts","webpack:///./src/app/restaurants/waiter/billing/billing-routing.module.ts","webpack:///./src/app/restaurants/waiter/billing/billing.component.css","webpack:///./src/app/restaurants/waiter/billing/billing.component.html","webpack:///./src/app/restaurants/waiter/billing/billing.component.ts","webpack:///./src/app/restaurants/waiter/billing/billing.module.ts","webpack:///./src/app/restaurants/waiter/billing/billing.service.ts","webpack:///./src/app/restaurants/waiter/billing/billing.ts","webpack:///./src/app/restaurants/waiter/billing/print/print.component.css","webpack:///./src/app/restaurants/waiter/billing/print/print.component.html","webpack:///./src/app/restaurants/waiter/billing/print/print.component.ts"],"names":[],"mappings":"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","file":"billing-billing-module.js","sourcesContent":["export class MenuOrder {\n    menuOrderId:number;\n    menuId:number;\n    menuName:string;\n    gst:number;\n    basticAmount:number;\n    discount:number;\n    quantity:number;\n    amount:number;\n    gstAmount: number;\n    totalAmount:number;\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Table } from './table';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableService {\n  private baseUrl: string = 'http://localhost:8080/api';\n\n  private headers = new Headers({ 'Content-Type': 'application/json' });\n\n  private options = new RequestOptions({ headers: this.headers });\n\n  private table: Table;\n\n  dialogData: any;\n\n  dataChange: BehaviorSubject<Table[]> = new BehaviorSubject<Table[]>([]);\n\n  constructor(private _http: Http) { }\n\n  getter() {\n    return this.table;\n  }\n\n  setter(table: Table) {\n    this.table = table;\n  }\n\n\n  getAllTableList(): Observable<Table[]> {\n    return this._http.get(this.baseUrl + '/GetAllTables', this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  createTable(table: Table): Observable<any> {\n    return this._http.post(this.baseUrl + '/createTable', JSON.stringify(table), this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  deleteTable(id: Number): Observable<any> {\n    return this._http.delete(this.baseUrl + '/deleteTable/' + id, this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n\n  }\n  editTable(table: Table): Observable<any> {\n    return this._http.put(this.baseUrl + '/updateTable', JSON.stringify(table), this.options)\n      .pipe(map((response: Response) => response.json())\n        , catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  getTableName(tableId: number) {\n    return this._http.get(this.baseUrl + '/getTableName/' + tableId, this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n  updateStatus(table:Table){\n    return this._http.put(this.baseUrl + '/updateStatus',JSON.stringify(table), this.options)\n    .pipe(map((response: Response) => response.json()),\n      catchError((error: any) => {\n        return Observable.throw(error);\n      }));\n  }\n}\n\n\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BillingComponent } from './billing.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: BillingComponent,\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class BillingRoutingModule{\r\n}\r\n","module.exports = \".container{\\r\\n    margin-top: 150px;\\r\\n    background-color:aliceblue;\\r\\n    width: 100%;\\r\\n}\\r\\n.row{\\r\\n    margin-top: 10px;\\r\\n}\\r\\nh6{\\r\\n    text-align: center;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    font-size: 18px;\\r\\n}\\r\\n.example-full-width {\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n  <mat-card class=\\\"example-card\\\">\\n    <mat-card-header>\\n      <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\n        <div class=\\\"col-sm-2\\\">\\n          <h6>Order Id: {{orderId}}</h6>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <h6>Waiter Name: {{waiterName}}</h6>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <h6>Table Name: {{tableName}}</h6>\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <h6>Date:  {{date}}</h6>\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <h6>Time: {{time}}</h6>\\n        </div>\\n      </div>\\n    </mat-card-header>\\n    <mat-divider></mat-divider>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-2\\\">\\n        <h6>Description</h6>\\n      </div>\\n      <div class=\\\"col-sm-1\\\">\\n        <h6> Qty</h6>\\n      </div>\\n      <div class=\\\"col-sm-1\\\">\\n        <h6>MRP</h6>\\n      </div>\\n      <div class=\\\"col-sm-2\\\">\\n        <h6>Rate</h6>\\n      </div>\\n      <div class=\\\"col-sm-2\\\">\\n        <h6>Discount</h6>\\n      </div>\\n      <div class=\\\"col-sm-2\\\">\\n        <h6>GST</h6>\\n      </div>\\n      <div class=\\\"col-sm-2\\\">\\n        <h6>Amount</h6>\\n      </div>\\n    </div>\\n    <mat-divider style=\\\"margin-bottom: 10px;\\\"></mat-divider>\\n    <div class=\\\"row\\\" *ngFor=\\\"let menu of menuOrder\\\">\\n      <div class=\\\"col-sm-2\\\">\\n        <h6>{{menu.menuName}}</h6>\\n      </div>\\n      <div class=\\\"col-sm-1\\\">\\n        <h6>{{menu.quantity}}</h6>\\n      </div>\\n      <div class=\\\"col-sm-1\\\">\\n        <h6>{{menu.basicAmount}}</h6>\\n      </div>\\n      <div class=\\\"col-sm-2\\\">\\n        <h6>{{menu.amount}}</h6>\\n      </div>\\n      <div class=\\\"col-sm-2\\\">\\n        <h6>\\n          <div class=\\\"form\\\">\\n            <mat-form-field color=\\\"accent\\\" style=\\\"width: 50px; margin-top: -40px;\\\">\\n              <input matInput #input type=\\\"text\\\" [(ngModel)]=\\\"menu.discount\\\" (ngModelChange)=\\\"discounts(menu.menuOrderId,menu.gst,menu.discount,menu.amount)\\\"\\n                name=\\\"quantity\\\" style=\\\"width: 50px; text-align: center;\\\">\\n            </mat-form-field>\\n          </div>\\n        </h6>\\n      </div>\\n      <div class=\\\"col-sm-2\\\">\\n        <h6>{{menu.gstAmount}}</h6>\\n      </div>\\n      <div class=\\\"col-sm-2\\\">\\n        <h6>{{menu.totalAmount}}</h6>\\n      </div>\\n    </div>\\n    <mat-divider></mat-divider>\\n    <mat-card-content>\\n      <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\n        <div class=\\\"col-sm-2\\\">\\n          <h6>Total</h6>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <h6>{{quantity}}</h6>\\n        </div>\\n        <div class=\\\"col-sm-1\\\"></div>\\n        <div class=\\\"col-sm-2\\\"></div>\\n        <div class=\\\"col-sm-2\\\">\\n          <h6>{{discount}}</h6>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <h6>{{gstAmount}}</h6>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <h6>{{amount}}</h6>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"tableType=='AC'\\\">\\n        <div class=\\\"row\\\" id=\\\"amount\\\">\\n          <div class=\\\"col-sm-4\\\"></div>\\n          <div class=\\\"col-sm-4\\\"></div>\\n          <div class=\\\"col-sm-2\\\">\\n            <h6>Service Amount</h6>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n            <h6>{{serviceCharge}}</h6>\\n          </div>\\n        </div>\\n      </div>\\n      <mat-divider></mat-divider>\\n    </mat-card-content>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-8\\\"></div>\\n      <div class=\\\"col-sm-2\\\">Net Amount</div>\\n      <div class=\\\"col-sm-2\\\"><h6>{{totalamount}}</h6></div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-6\\\">\\n\\n      </div>\\n      <div class=\\\"col-sm-2\\\">\\n        <div class=\\\"form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select name=\\\"cashType\\\" placeholder=\\\"Cash Type\\\" [(ngModel)]=\\\"billing.cashType\\\" required>\\n              <mat-option value=\\\"cash\\\">Cash</mat-option>\\n              <mat-option value=\\\"card\\\">Card</mat-option>\\n              <mat-option value=\\\"cash and card\\\">Cash & Card</mat-option>\\n              <mat-option value=\\\"cash\\\">Other</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n        <div class=\\\"col-sm-2\\\" *ngIf=\\\"billing.cashType=='cash and card'\\\"> \\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput #cash type=\\\"text\\\" [(ngModel)]=\\\"billing.cashAmount\\\" name=\\\"cash\\\" (ngModelChange)=\\\"cashs(cash.value)\\\" style=\\\"width: 100px; text-align: center;\\\">\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"col-sm-2\\\" *ngIf=\\\"billing.cashType=='cash and card'\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput #card type=\\\"text\\\" [(ngModel)]=\\\"billing.cardAmount\\\" name=\\\"card\\\" (ngModelChange)=\\\"cards(card.value)\\\" style=\\\"width: 100px; text-align: center;\\\">\\n          </mat-form-field>\\n        </div>\\n    </div>\\n    <mat-card-actions>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\"></div>\\n        <div class=\\\"col-sm-2\\\">\\n            <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"payment()\\\">Pay</button>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n            <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"print()\\\">Print</button>\\n        </div>\\n      </div>\\n    </mat-card-actions>\\n  </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from '../../admin/KOT/order/order.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Order } from '../../admin/KOT/order/order';\nimport { Table } from '../../admin/KOT/table/table';\nimport { TableService } from '../../admin/KOT/table/table.service';\nimport { MenuOrder } from '../../admin/KOT/order/menu-order';\nimport { TempOrder } from '../../admin/KOT/Order/temp-order';;\nimport { DatePipe, Time } from '@angular/common';\nimport { Employee } from '../../admin/HRM/employee/employee';\nimport { GstService } from '../../admin/settings/gst/gst.service';\nimport { Gst } from '../../admin/settings/gst/gst';\nimport { Billing } from './billing';\nimport { Customer } from '../../admin/CRM/customer/customer';\nimport { CustomerService } from '../../admin/CRM/customer/customer.service';\nimport { BillingService } from './billing.service';\nimport { MatDialog, MatTableDataSource } from '@angular/material';\nimport {PrintComponent} from './print/print.component';\nimport {Pipe} from '@angular/core';\n\n@Pipe({name: 'round'})\n@Component({\n  selector: 'app-billing',\n  host: {'(window:keydown)': 'hotkeys($event)'},\n  templateUrl: './billing.component.html',\n  styleUrls: ['./billing.component.css']\n})\nexport class BillingComponent implements OnInit {\n\n  private orderId: number\n  private order: Order;\n  private table: Table;\n  private menuOrder: MenuOrder[];\n  private menuOrders: MenuOrder;\n  private gst: Gst[];\n  private billing: Billing;\n  private employee: Employee;\n  private customer: Customer[];\n  private tableId: number;\n  private tableName;\n  private tableType;\n  private serviceCharge;\n  private waiterId: number;\n  private waiterName: string;\n  private date: Date;\n  private time: Time;\n  private amount = 0;\n  private totalamount = 0;\n  private totalamount1 = 0;\n  private totalamount2 = 0;\n  private quantity = 0;\n  private discount: number;\n  private gsts: number;\n  private phoneNo: number;\n  private gstAmount;\n  constructor(private orderService: OrderService,\n    private activatedRoute: ActivatedRoute,\n    private tableService: TableService,\n    private _dialog: MatDialog,\n    private gstService: GstService,\n    private customerService: CustomerService,\n    private billingService: BillingService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(paramsId => {\n      this.orderId = paramsId.orderId;\n      console.log(this.orderId);\n    });\n    this.getOrder();\n    this.getMenuOrder();\n    this.getAllCustomer();\n    this.billing = new Billing();\n    this.menuOrders = new MenuOrder();\n  }\n\n  hotkeys(event){\n    if (event.keyCode == 113){\n       this.payment();\n    }\n }\n  getOrder() {\n    this.orderService.getOrder(this.orderId).subscribe((data) => {\n      this.order = data;\n      this.tableId = this.order.tableId;\n      this.waiterId = this.order.waiterId;\n      this.date = this.order.date;\n      this.time = this.order.time;\n      console.log(this.order)\n      this.getTableName();\n      this.getWaiter();\n    }, (error) => {\n      console.log(error);\n    });\n  }\n  getTableName() {\n    this.tableService.getTableName(this.tableId).subscribe((data) => {\n      this.table = data;\n      this.serviceCharge=0;\n      this.tableName = this.table.tableName;\n      this.tableType = this.table.tableType;\n      this.serviceCharge = this.table.serviceCharge;\n      console.log('amount', this.amount)\n      this.serviceCharge=this.amount*this.serviceCharge/100;\n      this.totalamount=this.totalamount+this.serviceCharge;\n      this.totalamount=Math.round(this.totalamount);\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  getWaiter() {\n    this.orderService.getWaiter(this.waiterId).subscribe((data) => {\n      this.employee = data;\n      this.waiterName = this.employee.employeeName;\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  getMenuOrder() {\n    this.orderService.getMenuOrder(this.orderId).subscribe((data) => {\n      this.menuOrder = data;\n      this.quantity = 0;\n      this.amount = 0;\n      this.gstAmount = 0;\n      this.discount = 0;\n      this.totalamount=0;\n      for (let i of this.menuOrder) {\n        this.quantity = this.quantity + i.quantity;\n        this.amount = this.amount + i.totalAmount;\n        this.gstAmount = this.gstAmount + i.gstAmount;\n        this.discount = this.discount + i.discount;\n      }\n      this.totalamount = this.amount;\n      this.getTableName();\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n\n  discounts(menuOrderId: number, gst: number, discount: number, amount: number) {\n    this.menuOrders.menuOrderId = menuOrderId;\n    this.menuOrders.discount = discount;\n    amount = amount - discount;\n    gst = amount * gst / 100\n    this.menuOrders.gstAmount = gst;\n    amount = amount + gst;\n    this.menuOrders.totalAmount = amount;\n    this.billingService.updateDiscount(this.menuOrders).subscribe((data) => {\n      this.getMenuOrder();\n    }, (error) => {\n      console.log(error);\n    })\n\n  }\n\n  getAllCustomer() {\n    this.customerService.getCustomer().subscribe((data) => {\n      this.customer = data;\n    }, (error) => {\n      console.log(error);\n    });\n  }\n  customer1(phoneNo: number) {\n    console.log(phoneNo)\n    this.phoneNo = phoneNo;\n  }\n \n  cashs(cahsAmount:number){\n    console.log(cahsAmount)\n    this.billing.cardAmount=this.totalamount-cahsAmount;\n  }\n  cards(cardAmount:number){\n    console.log(cardAmount)\n    this.billing.cashAmount=this.totalamount-cardAmount;\n  }\n\n  payment() {\n    console.log(this.billing.cashType)\n    if(this.billing.cashType==null){\n      alert(\"Please Select Cash type\");\n    }else{\n      this.billing.orderId = this.orderId;\n      this.billing.waiterId = this.waiterId;\n      this.billing.tableId = this.tableId;\n      this.billing.date = this.date;\n      this.billing.time = this.time;\n      this.billing.amount = this.amount;\n      this.billing.serviceCharge = this.serviceCharge;\n      this.billing.discount = this.discount;\n      this.billing.gstAmount = this.gstAmount;\n      this.billing.quantity=this.quantity;\n      this.billing.totalAmount = this.totalamount;\n      this.billing.customerMobileNo = this.phoneNo;\n      //this.saveItemMaster(this.orderId);\n      this.billingService.saveBilling(this.billing).subscribe((data) => {\n        this.saveItemMaster(this.orderId);\n      }, (error) => {\n        console.log(error);\n      });\n    }\n  }\n  saveItemMaster(orderId:number) {\n    const dialogRef = this._dialog.open(PrintComponent, {\n      data: { orderId: orderId }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n       // this.getAllItemMaster();\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BillingComponent } from './billing.component';\nimport { BillingRoutingModule } from './billing-routing.module';\nimport { BillingService } from './billing.service';\nimport { OrderService } from '../../admin/KOT/order/order.service';\nimport {\n  MatTableModule, MatDialogModule, MatButtonModule, MatRadioModule, MatCardModule, MatDividerModule,\n  MatInputModule, MatPaginatorModule, MatIconModule, MatTooltipModule, MatTabsModule, MatAutocompleteModule,\n  MatFormFieldModule, MatToolbarModule, MatSortModule, MatSelectModule, MatDatepickerModule\n} from '@angular/material';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { TableService } from '../../admin/KOT/table/table.service';\nimport { GstService } from '../../admin/settings/gst/gst.service';\nimport { CustomerService } from '../../admin/CRM/customer/customer.service';\nimport { PrintComponent } from './print/print.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    BillingRoutingModule,\n    HttpModule, MatDividerModule, MatButtonModule, MatDialogModule, FormsModule, MatCardModule,\n    ReactiveFormsModule, MatSelectModule, MatFormFieldModule, MatAutocompleteModule, MatInputModule\n  ], entryComponents: [\n    PrintComponent\n  ],\n  providers: [\n    BillingService, OrderService, TableService, GstService, CustomerService\n  ],\n  declarations: [BillingComponent, PrintComponent]\n})\nexport class BillingModule { }\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  map, filter, catchError, mergeMap,\n} from 'rxjs/operators';\nimport { Billing } from './billing';\nimport {MenuOrder} from '../../admin/KOT/order/menu-order';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillingService {\n\n  private billing:Billing;\n  private baseUrl: string = 'http://localhost:8080/api';\n\n  private headers = new Headers({ 'Content-Type': 'application/json' });\n\n  private options = new RequestOptions({ headers: this.headers });\n  dialogData: any;\n\n  constructor(private _http: Http) { }\n\n  setter(billing:Billing){\n    this.billing=billing;\n  }\n\n  getter(){\n    return this.billing;\n  }\n\n  saveBilling(billing: Billing) {\n    return this._http.post(this.baseUrl + '/saveBilling', JSON.stringify(billing), this.options)\n      .pipe(map((response: Response) => response.json())\n        , catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  getAllBilling() {\n    return this._http.get(this.baseUrl + '/getAllBilling', this.options)\n      .pipe(map((response: Response) => response.json())\n        , catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  updateBilling(billing: Billing) {\n    return this._http.put(this.baseUrl + '/updateBilling', JSON.stringify(billing), this.options)\n      .pipe(map((response: Response) => response.json())\n        , catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  getBilling(billingId: number) {\n    return this._http.get(this.baseUrl + '/getBilling/' + billingId, this.options)\n      .pipe(map((response: Response) => response.json())\n        , catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  getBillingbyOrderId(orderId: number) {\n    return this._http.get(this.baseUrl + '/getBillingbyOrderId/' + orderId, this.options)\n      .pipe(map((response: Response) => response.json())\n        , catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n  \n  deleteBilling(billingId: number) {\n    return this._http.delete(this.baseUrl + '/deleteBilling/' + billingId, this.options)\n      .pipe(map((response: Response) => response.json())\n        , catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n  updateDiscount(menuOrder: MenuOrder) {\n    return this._http.put(this.baseUrl + '/updateDisount', JSON.stringify(menuOrder), this.options)\n      .pipe(map((response: Response) => response.json())\n        , catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n}\n","import { Time } from \"@angular/common\";\n\nexport class Billing {\n    billingId: number;\n    orderId: number;\n    waiterId: number;\n    tableId: number;\n    date: Date;\n    time: Time;\n    amount: number;\n    serviceCharge:number;\n    quantity:number;\n    discount: number;\n    gstAmount: number;\n    totalAmount: number;\n    cashType: string;\n    cashAmount:number;\n    cardAmount:number;\n    customerMobileNo: number;\n}\n","module.exports = \"\"","module.exports = \"<table>\\n  \\n</table>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport{MAT_DIALOG_DATA,MatDialogRef} from '@angular/material';\nimport { OrderService } from '../../../admin/KOT/order/order.service';\nimport { MenuOrder } from '../../../admin/KOT/order/menu-order';\nimport {BillingService}from '../billing.service';\nimport {Billing}from '../billing';\n@Component({\n  selector: 'app-print',\n  templateUrl: './print.component.html',\n  styleUrls: ['./print.component.css']\n})\nexport class PrintComponent implements OnInit {\n\n  private orderId;\n  private billing:Billing;\n  private menuOrder:MenuOrder[];\n  constructor(public dialogRef:MatDialogRef<PrintComponent>,\n    @Inject(MAT_DIALOG_DATA) public data:any,\n    public orderService:OrderService,\n    public billingService:BillingService) { }\n\n  ngOnInit() {\n    this.orderId=this.data.orderId;\n    console.log(this.orderId)\n    this.getBilling();\n    this.getMenuOrder();\n  }\n  getMenuOrder(){\n    this.orderService.getMenuOrder(this.orderId).subscribe((getMenuOrder)=>{\n      this.menuOrder=getMenuOrder;\n      console.log(this.menuOrder)\n    })\n  }\n  getBilling(){\n    this.billingService.getBillingbyOrderId(this.orderId).subscribe((data)=>{\n      this.billing=data;\n      console.log(this.billing);\n    },(error)=>{\n      console.log(error);\n    })\n  }\n}\n"],"sourceRoot":""}