{"version":3,"sources":["webpack:///./src/app/restaurants/waiter/menu-order/menu-order-routing.module.ts","webpack:///./src/app/restaurants/waiter/menu-order/menu-order.component.css","webpack:///./src/app/restaurants/waiter/menu-order/menu-order.component.html","webpack:///./src/app/restaurants/waiter/menu-order/menu-order.component.ts","webpack:///./src/app/restaurants/waiter/menu-order/menu-order.module.ts","webpack:///./src/app/restaurants/waiter/menu-order/order-menu/order-menu.component.css","webpack:///./src/app/restaurants/waiter/menu-order/order-menu/order-menu.component.html","webpack:///./src/app/restaurants/waiter/menu-order/order-menu/order-menu.component.ts","webpack:///./src/app/restaurants/waiter/menu-order/reorder/reorder.component.css","webpack:///./src/app/restaurants/waiter/menu-order/reorder/reorder.component.html","webpack:///./src/app/restaurants/waiter/menu-order/reorder/reorder.component.ts","webpack:///./src/app/restaurants/waiter/menu-order/view-menu/view-menu.component.css","webpack:///./src/app/restaurants/waiter/menu-order/view-menu/view-menu.component.html","webpack:///./src/app/restaurants/waiter/menu-order/view-menu/view-menu.component.ts","webpack:///./src/app/restaurants/waiter/menu-order/view-tables/view-tables.component.css","webpack:///./src/app/restaurants/waiter/menu-order/view-tables/view-tables.component.html","webpack:///./src/app/restaurants/waiter/menu-order/view-tables/view-tables.component.ts"],"names":[],"mappings":"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","file":"menu-order-menu-order-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MenuOrderComponent } from './menu-order.component';\r\nimport {ViewTablesComponent} from './view-tables/view-tables.component';\r\nimport{ReorderComponent} from './reorder/reorder.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: ViewTablesComponent\r\n    },\r\n    {\r\n        path:'viewMenu/:tableId', component:MenuOrderComponent\r\n    },\r\n    {\r\n        path:'reorder/:orderId', component:ReorderComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class MenuOrderRoutingModule {\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-view-menu></app-view-menu>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu-order',\n  templateUrl: './menu-order.component.html',\n  styleUrls: ['./menu-order.component.css']\n})\nexport class MenuOrderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MenuOrderComponent } from './menu-order.component';\nimport { MenuOrderRoutingModule } from './menu-order-routing.module';\nimport { ViewTablesComponent } from './view-tables/view-tables.component';\nimport { ViewMenuComponent } from './view-menu/view-menu.component';\nimport { TableService } from '../../admin/KOT/table/table.service';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MenuMasterService } from '../../admin/KOT/menu-master/menu-master.service';\nimport { MenuGroupMasterService } from '../../admin/KOT/menu-group-master/menu-group-master.service';\nimport { MatCardModule } from '@angular/material/card';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { MatFormFieldModule, MatInputModule, MatDialogModule, MatDividerModule, MatButtonModule, MatAutocompleteModule, MatBadgeModule, MatIconModule, MatToolbarModule } from '../../../../../node_modules/@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '../../../../../node_modules/@angular/forms';\nimport { MenuOrderService } from './menu-order.service';\nimport { OrderMenuComponent } from './order-menu/order-menu.component';\nimport { ReorderComponent } from './reorder/reorder.component';\n@NgModule({\n  imports: [\n    CommonModule, MenuOrderRoutingModule, MatTabsModule, MatCardModule, MatToolbarModule,\n    MatFormFieldModule, MatInputModule, FormsModule, ReactiveFormsModule,\n    MatDividerModule, MatDialogModule, MatButtonModule, MatAutocompleteModule, MatBadgeModule, MatIconModule\n  ],\n  declarations: [\n    MenuOrderComponent, ViewTablesComponent, ViewMenuComponent, OrderMenuComponent, ReorderComponent\n  ],\n  entryComponents: [\n    OrderMenuComponent\n  ],\n  providers: [\n    TableService, MenuMasterService, MenuGroupMasterService, MenuOrderService\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n})\nexport class MenuOrderModule { }\n","module.exports = \".container{\\r\\n    width: 600px;\\r\\n    height: 100%;\\r\\n}\\r\\nh6{\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    font-size: 20px;\\r\\n    text-align: center;\\r\\n}\\r\\nmat-divider{\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\nbutton{\\r\\n    \\r\\n    \\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <h6>Table Name: {{tableName}}</h6>\\n    </div>\\n    <div class=\\\"col-sm-6\\\">\\n      <h6>Waiter Name: {{waiterName}}</h6>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <h6>Date: {{today | date}}</h6>\\n    </div>\\n    <div class=\\\"col-sm-6\\\">\\n      <h6>Time: {{today | date:'shortTime'}}</h6>\\n    </div>\\n  </div>\\n  <mat-divider></mat-divider>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>Menu Name</h6>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>Basic Amount</h6>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      <h6>Quantity</h6>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      <h6>Amount</h6>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n        <h6>Action</h6>\\n      </div>\\n  </div>\\n  <mat-divider></mat-divider>\\n  <div class=\\\"row\\\" *ngFor=\\\"let temp of tempOrder\\\">\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>{{temp.menuName}}</h6>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <h6>{{temp.basicAmount}}</h6>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      <h6>{{temp.quantity}}</h6>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      <h6>{{temp.amount}}</h6>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n        <button mat-icon-button matTooltip=\\\"Delete Item Group\\\" color=\\\"accent\\\" (click)=\\\"deleteTempOrder(temp.tempOrderId)\\\">\\n            <mat-icon aria-label=\\\"delete\\\">delete </mat-icon>\\n          </button>\\n      </div>\\n  </div>\\n  <mat-divider></mat-divider>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      <h6>{{quantity}}</h6>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      <h6>{{amount}}</h6>\\n    </div>\\n    \\n  </div>\\n  <div class=\\\"row\\\" style=\\\"text-align: center; margin-top: 20px;\\\">\\n      <div class=\\\"col-sm-3\\\">\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n        </div>\\n    <div class=\\\"col-sm-3\\\">\\n        <button mat-button  [type]=\\\"submit\\\" style=\\\"background-color: MediumSeaGreen;color:white;\\\" [mat-dialog-close]=\\\"1\\\"  (click)=\\\" saveOrder()\\\">Order</button>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n        <button mat-raised-button color=\\\"primary\\\" [type]=\\\"submit\\\" [mat-dialog-close]=\\\"1\\\"  (click)=\\\" onNoClick()\\\">Close</button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogActions, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MenuOrderService } from '../menu-order.service';\nimport { Order } from '../../../admin/KOT/order/order';\nimport { TableService } from '../../../admin/KOT/table/table.service';\nimport { Employee } from '../../../admin/HRM/employee/employee';\nimport { Table } from '../../../admin/KOT/table/table';\nimport { TempOrder } from '../../../admin/KOT/order/temp-order';\nimport { DatePipe } from '@angular/common';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-order-menu',\n  templateUrl: './order-menu.component.html',\n  styleUrls: ['./order-menu.component.css'],\n  providers: [DatePipe]\n})\nexport class OrderMenuComponent implements OnInit {\n\n  private order: Order;\n  private tableId;\n  private orderId;\n  private tableName;\n  private waiterId;\n  private waiterName;\n  private date;\n  private time;\n  private employee: Employee;\n  private table: Table;\n  private tempOrder: TempOrder[];\n  private amount;\n  private quantity;\n  today: number = Date.now();\n  constructor(public matDialog: MatDialogRef<OrderMenuComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private menuOrderService: MenuOrderService,\n    private tableService: TableService,\n    private datePipe: DatePipe,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.order = new Order();\n    console.log(this.data)\n    this.tableId = this.data.tableId;\n    this.waiterId = this.data.waiterId;\n    this.orderId = this.data.orderId;\n    this.getTempOreder();\n    this.getTableName();\n    this.getWaiterName();\n  }\n\n  getTempOreder() {\n    this.amount = 0;\n    this.quantity = 0;\n    this.menuOrderService.getTempOrderByTableId(this.tableId, this.waiterId).subscribe((data) => {\n      this.tempOrder = data;\n      this.tempOrder.forEach(res => {\n        this.amount = this.amount + res.amount;;\n        this.quantity = this.quantity + res.quantity;\n      })\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  getWaiterName() {\n    this.menuOrderService.getWaiter(this.waiterId).subscribe((data) => {\n      this.employee = data;\n      this.waiterName = this.employee.employeeName;\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  getTableName() {\n    this.tableService.getTableName(this.tableId).subscribe((data) => {\n      this.table = data;\n      this.tableName = this.table.tableName;\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  onNoClick(): void {\n    this.matDialog.close();\n  }\n  saveOrder() {\n    if (this.orderId >= 1) {\n      this.order.orderId = this.orderId;\n    }\n    this.order.tableId = this.tableId;\n    this.order.waiterId = this.waiterId;\n    this.order.tableName = this.tableName;\n    this.order.waiterName = this.waiterName;\n    this.date = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n    this.time = this.datePipe.transform(new Date(), 'HH:MM:SS');\n    this.order.date = this.date;\n    this.order.time = this.time;\n    console.log('tablename', this.order);\n    this.menuOrderService.saveOrder(this.order).subscribe((date) => {\n      this.router.navigateByUrl('restaurants/waiter/liveOrders');\n    }, err => {\n      alert('error');\n    });\n  }\n\n  deleteTempOrder(tempOrderId: number) {\n    console.log(tempOrderId);\n    this.menuOrderService.deleteTempOrder(tempOrderId).subscribe((data)=>{\n      console.log(data);\n      this.getTempOreder();\n    },(error)=>{\n      console.log(error);\n    })\n  }\n}\n","module.exports = \"\\r\\nmat-card{\\r\\n    width: 230px;\\r\\n    font-size: 11px;\\r\\n    height: 200px;\\r\\n    margin-top: 20px;\\r\\n    margin-bottom: 50px;\\r\\n    background-color:#f9d5e5;\\r\\n}\\r\\nh6{\\r\\n    color: white;\\r\\n    font-size: 14px;\\r\\n    text-align: center;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n}\\r\\nbutton{\\r\\n    float: right;\\r\\n \\r\\n   }\\r\\n.container{\\r\\n    margin-top: 70px;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background-color:#feb236;\\r\\n   }\\r\\nmat-tab-group{\\r\\n    margin: 15px,15px,15px,15px;\\r\\n    margin-top: 15px;\\r\\n    margin-left: 15px;\\r\\n    margin-right: 15px;\\r\\n    margin-bottom: 15px;\\r\\n   }\\r\\n.amount{\\r\\n       font-family: 'Times New Roman', Times, serif;\\r\\n       font-size: 20px;\\r\\n       text-align: center;\\r\\n   }\\r\\n.details{\\r\\n       padding-top: 20px;\\r\\n       margin-top: 20px;\\r\\n   }\\r\\n.example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n \"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"details\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3\\\">\\n          <h6>Waiter Name:  {{waiterName}}</h6>\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <h6>Table Name:  {{tableName}}</h6>\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <h6>Date: {{date}}</h6>\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <h6>Time: {{time}}</h6>\\n        </div>\\n      </div>\\n    </div>\\n    <mat-tab-group mat-stretch-tabs>\\n      <mat-tab label=\\\"TIFFIN\\\" style=\\\"color: white\\\">\\n        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\n          <div *ngFor=\\\"let menuMasters of menuMaster\\\">\\n            <div *ngIf=\\\"menuMasters.menuCategory=='TIFFIN'\\\">\\n              <div class=\\\"col-sm-6\\\" style=\\\"margin-left: 40px;\\\">\\n                <mat-card class=\\\"example-card\\\">\\n                  <img mat-card-image src=\\\"biryani.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\" height=\\\"130px\\\"\\n                    width=\\\"200px\\\">\\n                  <mat-card-content style=\\\"margin-top: -10px;\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-sm-8\\\">\\n                        <span>{{menuMasters.menuName}}</span>\\n                      </div>\\n                      <div class=\\\"col-sm-4\\\">\\n                        <span style=\\\"float: right;\\\">RS:{{menuMasters.basicAmount}}</span>\\n                      </div>\\n                    </div>\\n                  </mat-card-content>\\n                  <mat-card-actions style=\\\"margin-top: -30px;\\\">\\n                    <div class=\\\"row\\\" style=\\\"text-align: center;margin-left: 40px;\\\">\\n                      <div class=\\\"col-sm-3\\\">\\n                        <button mat-icon-button (click)=\\\"addquantity(menuMasters.menuId,menuMasters.menuName,menuMasters.basicAmount)\\\">\\n                          <mat-icon>add</mat-icon>\\n                        </button>\\n                      </div>\\n                      <div class=\\\"col-sm-3\\\">\\n                        <div *ngFor=\\\"let temp of tempOrders\\\">\\n                          <div *ngIf=\\\"temp.menuId==menuMasters.menuId\\\">\\n                            <button mat-icon-button>\\n                              <span class=\\\"amount\\\">{{temp.quantity}}</span>\\n                            </button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-sm-3\\\">\\n                        <button mat-icon-button (click)=\\\"subquantity(menuMasters.menuId,menuMasters.menuName,menuMasters.basicAmount)\\\">\\n                          <mat-icon style=\\\"margin-top: -10px\\\">minimize</mat-icon>\\n                        </button>\\n                      </div>\\n                      <div class=\\\"col-sm-3\\\" hidden>\\n                        <mat-icon (click)=\\\"deleteMenu()\\\">cancel</mat-icon>\\n                      </div>\\n                    </div>\\n                  </mat-card-actions>\\n                </mat-card>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </mat-tab>\\n      <mat-tab label=\\\"MEALS\\\" style=\\\"color: white\\\">\\n        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\n          <div *ngFor=\\\"let menuMasters of menuMaster\\\">\\n            <div *ngIf=\\\"menuMasters.menuCategory=='MEALS' && menuMasters.availableMenuQuantity>=1\\\">\\n              <div class=\\\"col-sm-6\\\" style=\\\"margin-left: 40px;\\\">\\n                <mat-card class=\\\"example-card\\\">\\n                  <img mat-card-image src=\\\"biryani.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\" height=\\\"130px\\\"\\n                    width=\\\"200px\\\">\\n                  <mat-card-content style=\\\"margin-top: -10px;\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-sm-8\\\">\\n                        <span>{{menuMasters.menuName}}</span>\\n                      </div>\\n                      <div class=\\\"col-sm-4\\\">\\n                        <span style=\\\"float: right;\\\">RS:{{menuMasters.basicAmount}}</span>\\n                      </div>\\n                    </div>\\n                  </mat-card-content>\\n                  <mat-card-actions style=\\\"margin-top: -30px;\\\">\\n                    <div class=\\\"row\\\" style=\\\"text-align: center;margin-left: 40px;\\\">\\n                      <div class=\\\"col-sm-3\\\">\\n                        <button mat-icon-button (click)=\\\"addquantity(menuMasters.menuId,menuMasters.menuName,menuMasters.basicAmount)\\\">\\n                          <mat-icon>add</mat-icon>\\n                        </button>\\n                      </div>\\n                      <div class=\\\"col-sm-3\\\">\\n                        <div *ngFor=\\\"let temp of tempOrders\\\">\\n                          <div *ngIf=\\\"temp.menuId==menuMasters.menuId\\\">\\n                            <button mat-icon-button>\\n                              <span class=\\\"amount\\\">{{temp.quantity}}</span>\\n                            </button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-sm-3\\\">\\n                        <button mat-icon-button (click)=\\\"subquantity(menuMasters.menuId,menuMasters.menuName,menuMasters.basicAmount)\\\">\\n                          <mat-icon style=\\\"margin-top: -10px\\\">minimize</mat-icon>\\n                        </button>\\n                      </div>\\n                      <div class=\\\"col-sm-3\\\" hidden>\\n                        <mat-icon (click)=\\\"deleteMenu()\\\">cancel</mat-icon>\\n                      </div>\\n                    </div>\\n                  </mat-card-actions>\\n                </mat-card>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </mat-tab>\\n      <mat-tab label=\\\"Others Items\\\" style=\\\"color: white\\\">\\n        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\n          <div *ngFor=\\\"let menuMasters of menuMaster\\\">\\n            <div *ngIf=\\\"menuMasters.menuCategory=='others'&& menuMasters.availableMenuQuantity>=1\\\">\\n              <div class=\\\"col-sm-6\\\" style=\\\"margin-left: 40px;\\\">\\n                <mat-card class=\\\"example-card\\\">\\n                  <img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\" height=\\\"130px\\\"\\n                    width=\\\"200px\\\">\\n                  <mat-card-content style=\\\"margin-top: -10px;\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-sm-8\\\">\\n                        <span>{{menuMasters.menuName}}</span>\\n                      </div>\\n                      <div class=\\\"col-sm-4\\\">\\n                        <span style=\\\"float: right;\\\">RS:{{menuMasters.basicAmount}}</span>\\n                      </div>\\n                    </div>\\n                  </mat-card-content>\\n                  <mat-card-actions style=\\\"margin-top: -30px;\\\">\\n                    <div class=\\\"row\\\" style=\\\"text-align: center;margin-left: 40px;\\\">\\n                      <div class=\\\"col-sm-3\\\">\\n                        <button mat-icon-button (click)=\\\"addquantity(menuMasters.menuId,menuMasters.menuName,menuMasters.basicAmount)\\\">\\n                          <mat-icon>add</mat-icon>\\n                        </button>\\n                      </div>\\n                      <div class=\\\"col-sm-3\\\">\\n                        <div *ngFor=\\\"let temp of tempOrders\\\">\\n                          <div *ngIf=\\\"temp.menuId==menuMasters.menuId\\\">\\n                            <button mat-icon-button>\\n                              <span class=\\\"amount\\\">{{temp.quantity}}</span>\\n                            </button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-sm-3\\\">\\n                        <button mat-icon-button (click)=\\\"subquantity(menuMasters.menuId,menuMasters.menuName,menuMasters.basicAmount)\\\">\\n                          <mat-icon style=\\\"margin-top: -10px\\\">minimize</mat-icon>\\n                        </button>\\n                      </div>\\n                      <div class=\\\"col-sm-3\\\" hidden>\\n                        <mat-icon (click)=\\\"deleteMenu()\\\">cancel</mat-icon>\\n                      </div>\\n                    </div>\\n                  </mat-card-actions>\\n                </mat-card>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </mat-tab>\\n    </mat-tab-group>\\n  </div>\\n  <mat-toolbar color=\\\"primary\\\" class=\\\"fixed-bottom\\\">\\n    <mat-toolbar-row>\\n      <span>Cart</span>\\n      <span class=\\\"example-spacer\\\"></span>\\n      <span style=\\\"margin-left: -10px\\\"> {{count}}</span>\\n      <button mat-icon-button style=\\\"margin-left: 10px\\\" (click)=\\\"orders()\\\">\\n        <mat-icon>room_service</mat-icon>\\n      </button>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatTableDataSource, MatDialog, MatPaginator, MatSort } from '../../../../../../node_modules/@angular/material';\nimport { MenuMasterService } from '../../../admin/KOT/menu-master/menu-master.service';\nimport { MenuMaster } from '../../../admin/KOT/menu-master/menu-master';\nimport { MenuGroupMasterService } from '../../../admin/KOT/menu-group-master/menu-group-master.service';\nimport { MenuGroupMaster } from '../../../admin/KOT/menu-group-master/menu-group-master';\nimport { MenuOrderService } from '../menu-order.service';\nimport { TempOrder } from '../../../admin/KOT/order/temp-order';\nimport { TableService } from '../../../admin/KOT/table/table.service';\nimport { Employee } from '../../../admin/HRM/employee/employee';\nimport { Table } from '../../../admin/KOT/table/table';\nimport { DatePipe } from '@angular/common';\nimport { Order } from '../../../admin/KOT/order/order';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { user } from '../../../admin/settings/accesscontrol/user';\nimport { OrderMenuComponent } from '../order-menu/order-menu.component';\n\n@Component({\n  selector: 'app-reorder',\n  templateUrl: './reorder.component.html',\n  styleUrls: ['./reorder.component.css'],\n  providers: [DatePipe]\n})\nexport class ReorderComponent implements OnInit {\n\n  private orderId;\n  private date;\n  private time;\n  private tableId;\n  private tableName;\n  private waiterId;\n  private waiterName;\n  private count;\n  private tempOrder: TempOrder;\n  private order: Order;\n  private table: Table;\n  private employee: Employee;\n  private menuMaster: MenuMaster[];\n  private tempOrders: TempOrder[];\n\n  constructor(private activatedRoute: ActivatedRoute,\n    private menuMasterService: MenuMasterService,\n    private menuGroupMasterService: MenuGroupMasterService,\n    private orderService: MenuOrderService, private tableService: TableService,\n    private datePipe: DatePipe,\n    private matDialog: MatDialog,\n    private router: Router) { }\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(paramsId => {\n      this.orderId = paramsId.orderId;\n      console.log(this.orderId)\n    });\n    this.tempOrder = new TempOrder();\n    this.order = new Order();\n    this.date = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n    this.time = this.datePipe.transform(new Date(), 'HH:MM:SS');\n    this.getOrder();\n    this.getMenuMaster();\n  }\n\n  getMenuMaster() {\n    this.menuMasterService.getMenuMaster().subscribe((menuList) => {\n      this.menuMaster = menuList;\n      console.log('menuList', menuList)\n    }, err => {\n      alert(\"don't get\");\n    });\n  }\n\n  getOrder() {\n    this.orderService.getOrder(this.orderId).subscribe((data) => {\n      this.order = data;\n      this.tableId = this.order.tableId;\n      this.waiterId = this.order.waiterId;\n      this.tableName = this.order.tableName;\n      this.waiterName = this.order.waiterName;\n      this.date = this.order.date;\n      this.time = this.order.time;\n      console.log(this.order);\n      this.getTempOrderByTableId();\n      this.getMenuCount();\n    }, (error) => {\n      console.log(error);\n    })\n  }\n\n  getTempOrderByTableId() {\n    this.orderService.getTempOrderByTableId(this.tableId, this.waiterId).subscribe((data) => {\n      this.tempOrders = data;\n      console.log(\"table\", this.tempOrders)\n    }, (error) => {\n      console.log(error)\n    });\n  }\n\n  getMenuCount() {\n    this.orderService.getMenuCount(this.tableId, this.waiterId).subscribe((data) => {\n      console.log(data);\n      this.count = data;\n    }, (error) => {\n      console.log(error);\n    })\n  }\n  addquantity(menuId: number, menuName: string, basicAmount: number) {\n    this.saveTempOrder(menuId, menuName, basicAmount);\n  }\n  subquantity(menuId: number, menuName: string, basicAmount: number) {\n    this.tempOrder.tempOrderId = null;\n    this.tempOrder.tableId = this.tableId;\n    this.tempOrder.quantity = 1;\n    this.tempOrder.menuId = menuId;\n    this.tempOrder.menuName = menuName;\n    this.tempOrder.basicAmount = basicAmount;\n    this.tempOrder.amount = basicAmount;\n    this.tempOrder.waiterId = this.waiterId;\n    this.orderService.decreaseQuantity(this.tempOrder).subscribe((data) => {\n      this.getTempOrderByTableId();\n      this.getMenuCount();\n    }, (error) => {\n      console.log(error);\n    })\n  }\n  deleteMenu() {\n\n  }\n  saveTempOrder(menuId: number, menuName: string, basicAmount: number) {\n    this.tempOrder.tempOrderId = null;\n    this.tempOrder.tableId = this.tableId;\n    this.tempOrder.quantity = 1;\n    this.tempOrder.menuId = menuId;\n    this.tempOrder.menuName = menuName;\n    this.tempOrder.basicAmount = basicAmount;\n    this.tempOrder.amount = basicAmount;\n    this.tempOrder.waiterId = this.waiterId;\n    this.orderService.saveTempOrder(this.tempOrder).subscribe((data) => {\n      this.getTempOrderByTableId();\n      this.getMenuCount();\n    }, (error) => {\n      console.log(error);\n    })\n  }\n  orders() {\n    const dialogRef = this.matDialog.open(OrderMenuComponent, {\n      data: { orderId: this.orderId, tableId: this.tableId, waiterId: this.waiterId },\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.getOrder();\n      this.getMenuMaster();\n      this.getTempOrderByTableId();\n      this.getMenuCount();\n    });\n  }\n}\n","module.exports = \"\\r\\nmat-card{\\r\\n    width: 230px;\\r\\n    font-size: 11px;\\r\\n    height: 200px;\\r\\n    margin-top: 20px;\\r\\n    margin-bottom: 50px;\\r\\n    background-color:#f9d5e5;\\r\\n}\\r\\nh6{\\r\\n    color: white;\\r\\n    font-size: 14px;\\r\\n    text-align: center;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n}\\r\\nbutton{\\r\\n    float: right;\\r\\n \\r\\n   }\\r\\n.container{\\r\\n    margin-top: 70px;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background-color:#feb236;\\r\\n   }\\r\\nmat-tab-group{\\r\\n    margin: 15px,15px,15px,15px;\\r\\n    margin-top: 15px;\\r\\n    margin-left: 15px;\\r\\n    margin-right: 15px;\\r\\n    margin-bottom: 15px;\\r\\n   }\\r\\n.amount{\\r\\n       font-family: 'Times New Roman', Times, serif;\\r\\n       font-size: 20px;\\r\\n       text-align: center;\\r\\n   }\\r\\n.details{\\r\\n       padding-top: 20px;\\r\\n       margin-top: 20px;\\r\\n   }\\r\\n.example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n \"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"details\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>Waiter Name: {{waiterName}}</h6>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>Table Name: {{tableName}}</h6>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>Date: {{today | date}}</h6>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <h6>Time: {{today | date:'shortTime'}}</h6>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-tab-group mat-stretch-tabs>\\n    <mat-tab label=\\\"Tiffin Items\\\" style=\\\"color: white\\\">\\n      <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\n        <div class=\\\"col-sm-6\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Menu Name\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"vegCtrl\\\">\\n            <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n              <mat-option *ngFor=\\\"let state of veg | async\\\" [value]=\\\"state.menuName\\\" (click)=\\\"saveTempOrder(state.menuId,state.menuName,state.quantity,state.basicAmount,state.gst)\\\">\\n                <span *ngIf=\\\"state.menuCategory=='TIFFIN'\\\">\\n                  {{state.menuCode}}: {{state.menuName}}\\n                </span>\\n              </mat-option>\\n            </mat-autocomplete>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\n        <div *ngFor=\\\"let menuMasters of menuMaster\\\">\\n          <div *ngIf=\\\"menuMasters.menuCategory=='TIFFIN'  && ((menuMasters.availableMenuQuantity>=1 || menuMasters.availableMenuQuantity>=0) && date===menuMasters.date)\\\">\\n            <div class=\\\"col-sm-6\\\">\\n              <mat-card class=\\\"example-card\\\">\\n                <img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\" height=\\\"130px\\\"\\n                  width=\\\"200px\\\">\\n                <mat-card-content style=\\\"margin-top: -10px;\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-8\\\">\\n                      <span>{{menuMasters.menuName}}</span>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                      <span style=\\\"float: right;\\\">RS:{{menuMasters.basicAmount}}</span>\\n                    </div>\\n                  </div>\\n                </mat-card-content>\\n                <mat-card-actions style=\\\"margin-top: -30px;\\\">\\n                  <div class=\\\"row\\\" style=\\\"text-align: center;margin-left: 40px;\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                      <button mat-icon-button (click)=\\\"addquantity(menuMasters.menuId,menuMasters.menuName,menuMasters.basicAmount,menuMasters.gst)\\\">\\n                        <mat-icon>add</mat-icon>\\n                      </button>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                      <div *ngFor=\\\"let temp of tempOrders\\\">\\n                        <div *ngIf=\\\"temp.menuId==menuMasters.menuId\\\">\\n                          <button mat-icon-button>\\n                            <span class=\\\"amount\\\">{{temp.quantity}}</span>\\n                          </button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                      <button mat-icon-button (click)=\\\"subquantity(menuMasters.menuId,menuMasters.menuName,menuMasters.basicAmount,menuMasters.gst)\\\">\\n                        <mat-icon style=\\\"margin-top: -10px\\\">minimize</mat-icon>\\n                      </button>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\" hidden>\\n                      <mat-icon (click)=\\\"deleteMenu()\\\">cancel</mat-icon>\\n                    </div>\\n                  </div>\\n                </mat-card-actions>\\n              </mat-card>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Meals Items\\\" style=\\\"color: white\\\">\\n      <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\n        <div class=\\\"col-sm-6\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Menu Name\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"auto1\\\" [formControl]=\\\"nonvegCtrl\\\">\\n            <mat-autocomplete #auto1=\\\"matAutocomplete\\\">\\n              <mat-option *ngFor=\\\"let state of nonveg | async\\\" [value]=\\\"state.menuName\\\" (click)=\\\"saveTempOrder(state.menuId,state.menuName,state.quantity,state.basicAmount,state.gst)\\\">\\n                <div *ngIf=\\\"state.menuCategory=='MEALS'\\\">\\n                  <span>\\n                    {{state.menuCode}}: {{state.menuName}}\\n                  </span>\\n                </div>\\n              </mat-option>\\n            </mat-autocomplete>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\n        <div *ngFor=\\\"let menuMasters of menuMaster\\\">\\n          <div *ngIf=\\\"menuMasters.menuCategory=='MEALS' && ((menuMasters.availableMenuQuantity>=1 || menuMasters.availableMenuQuantity>=0) && date===menuMasters.date)\\\">\\n            <div class=\\\"col-sm-6\\\" style=\\\"margin-left: 40px;\\\">\\n              <mat-card class=\\\"example-card\\\">\\n                <img mat-card-image src=\\\"biryani.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\" height=\\\"130px\\\"\\n                  width=\\\"200px\\\">\\n                <mat-card-content style=\\\"margin-top: -10px;\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-8\\\">\\n                      <span>{{menuMasters.menuName}}</span>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                      <span style=\\\"float: right;\\\">RS:{{menuMasters.basicAmount}}</span>\\n                    </div>\\n                  </div>\\n                </mat-card-content>\\n                <mat-card-actions style=\\\"margin-top: -30px;\\\">\\n                  <div class=\\\"row\\\" style=\\\"text-align: center;margin-left: 40px;\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                      <button mat-icon-button (click)=\\\"addquantity(menuMasters.menuId,menuMasters.menuName,menuMasters.basicAmount,menuMasters.gst)\\\">\\n                        <mat-icon>add</mat-icon>\\n                      </button>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                      <div *ngFor=\\\"let temp of tempOrders\\\">\\n                        <div *ngIf=\\\"temp.menuId==menuMasters.menuId\\\">\\n                          <button mat-icon-button>\\n                            <span class=\\\"amount\\\">{{temp.quantity}}</span>\\n                          </button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                      <button mat-icon-button (click)=\\\"subquantity(menuMasters.menuId,menuMasters.menuName,menuMasters.basicAmount,menuMasters.gst)\\\">\\n                        <mat-icon style=\\\"margin-top: -10px\\\">minimize</mat-icon>\\n                      </button>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\" hidden>\\n                      <mat-icon (click)=\\\"deleteMenu()\\\">cancel</mat-icon>\\n                    </div>\\n                  </div>\\n                </mat-card-actions>\\n              </mat-card>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Others Items\\\" style=\\\"color: white\\\">\\n      <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\n        <div class=\\\"col-sm-6\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Menu Name\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"auto2\\\" [formControl]=\\\"othersCtrl\\\">\\n            <mat-autocomplete #auto2=\\\"matAutocomplete\\\">\\n              <mat-option *ngFor=\\\"let state of others | async\\\" [value]=\\\"state.menuName\\\" (click)=\\\"saveTempOrder(state.menuId,state.menuName,state.quantity,state.basicAmount,state.gst)\\\">\\n                <div *ngIf=\\\"state.menuCategory=='others'\\\">\\n                  <span>\\n                    {{state.menuCode}}: {{state.menuName}}\\n                  </span>\\n                </div>\\n              </mat-option>\\n            </mat-autocomplete>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\n        <div *ngFor=\\\"let menuMasters of menuMaster\\\">\\n          <div *ngIf=\\\"menuMasters.menuCategory=='others'&& ((menuMasters.availableMenuQuantity>=1 || menuMasters.availableMenuQuantity>=0) && date===menuMasters.date)\\\">\\n            <div class=\\\"col-sm-6\\\" style=\\\"margin-left: 40px;\\\">\\n              <mat-card class=\\\"example-card\\\">\\n                <img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\" height=\\\"130px\\\"\\n                  width=\\\"200px\\\">\\n                <mat-card-content style=\\\"margin-top: -10px;\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-8\\\">\\n                      <span>{{menuMasters.menuName}}</span>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                      <span style=\\\"float: right;\\\">RS:{{menuMasters.basicAmount}}</span>\\n                    </div>\\n                  </div>\\n                </mat-card-content>\\n                <mat-card-actions style=\\\"margin-top: -30px;\\\">\\n                  <div class=\\\"row\\\" style=\\\"text-align: center;margin-left: 40px;\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                      <button mat-icon-button (click)=\\\"addquantity(menuMasters.menuId,menuMasters.menuName,menuMasters.basicAmount,menuMasters.gst)\\\">\\n                        <mat-icon>add</mat-icon>\\n                      </button>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                      <div *ngFor=\\\"let temp of tempOrders\\\">\\n                        <div *ngIf=\\\"temp.menuId==menuMasters.menuId\\\">\\n                          <button mat-icon-button>\\n                            <span class=\\\"amount\\\">{{temp.quantity}}</span>\\n                          </button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                      <button mat-icon-button (click)=\\\"subquantity(menuMasters.menuId,menuMasters.menuName,menuMasters.basicAmount,menuMasters.gst)\\\">\\n                        <mat-icon style=\\\"margin-top: -10px\\\">minimize</mat-icon>\\n                      </button>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\" hidden>\\n                      <mat-icon (click)=\\\"deleteMenu()\\\">cancel</mat-icon>\\n                    </div>\\n                  </div>\\n                </mat-card-actions>\\n              </mat-card>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </mat-tab>\\n  </mat-tab-group>\\n</div>\\n<mat-toolbar color=\\\"primary\\\" class=\\\"fixed-bottom\\\">\\n  <mat-toolbar-row>\\n    <span>Cart</span>\\n    <span class=\\\"example-spacer\\\"></span>\\n    <span style=\\\"margin-left: -10px\\\"> {{count}}</span>\\n    <button mat-icon-button style=\\\"margin-left: 10px\\\" (click)=\\\"orders()\\\">\\n      <mat-icon>room_service</mat-icon>\\n    </button>\\n  </mat-toolbar-row>\\n</mat-toolbar>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatTableDataSource, MatDialog, MatPaginator, MatSort } from '../../../../../../node_modules/@angular/material';\nimport { MenuMasterService } from '../../../admin/KOT/menu-master/menu-master.service';\nimport { MenuMaster } from '../../../admin/KOT/menu-master/menu-master';\nimport { MenuGroupMasterService } from '../../../admin/KOT/menu-group-master/menu-group-master.service';\nimport { MenuGroupMaster } from '../../../admin/KOT/menu-group-master/menu-group-master';\nimport { MenuOrderService } from '../menu-order.service';\nimport { TempOrder } from '../../../admin/KOT/order/temp-order';\nimport { TableService } from '../../../admin/KOT/table/table.service';\nimport { Employee } from '../../../admin/HRM/employee/employee';\nimport { Table } from '../../../admin/KOT/table/table';\nimport { DatePipe } from '@angular/common';\nimport { Order } from '../../../admin/KOT/order/order';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { user } from '../../../admin/settings/accesscontrol/user';\nimport { OrderMenuComponent } from '../order-menu/order-menu.component';\n@Component({\n  selector: 'app-view-menu',\n  templateUrl: './view-menu.component.html',\n  styleUrls: ['./view-menu.component.css'],\n  providers: [DatePipe]\n})\nexport class ViewMenuComponent implements OnInit {\n  vegCtrl = new FormControl();\n  public amount = 0;\n  private user: user;\n  private employee: Employee;\n  private employeeid;\n  nonvegCtrl = new FormControl();\n  othersCtrl = new FormControl();\n  waiterCtrl = new FormControl();\n  veg: Observable<MenuMaster[]>\n  nonveg: Observable<MenuMaster[]>\n  others: Observable<MenuMaster[]>\n  private tableId;\n  private menuMaster: MenuMaster[];\n  private vegMenu: MenuMaster[];\n  private nonVegMenu: MenuMaster[];\n  private otherMenu: MenuMaster[];\n  private menuGroupMaster: MenuGroupMaster[];\n  private tempOrder: TempOrder;\n  private tempOrders: TempOrder[];\n\n  today: number = Date.now();\n  private table: Table;\n  private date;\n  private time;\n  private waiterId;\n  private waiterName;\n  private order: Order;\n  private tableName;\n  private count;\n\n\n  constructor(private activatedRoute: ActivatedRoute,\n    private menuMasterService: MenuMasterService,\n    private menuGroupMasterService: MenuGroupMasterService,\n    private orderService: MenuOrderService, private tableService: TableService,\n    private datePipe: DatePipe,\n    private matDialog: MatDialog,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.user = JSON.parse(localStorage.getItem('currentUser'));\n    this.employeeid = this.user.employeeId;\n    this.activatedRoute.params.subscribe(paramsId => {\n      this.tableId = paramsId.tableId;\n    });\n    this.getMenuMaster();\n    this.getWaiterName();\n    this.getTableName();\n    this.getTempOrderByTableId();\n    this.getMenuCount();\n    this.tempOrder = new TempOrder();\n    this.order = new Order();\n    this.date = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n    this.time = this.datePipe.transform(new Date(), 'HH:MM:SS');\n  }\n\n  getMenuMaster() {\n    this.menuMasterService.getMenuMaster().subscribe((menuList) => {\n      this.menuMaster = menuList;\n    }, err => {\n      alert(\"don't get\");\n    });\n  }\n\n  getTableName() {\n    this.tableService.getTableName(this.tableId).subscribe((data) => {\n      this.table = data;\n      this.tableName = this.table.tableName;\n    }, (error) => {\n      console.log(error);\n    })\n  }\n\n  getWaiterName() {\n    this.orderService.getWaiter(this.employeeid).subscribe((data) => {\n      this.employee = data;\n      this.waiterName = this.employee.employeeName;\n    }, (error) => {\n      console.log(error);\n    })\n  }\n\n  getTempOrderByTableId() {\n    this.orderService.getTempOrderByTableId(this.tableId, this.employeeid).subscribe((data) => {\n      this.tempOrders = data;\n      this.amount = this.tempOrder.amount\n    }, (error) => {\n      console.log(error)\n    });\n  }\n\n  /*Count the Menu Quantity*/\n  getMenuCount() {\n    this.orderService.getMenuCount(this.tableId, this.employeeid).subscribe((data) => {\n      this.count = data;\n    }, (error) => {\n      console.log(error);\n      this.count = 0;\n    })\n  }\n  getVegMenu() {\n    this.orderService.getVegMenu().subscribe((data) => {\n      this.vegMenu = data;\n      this.veg = this.vegCtrl.valueChanges\n        .pipe(\n          startWith(''),\n          map(state => state ? this._filterStateveg(state) : this.vegMenu.slice())\n        );\n    }, (error) => {\n      console.log(error);\n    })\n  }\n\n  private _filterStateveg(value: string): MenuMaster[] {\n    const filterValue = value.toLowerCase();\n    return this.vegMenu.filter(menu => menu.menuCode.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  getNonVegMenu() {\n    this.orderService.getNonVegMenu().subscribe((data) => {\n      this.nonVegMenu = data;\n      this.nonveg = this.nonvegCtrl.valueChanges\n        .pipe(\n          startWith(''),\n          map(state => state ? this._filterStateNonVeg(state) : this.nonVegMenu.slice())\n        );\n    }, (error) => {\n      console.log(error);\n    })\n  }\n\n  private _filterStateNonVeg(value: string): MenuMaster[] {\n    const filterValue = value.toLowerCase();\n    return this.nonVegMenu.filter(menu => menu.menuCode.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  getOtherMenu() {\n    this.orderService.getOtherMenu().subscribe((data) => {\n      this.otherMenu = data;\n      this.others = this.othersCtrl.valueChanges\n        .pipe(\n          startWith(''),\n          map(state => state ? this._filterStateOther(state) : this.otherMenu.slice())\n        );\n    }, (error) => {\n      console.log(error);\n    })\n  }\n\n  private _filterStateOther(value: string): MenuMaster[] {\n    const filterValue = value.toLowerCase();\n    return this.otherMenu.filter(menu => menu.menuCode.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  getMenuGroup() {\n    this.menuGroupMasterService.getMenuGroup().subscribe((menuGroupList) => {\n      this.menuGroupMaster = menuGroupList;\n    }, err => {\n      alert(\"don't get\");\n    });\n  }\n\n  addquantity(menuId: number, menuName: string, basicAmount: number, gst: number) {\n    if (this.amount == 0) {\n      let quantity = 1;\n      this.saveTempOrder(menuId, menuName, quantity, basicAmount, gst);\n    } else {\n      let quantity = 2;\n      this.saveTempOrder(menuId, menuName, quantity, basicAmount, gst);\n    }\n  }\n\n\n  subquantity(menuId: number, menuName: string, basicAmount: number, gst: number) {\n    this.tempOrder.tempOrderId = null;\n    this.tempOrder.tableId = this.tableId;\n    this.tempOrder.quantity = 1;\n    this.tempOrder.menuId = menuId;\n    this.tempOrder.menuName = menuName;\n    this.tempOrder.gst = gst;\n    this.tempOrder.basicAmount = basicAmount;\n    this.tempOrder.amount = basicAmount;\n    this.tempOrder.waiterId = this.employeeid;\n    this.orderService.decreaseQuantity(this.tempOrder).subscribe((data) => {\n      this.getTempOrderByTableId();\n      this.getMenuCount();\n    }, (error) => {\n      console.log(error);\n    })\n  }\n\n\n  /*Save Temp Order*/\n  saveTempOrder(menuId: number, menuName: string, quantity: number, basicAmount: number, gst: number) {\n    this.tempOrder.tempOrderId = null;\n    this.tempOrder.tableId = this.tableId;\n    this.tempOrder.quantity = 1;\n    this.tempOrder.menuId = menuId;\n    this.tempOrder.menuName = menuName;\n    this.tempOrder.gst = gst;\n    this.tempOrder.basicAmount = basicAmount;\n    this.tempOrder.amount = basicAmount;\n    this.tempOrder.waiterId = this.employeeid;\n    this.orderService.saveTempOrder(this.tempOrder).subscribe((data) => {\n      this.getTempOrderByTableId();\n      this.getMenuCount();\n      this.table.tableId = this.tableId;\n      this.table.status = 'order';\n      this.tableService.updateStatus(this.table).subscribe((data) => {\n        console.log(data);\n      }, (error) => {\n        console.log(error);\n      });\n\n    }, (error) => {\n      console.log(error);\n    })\n  }\n\n  /*Get  Order Menu view By Table Id*/\n\n\n  /*View the Order Dialog*/\n  orders() {\n    let orderId = 0;\n    if (this.count != 0) {\n      const dialogRef = this.matDialog.open(OrderMenuComponent, {\n        data: { orderId: orderId, tableId: this.tableId, waiterId: this.employeeid },\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        this.getMenuMaster();\n        this.getWaiterName();\n        this.getTableName();\n        this.getTempOrderByTableId();\n        this.getMenuCount();\n      });\n    } else {\n      alert(\"Please select any one Menu\")\n    }\n\n  }\n}\n","module.exports = \".container{\\r\\n    margin-top: 70px;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background-color: rgb(245, 202, 224);\\r\\n}\\r\\nmat-card{\\r\\n    text-align: center;\\r\\n    margin-top: 15px;\\r\\n    width: 100px;\\r\\n    height: 100px;\\r\\n    margin-left: 10px;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <mat-tab-group mat-stretch-tabs>\\n    <mat-tab label=\\\"AC\\\">\\n      <div class=\\\"row\\\" style=\\\"width: 100%;\\\">\\n        <div *ngFor=\\\"let tables of table\\\">\\n          <div *ngIf=\\\"tables.tableType=='AC'\\\">\\n            <div class=\\\"col-sm-4\\\">\\n              <div *ngIf=\\\"tables.status=='available'\\\">\\n                <mat-card style=\\\"background-color:green; color: white;\\\" [routerLink]=\\\"['../viewMenu',tables.tableId]\\\">\\n                  <span>{{tables.tableName}}</span>\\n                </mat-card>\\n              </div>\\n              <div *ngIf=\\\"tables.status=='order'\\\">\\n                <mat-card style=\\\"background-color:rgb(250, 6, 148); color: white;\\\" [routerLink]=\\\"['../viewMenu',tables.tableId]\\\" disabled>\\n                  <span>{{tables.tableName}}</span>\\n                </mat-card>\\n              </div>\\n              <div *ngIf=\\\"tables.status=='payment'\\\">\\n                <mat-card style=\\\"background-color:rgb(250, 9, 9); color: white;\\\" [routerLink]=\\\"['../viewMenu',tables.tableId]\\\" disabled>\\n                  <span>{{tables.tableName}}</span>\\n                </mat-card>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Non-AC\\\">\\n      <div class=\\\"row\\\" style=\\\"width: 100%;\\\">\\n        <div *ngFor=\\\"let tables of table\\\">\\n          <div *ngIf=\\\"tables.tableType=='NON-AC'\\\">\\n            <div class=\\\"col-sm-4\\\">\\n              <div *ngIf=\\\"tables.status=='available'\\\">\\n                <mat-card style=\\\"background-color:green; color: white;\\\" [routerLink]=\\\"['../viewMenu',tables.tableId]\\\">\\n                  <span>{{tables.tableName}}</span>\\n                </mat-card>\\n              </div>\\n              <div *ngIf=\\\"tables.status=='order'\\\">\\n                <mat-card style=\\\"background-color:rgb(250, 6, 148); color: white;\\\" [routerLink]=\\\"['../viewMenu',tables.tableId]\\\" disabled>\\n                  <span>{{tables.tableName}}</span>\\n                </mat-card>\\n              </div>\\n              <div *ngIf=\\\"tables.status=='payment'\\\">\\n                <mat-card style=\\\"background-color:rgb(250, 9, 9); color: white;\\\" [routerLink]=\\\"['../viewMenu',tables.tableId]\\\" disabled>\\n                  <span>{{tables.tableName}}</span>\\n                </mat-card>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </mat-tab>\\n  </mat-tab-group>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport{TableService} from '../../../admin/KOT/table/table.service';\nimport{Table} from '../../../admin/KOT/table/table';\nimport{Router} from '@angular/router';\n\n@Component({\n  selector: 'app-view-tables',\n  templateUrl: './view-tables.component.html',\n  styleUrls: ['./view-tables.component.css']\n})\nexport class ViewTablesComponent implements OnInit {\n  private table:Table[];\n  displayedColumns = ['tableId'];\n  tableId;\n\n  constructor(private tableService:TableService,\n  private router:Router) { }\n\n  ngOnInit() {\n    this.getAllTableList();\n  }\n  getAllTableList(){\n  this.tableService.getAllTableList().subscribe((viewTables)=>{\n    console.log('viewTables',viewTables);\n    this.table=viewTables;\n  },err=>{\n    alert(\"don't get\");\n  });\n}\n}\n"],"sourceRoot":""}