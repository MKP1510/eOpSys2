{"version":3,"sources":["webpack:///./node_modules/angular-datatables/index.js","webpack:///./node_modules/angular-datatables/src/angular-datatables.directive.js","webpack:///./node_modules/angular-datatables/src/angular-datatables.module.js","webpack:///./src/app/restaurants/admin/KOT/menu-master/menu-master.service.ts","webpack:///./src/app/restaurants/admin/KOT/table/table.service.ts","webpack:///./src/app/restaurants/admin/report/all-report/all-report.component.css","webpack:///./src/app/restaurants/admin/report/all-report/all-report.component.html","webpack:///./src/app/restaurants/admin/report/all-report/all-report.component.ts","webpack:///./src/app/restaurants/admin/report/datewise-report/datewise-report.component.css","webpack:///./src/app/restaurants/admin/report/datewise-report/datewise-report.component.html","webpack:///./src/app/restaurants/admin/report/datewise-report/datewise-report.component.ts","webpack:///./src/app/restaurants/admin/report/inventory-report/inventory-report.component.css","webpack:///./src/app/restaurants/admin/report/inventory-report/inventory-report.component.html","webpack:///./src/app/restaurants/admin/report/inventory-report/inventory-report.component.ts","webpack:///./src/app/restaurants/admin/report/invoice-list/invoice-list.component.css","webpack:///./src/app/restaurants/admin/report/invoice-list/invoice-list.component.html","webpack:///./src/app/restaurants/admin/report/invoice-list/invoice-list.component.ts","webpack:///./src/app/restaurants/admin/report/main-report/main-report.component.css","webpack:///./src/app/restaurants/admin/report/main-report/main-report.component.html","webpack:///./src/app/restaurants/admin/report/main-report/main-report.component.ts","webpack:///./src/app/restaurants/admin/report/menu-report/menu-report.component.css","webpack:///./src/app/restaurants/admin/report/menu-report/menu-report.component.html","webpack:///./src/app/restaurants/admin/report/menu-report/menu-report.component.ts","webpack:///./src/app/restaurants/admin/report/paymentwise-report/paymentwise-report.component.css","webpack:///./src/app/restaurants/admin/report/paymentwise-report/paymentwise-report.component.html","webpack:///./src/app/restaurants/admin/report/paymentwise-report/paymentwise-report.component.ts","webpack:///./src/app/restaurants/admin/report/report-routing.module.ts","webpack:///./src/app/restaurants/admin/report/report.component.css","webpack:///./src/app/restaurants/admin/report/report.component.html","webpack:///./src/app/restaurants/admin/report/report.component.ts","webpack:///./src/app/restaurants/admin/report/report.module.ts","webpack:///./src/app/restaurants/admin/report/report.service.ts","webpack:///./src/app/restaurants/admin/report/tablewise-report/tablewise-report.component.css","webpack:///./src/app/restaurants/admin/report/tablewise-report/tablewise-report.component.html","webpack:///./src/app/restaurants/admin/report/tablewise-report/tablewise-report.component.ts","webpack:///./src/app/restaurants/admin/report/timewise-report/timewise-report.component.css","webpack:///./src/app/restaurants/admin/report/timewise-report/timewise-report.component.html","webpack:///./src/app/restaurants/admin/report/timewise-report/timewise-report.component.ts","webpack:///./src/app/restaurants/admin/report/waiterwise-report/waiterwise-report.component.css","webpack:///./src/app/restaurants/admin/report/waiterwise-report/waiterwise-report.component.html","webpack:///./src/app/restaurants/admin/report/waiterwise-report/waiterwise-report.component.ts"],"names":[],"mappings":"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","file":"report-report-module.js","sourcesContent":["/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nexport { DataTableDirective } from './src/angular-datatables.directive';\nexport { DataTablesModule } from './src/angular-datatables.module';\n//# sourceMappingURL=index.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nvar DataTableDirective = /** @class */ (function () {\n    function DataTableDirective(el) {\n        this.el = el;\n        /**\n           * The DataTable option you pass to configure your table.\n           */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function () {\n                _this.displayTable();\n            });\n        }\n        else {\n            this.displayTable();\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function () {\n        var _this = this;\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (dtOptions) {\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    _this.dt = $(_this.el.nativeElement).DataTable(dtOptions);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    DataTableDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[datatable]'\n                },] },\n    ];\n    /** @nocollapse */\n    DataTableDirective.ctorParameters = function () { return [\n        { type: ElementRef, },\n    ]; };\n    DataTableDirective.propDecorators = {\n        \"dtOptions\": [{ type: Input },],\n        \"dtTrigger\": [{ type: Input },],\n    };\n    return DataTableDirective;\n}());\nexport { DataTableDirective };\n//# sourceMappingURL=angular-datatables.directive.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableDirective } from './angular-datatables.directive';\nvar DataTablesModule = /** @class */ (function () {\n    function DataTablesModule() {\n    }\n    DataTablesModule.forRoot = function () {\n        return {\n            ngModule: DataTablesModule\n        };\n    };\n    DataTablesModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [DataTableDirective],\n                    exports: [DataTableDirective]\n                },] },\n    ];\n    return DataTablesModule;\n}());\nexport { DataTablesModule };\n//# sourceMappingURL=angular-datatables.module.js.map","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  map, filter, catchError, mergeMap,\n} from 'rxjs/operators';\nimport { MenuMaster } from './menu-master';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuMasterService {\n  private baseUrl: string = 'http://localhost:8080/api';\n\n  private headers = new Headers({ 'Content-Type': 'application/json' });\n\n  private options = new RequestOptions({ headers: this.headers });\n  dialogData: any;\n\n  dataChange: BehaviorSubject<MenuMaster[]> = new BehaviorSubject<MenuMaster[]>([]);\n\n  private menuMaster: MenuMaster;\n\n  constructor(private _http: Http) { }\n\n  get data(): MenuMaster[] {\n    return this.dataChange.value;\n  }\n\n  getDialogData() {\n    return this.dialogData;\n  }\n\n  setter(menuMaster: MenuMaster) {\n    this.menuMaster = menuMaster;\n  }\n\n  getter() {\n    return this.menuMaster;\n  }\n\n  getMenuMaster(){\n    return this._http.get(this.baseUrl+'/getMenuMaster',this.options)\n    .pipe(map((response:Response)=>response.json()),\n  catchError((error:any)=>{\n    return Observable.throw(error);\n  }));\n  }\n  saveMenuMaster(menuMaster:MenuMaster){\n    return this._http.post(this.baseUrl+'/saveMenuMaster',JSON.stringify(menuMaster),this.options)\n    .pipe(map((response:Response)=>response.json()),\n  catchError((error:any)=>{\n    return Observable.throw(error);\n  }));\n  }\n\n  updateMenuMaster(menuMaster:MenuMaster){\n    return this._http.put(this.baseUrl+'/updateMenuMaster',JSON.stringify(menuMaster),this.options)\n    .pipe(map((response:Response)=>response.json()),\n  catchError((error:any)=>{\n    return Observable.throw(error);\n  }));\n  }\n\n  deleteMenuMaster(menuId:number){\n    return this._http.delete(this.baseUrl+'/deleteMenuMaster/'+menuId,this.options)\n    .pipe(map((response:Response)=>response.json()),\n  catchError((error:any)=>{\n    return Observable.throw(error);\n  }));\n  }\n  getMenuDetails(menuName:string){\n    return this._http.get(this.baseUrl + '/getMenuDetails/' +menuName, this.options)\n    .pipe(map((response: Response) => response.json()),\n      catchError((error: any) => {\n        return Observable.throw(error);\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Table } from './table';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableService {\n  private baseUrl: string = 'http://localhost:8080/api';\n\n  private headers = new Headers({ 'Content-Type': 'application/json' });\n\n  private options = new RequestOptions({ headers: this.headers });\n\n  private table: Table;\n\n  dialogData: any;\n\n  dataChange: BehaviorSubject<Table[]> = new BehaviorSubject<Table[]>([]);\n\n  constructor(private _http: Http) { }\n\n  getter() {\n    return this.table;\n  }\n\n  setter(table: Table) {\n    this.table = table;\n  }\n\n\n  getAllTableList(): Observable<Table[]> {\n    return this._http.get(this.baseUrl + '/GetAllTables', this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  createTable(table: Table): Observable<any> {\n    return this._http.post(this.baseUrl + '/createTable', JSON.stringify(table), this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  deleteTable(id: Number): Observable<any> {\n    return this._http.delete(this.baseUrl + '/deleteTable/' + id, this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n\n  }\n  editTable(table: Table): Observable<any> {\n    return this._http.put(this.baseUrl + '/updateTable', JSON.stringify(table), this.options)\n      .pipe(map((response: Response) => response.json())\n        , catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  getTableName(tableId: number) {\n    return this._http.get(this.baseUrl + '/getTableName/' + tableId, this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n  updateStatus(table:Table){\n    return this._http.put(this.baseUrl + '/updateStatus',JSON.stringify(table), this.options)\n    .pipe(map((response: Response) => response.json()),\n      catchError((error: any) => {\n        return Observable.throw(error);\n      }));\n  }\n}\n\n\n","module.exports = \"\"","module.exports = \"<button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" style=\\\"float: right; margin-top: 20px; margin-bottom: 30px;\\\" (click)=\\\"back()\\\">Previous Page</button>\\n<table datatable id=\\\"example\\\" [dtOptions]=\\\"dtOptions\\\"  [dtTrigger]=\\\"dtTrigger\\\" class=\\\"row-border hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\n  <thead>\\n    <tr>\\n      <th>Biling No</th>\\n      <th>Waiter Name</th>\\n      <th>Table Id</th>\\n      <th>Amount</th>\\n      <th>GST Amount</th>\\n      <th>Service Charge</th>\\n      <th>Discount</th>\\n      <th>Payment Mode</th> \\n    </tr>\\n  </thead>\\n  <tbody *ngIf=\\\"billing?.length > 0\\\"> \\n    <tr *ngFor=\\\"let billings of billing\\\">\\n      <td>{{ billings.billingId }}</td>\\n      <td>{{ billings.waiterId }}</td>\\n      <td>{{ billings.tableId }}</td>\\n      <td>{{ billings.totalAmount}}</td>\\n      <td>{{ billings.gstAmount }}</td>\\n      <td>{{ billings.serviceCharge }}</td>\\n      <td>{{ billings.discount}}</td>\\n      <td>{{ billings.cashType }}</td>\\n    </tr>\\n  </tbody>\\n  <tbody *ngIf=\\\"billing?.length == 0\\\">\\n      <tr>\\n        <td class=\\\"no-data-available\\\" colspan=\\\"4\\\">No Data Available in datatable</td>\\n      </tr>\\n    </tbody>\\n</table>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Billing } from '../../KOT/billing/billing';\nimport { ReportService } from '../report.service';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-all-report',\n  templateUrl: './all-report.component.html',\n  styleUrls: ['./all-report.component.css']\n})\nexport class AllReportComponent implements OnInit {\n  dtOptions: any = {};\n  private billing: Billing[] = [];\n  dtTrigger: Subject<any> = new Subject();\n  constructor(private reportService: ReportService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      lengthMenu: [\n        [10, 25, 50, -1],\n        ['10 rows', '25 rows', '50 rows', 'Show all']\n      ],\n      dom: 'Blfrtip',\n      buttons: [\n        'print', 'excel', 'pdf'\n      ]\n    }\n    this.billing = [];\n    this.getAllReport();\n  }\n\n  getAllReport() {\n    this.reportService.getAllReport().subscribe((data) => {\n      this.billing = data;\n      this.dtTrigger.next();\n    }, (error) => {\n      console.log(error);\n    });\n  }\n  back() {\n    this.router.navigate(['restaurants/admin/report'])\n  }\n}\n","module.exports = \"\"","module.exports = \"<button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" style=\\\"float: right; margin-top: 20px; margin-bottom: 30px;\\\" (click)=\\\"back()\\\">Previous Page</button>\\n<div class=\\\"container\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-3\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"My date\\\" [matDatepicker]=\\\"myDate\\\" #fromDate >\\n        <mat-datepicker-toggle matSuffix [for]=\\\"myDate\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #myDate></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"To Date\\\" #toDate name=\\\"toDate\\\" >\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n    <button type=\\\"submit\\\" id=\\\"newOrder\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"getDateWiseReport(fromDate.value,toDate.value)\\\">Report</button>\\n  </div>\\n</div>\\n<table datatable id=\\\"example\\\" [dtOptions]=\\\"dtOptions\\\"  [dtTrigger]=\\\"dtTrigger\\\" class=\\\"row-border hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\n  <thead>\\n    <tr>\\n      <th>Biling No</th>\\n      <th>Waiter Name</th>\\n      <th>Table Id</th>\\n      <th>Amount</th>\\n      <th>GST Amount</th>\\n      <th>Service Charge</th>\\n      <th>Discount</th>\\n      <th>Payment Mode</th> \\n    </tr>\\n  </thead>\\n  <tbody ><!--</tbody>*ngIf=\\\"billing?.length > 0\\\"> -->\\n    <tr *ngFor=\\\"let billings of billing\\\">\\n      <td>{{ billings.billingId }}</td>\\n      <td>{{ billings.waiterId }}</td>\\n      <td>{{ billings.tableId }}</td>\\n      <td>{{ billings.totalAmount}}</td>\\n      <td>{{ billings.gstAmount }}</td>\\n      <td>{{ billings.serviceCharge }}</td>\\n      <td>{{ billings.discount}}</td>\\n      <td>{{ billings.cashType }}</td>\\n    </tr>\\n  </tbody>\\n  <!--<tbody *ngIf=\\\"billing?.length == 0\\\">\\n      <tr>\\n        <td class=\\\"no-data-available\\\" colspan=\\\"4\\\">No Data Available in datatable</td>\\n      </tr>\\n    </tbody>-->\\n</table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ReportService } from '../report.service';\nimport { Subject } from 'rxjs';\nimport { Billing } from '../../KOT/billing/billing';\nimport { DataTableDirective } from 'angular-datatables';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-datewise-report',\n  templateUrl: './datewise-report.component.html',\n  styleUrls: ['./datewise-report.component.css'],\n  providers: [DatePipe]\n})\nexport class DatewiseReportComponent implements OnInit {\n  dtOptions: any = {};\n  private billing: Billing[] = [];\n  dtTrigger: Subject<any> = new Subject();\n  private date;\n  private date2;\n\n  constructor(private reportService: ReportService,\n    private datePipe: DatePipe,\n    private router:Router) { }\n\n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      infoEmpty: \"No entries to show\",\n      lengthMenu: [\n        [10, 25, 50, -1],\n        ['10 rows', '25 rows', '50 rows', 'Show all']\n      ],\n      dom: 'Blfrtip',\n      buttons: [\n        'print', 'excel', 'pdf'\n      ]\n    }\n    this.billing = [];\n\n  }\n  getDateWiseReport(fromDate, toDate) {\n    this.date = this.datePipe.transform(fromDate, 'yyyy-MM-dd');\n    this.date2 = this.datePipe.transform(toDate, 'yyyy-MM-dd');\n    this.reportService.getDateWiseReport(this.date, this.date2).subscribe((data) => {\n      this.billing = data;\n      this.dtTrigger.next();\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n\n  getWaiterWiseReport(fromDate, toDate, waiterId) {\n    this.date = this.datePipe.transform(fromDate, 'yyyy-MM-dd');\n    this.date2 = this.datePipe.transform(toDate, 'yyyy-MM-dd');\n    this.reportService.getWaiterWiseReport(this.date, this.date2, waiterId).subscribe((data) => {\n      console.log(data);\n      this.billing = data;\n      this.dtOptions = {\n        pagingType: 'full_numbers',\n        pageLength: 10,\n        //paging: false,\n        lengthMenu: [\n          [10, 25, 50, -1],\n          ['10 rows', '25 rows', '50 rows', 'Show all']\n        ],\n        dom: 'Blfrtip',\n        buttons: [\n          'print', 'excel', 'pdf'\n        ]\n      }\n      this.dtTrigger.next();\n    }, (error) => {\n      console.log(error);\n    });\n  }\n  back() {\n    this.router.navigate(['restaurants/admin/report'])\n  }\n}\n","module.exports = \"\"","module.exports = \"<!--<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-3\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"From Date\\\" [matDatepicker]=\\\"fromDate\\\" #fromDate>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"fromDate\\\" ></mat-datepicker-toggle>\\n        <mat-datepicker #fromDate></mat-datepicker>\\n       </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"To Date\\\" [matDatepicker]=\\\"toDate\\\" #toDate>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"toDate\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #toDate></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Vendor Name\\\" aria-label=\\\"Vendor Name\\\" [matAutoComplete]=\\\"auto\\\" #vendor [formControl]=\\\"stateCtrl\\\">\\n        <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n          <mat-option *ngFor=\\\"let vendor of filteredStates | async\\\" [value]=vendor.vendorName>\\n            <span>{{vendor.vendorName}}</span>\\n\\n          </mat-option>\\n        </mat-autocomplete>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n    <button type=\\\"submit\\\" id=\\\"newOrder\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"getVendorwiseReport(fromDate.value,toDate.value,#vendor.value\\\">\\n    </button>\\n  </div>\\n</div>\\n<mat-divider style=\\\"margin-top:10px;margin-bottom:10px;\\\"></mat-divider>\\n<table datatable id=\\\"example\\\" class=\\\"display nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\n  <thead>\\n    <tr>\\n      <th>PurchaseId</th>\\n      <th>Invoice No</th>\\n      <th>Gst Category</th>\\n      <th>Date</th>\\n      <th>Vendor Name</th>\\n      <th>Organization</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let purchase of purchases let i=index\\\">\\n      <td>{{purchase.purchaseId}}</td>\\n      <td>{{purchase.invoiceNo}}</td>\\n      <td>{{purchase.gstCategory}}</td>\\n      <td>{{purchase.v}}</td>\\n    </tr>\\n  </tbody>\\n</table>-->\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inventory-report',\n  templateUrl: './inventory-report.component.html',\n  styleUrls: ['./inventory-report.component.css']\n})\nexport class InventoryReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <h6>Table</h6>\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n      <div class=\\\"example-header\\\">\\n        <mat-form-field>\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n        </mat-form-field>\\n      </div>\\n      <mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n        <mat-container matColumnDef=\\\"billingid\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Table Id</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let tables\\\">{{tables.tableId}}</mat-cell>\\n        </mat-container>\\n  \\n        <mat-container matColumnDef=\\\"tablename\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Table Name</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let tables\\\">{{tables.tableName}}</mat-cell>\\n        </mat-container>\\n  \\n        <mat-container matColumnDef=\\\"waitername\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Table Type</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let tables\\\">{{tables.tableType}}</mat-cell>\\n        </mat-container>\\n  \\n        <mat-container matColumnDef=\\\"date\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Service Charge</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let tables\\\">{{tables.serviceCharge}}</mat-cell>\\n        </mat-container>\\n  \\n        <mat-container matColumnDef=\\\"time\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Table Id</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let tables\\\">{{tables.tableId}}</mat-cell>\\n          </mat-container>\\n    \\n          <mat-container matColumnDef=\\\"cash\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Table Name</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let tables\\\">{{tables.tableName}}</mat-cell>\\n          </mat-container>\\n    \\n          <mat-container matColumnDef=\\\"card\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Table Type</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let tables\\\">{{tables.tableType}}</mat-cell>\\n          </mat-container>\\n    \\n          <mat-container matColumnDef=\\\"totalAmount\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Service Charge</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let tables\\\">{{tables.serviceCharge}}</mat-cell>\\n          </mat-container>\\n        <ng-container matColumnDef=\\\"actions\\\">\\n          <mat-header-cell *matHeaderCellDef>\\n            <button mat-icon-button matTooltip=\\\"Add Table\\\" color=\\\"primary\\\" (click)=\\\"createTable()\\\">\\n              <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n            </button>\\n            <button matTooltip=\\\"Refresh\\\" mat-icon-button (click)=\\\"getAllTableList()\\\">\\n              <mat-icon>refresh</mat-icon>\\n            </button>\\n          </mat-header-cell>\\n  \\n          <mat-cell *matCellDef=\\\"let tables; let i=index;\\\">\\n            <button mat-icon-button matTooltip=\\\"Edit Table\\\" color=\\\"accent\\\" (click)=\\\"editTable(i, tables.tableId, tables.tableName,tables.tableType,tables.serviceCharge)\\\">\\n              <mat-icon aria-label=\\\"edit\\\">edit</mat-icon>\\n            </button>\\n  \\n            <button mat-icon-button matTooltip=\\\"Delete Table\\\" color=\\\"accent\\\" (click)=\\\"deleteTable(i, tables.tableId,  tables.tableName,tables.tableType,tables.serviceCharge)\\\">\\n              <mat-icon aria-label=\\\"delete\\\">delete</mat-icon>\\n            </button>\\n  \\n          </mat-cell>\\n        </ng-container>\\n        <mat-header-row mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n      </mat-table>\\n      <mat-paginator [pageSizeOptions]=\\\"[ 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n    </div>\"","import { Component, OnInit,ViewChild,ElementRef } from '@angular/core';\nimport { ReportService } from '../report.service';\nimport { Billing } from '../../KOT/billing/billing';\nimport {MatTableDataSource,MatDialog,MatPaginator,MatSort} from '@angular/material';\n@Component({\n  selector: 'app-invoice-list',\n  templateUrl: './invoice-list.component.html',\n  styleUrls: ['./invoice-list.component.css']\n})\nexport class InvoiceListComponent implements OnInit {\n  dataSource;\n  displayedColumns = ['billingId', 'tablename', 'waiterName', 'date','time','cash','card','totalAmount'];\n\n \n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort:MatSort;\n    @ViewChild('filter') filter: ElementRef;\n\n\n    applyFilter(filterValue: string) {\n      filterValue = filterValue.trim(); // Remove whitespace\n      filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n      this.dataSource.filter = filterValue;\n    }\n\n  \n\n  private billing: Billing;\n  constructor(private reportService: ReportService,\n    private _dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.getAllInvoice();\n  }\n\n\n  getAllInvoice() {\n    this.reportService.getAllReport().subscribe((data) => {\n      this.billing = data;\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, (error) => {\n      console.log(error);\n    })\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  main-report works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-report',\n  templateUrl: './main-report.component.html',\n  styleUrls: ['./main-report.component.css']\n})\nexport class MainReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-option-img {\\r\\n    vertical-align: middle;\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n  \\r\\n  [dir='rtl'] .example-option-img {\\r\\n    margin-right: 0;\\r\\n    margin-left: 8px;\\r\\n  }\\r\\n  \\r\\n  table{\\r\\n    text-align: center;\\r\\n    font-size: 14px;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n}\\r\\n  \\r\\n  button{\\r\\n    background-color: green;\\r\\n}\"","module.exports = \"<button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" style=\\\"float: right; margin-top: 20px; margin-bottom: 30px;\\\" (click)=\\\"back()\\\">Previous Page</button>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-3\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"My date\\\" [matDatepicker]=\\\"myDate\\\" #fromDate >\\n        <mat-datepicker-toggle matSuffix [for]=\\\"myDate\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #myDate></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"To Date\\\" #toDate name=\\\"toDate\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Menu Name\\\" aria-label=\\\"Menu Name\\\" [matAutocomplete]=\\\"auto\\\" #menu [formControl]=\\\"stateCtrl\\\">\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n            <mat-option *ngFor=\\\"let menu of filteredStates | async\\\" [value]=\\\"menu.menuName\\\">\\n              <span>{{menu.menuCode}}  :</span> \\n              <small>{{menu.menuName}}</small>\\n            </mat-option>\\n          </mat-autocomplete>\\n        </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n    <button type=\\\"submit\\\" id=\\\"newOrder\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"getMenuWiseReport(fromDate.value,toDate.value,menu.value)\\\">Report</button>\\n  </div>\\n</div>\\n<mat-divider style=\\\"margin-top: 10px; margin-bottom: 10px;\\\"></mat-divider>\\n  <table datatable  [dtOptions]=\\\"dtOptions\\\"  [dtTrigger]=\\\"dtTrigger\\\" id=\\\"example\\\" class=\\\"display nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\n    <thead>\\n      <tr>\\n        <th>order No</th>\\n        <th>Waiter Name</th>\\n        <th>Tabel Name</th>\\n        <th>Date</th>\\n        <th>Time</th>\\n        <th>Menu Name</th>\\n        <th>Quantity</th>\\n        <th>Amount</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let orders of order let i=index\\\">\\n        <td>{{ orders.orderId}}</td>\\n        <td>{{ orders.waiterName }}</td>\\n        <td>{{ orders.tableName }}</td>\\n        <td>{{ orders.date}}</td>\\n        <td>{{ orders.time}}</td>\\n        <td>{{orders.menuOrder[0].menuName}}</td>\\n        <td>{{orders.menuOrder[0].quantity}}</td>\\n        <td>{{orders.menuOrder[0].amount}}</td>\\n      </tr>\\n    </tbody>\\n  </table>\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { MenuMasterService } from '../../KOT/menu-master/menu-master.service';\nimport { MenuMaster } from '../../KOT/menu-master/menu-master';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { ReportService } from '../report.service';\nimport { DatePipe } from '@angular/common';\nimport { Order } from '../../KOT/order/order';\nimport { MenuOrder } from '../../KOT/order/menu-order';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport { Table } from '../../KOT/table/table';\nimport { Http } from '@angular/http';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-menu-report',\n  templateUrl: './menu-report.component.html',\n  styleUrls: ['./menu-report.component.css'],\n  providers: [DatePipe]\n})\n\nexport class MenuReportComponent implements OnInit {\n  @ViewChild(DataTableDirective)\n  datatableElement: DataTableDirective;\n  dtOptions: any = {};\n  dtTrigger: Subject<any> = new Subject();\n  private menuMaster: MenuMaster[];\n  stateCtrl = new FormControl();\n  private date;\n  private date2;\n  private order: Order[];\n  private menuOrder: MenuOrder[];\n  filteredStates: Observable<MenuMaster[]>\n  private table: Table[];\n\n  constructor(private menuMasterService: MenuMasterService,\n    private datePipe: DatePipe,\n    private router:Router,\n    private reportService: ReportService,\n    private http: Http) { }\n\n\n  ngOnInit() {\n    this.dtOptions = {\n      draw: true,\n      searching: false,\n      pagingType: 'full_numbers',\n      pageLength: 10,\n\n      lengthMenu: [\n        [10, 25, 50, -1],\n        ['10 rows', '25 rows', '50 rows', 'Show all']\n      ],\n      dom: 'Blfrtip',\n      buttons: [\n        'print', 'excel', 'pdf'\n      ]\n    }\n    this.order = [];\n    this.getAllMenuMaster();\n  }\n\n  getAllMenuMaster() {\n    this.menuMasterService.getMenuMaster().subscribe((data) => {\n      this.menuMaster = data;\n      this.filteredStates = this.stateCtrl.valueChanges\n        .pipe(\n          startWith(''),\n          map(state => state ? this._filterStates(state) : this.menuMaster.slice())\n        );\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  private _filterStates(value: string): MenuMaster[] {\n    const filterValue = value.toLowerCase();\n    return this.menuMaster.filter(menu => menu.menuCode.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  getMenuWiseReport(fromDate, toDate, menuName) {\n    this.date = this.datePipe.transform(fromDate, 'yyyy-MM-dd');\n    this.date2 = this.datePipe.transform(toDate, 'yyyy-MM-dd');\n    this.reportService.getMenuWiseReport(this.date, this.date2, menuName).subscribe((data) => {\n      this.order = data;\n      this.dtTrigger.next();\n      console.log(this.order)\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  getMenuReport() {\n    this.reportService.getMenuReport().subscribe((data) => {\n      this.order = data;\n      this.dtTrigger.next();\n    }, (error) => {\n      console.log(error);\n    })\n  }\n\n  back() {\n    this.router.navigate(['restaurants/admin/report'])\n  }\n}\n","module.exports = \"\"","module.exports = \"<button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" style=\\\"float: right; margin-top: 20px; margin-bottom: 30px;\\\" (click)=\\\"back()\\\">Previous Page</button>\\n<div class=\\\"container\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-3\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"My date\\\" [matDatepicker]=\\\"myDate\\\" #fromDate >\\n        <mat-datepicker-toggle matSuffix [for]=\\\"myDate\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #myDate></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"To Date\\\" #toDate name=\\\"toDate\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n      <div class=\\\"form\\\">    \\n          <mat-form-field class=\\\"example-full-width\\\">      \\n              <mat-select name=\\\"cashType\\\" placeholder=\\\"Payment Type\\\" #payment >\\n                <mat-option value=\\\"cash\\\">Cash</mat-option>\\n                <mat-option value=\\\"card\\\">Card</mat-option>\\n                <mat-option value=\\\"others\\\">Otherd</mat-option>\\n              </mat-select>         \\n        </mat-form-field>\\n      </div>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n    <button type=\\\"submit\\\" id=\\\"newOrder\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"getPaymentModeWiseReport(fromDate.value,toDate.value,payment.value)\\\">Report</button>\\n  </div>\\n</div>\\n<mat-divider style=\\\"margin-top: 10px; margin-bottom: 10px;\\\"></mat-divider>\\n  <table datatable id=\\\"example\\\" [dtOptions]=\\\"dtOptions\\\"  [dtTrigger]=\\\"dtTrigger\\\" class=\\\"row-border hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\n    <thead>\\n      <tr>\\n        <th>Biling No</th>\\n        <th>Waiter Name</th>\\n        <th>Table Id</th>\\n        <th>Amount</th>\\n        <th>GST Amount</th>\\n        <th>Service Charge</th>\\n        <th>Discount</th>\\n        <th>Payment Mode</th> \\n      </tr>\\n    </thead>\\n    <tbody *ngIf=\\\"billing?.length > 0\\\"> \\n      <tr *ngFor=\\\"let billings of billing\\\">\\n        <td>{{ billings.billingId }}</td>\\n        <td>{{ billings.waiterId }}</td>\\n        <td>{{ billings.tableId }}</td>\\n        <td>{{ billings.totalAmount}}</td>\\n        <td>{{ billings.gstAmount }}</td>\\n        <td>{{ billings.serviceCharge }}</td>\\n        <td>{{ billings.discount}}</td>\\n        <td>{{ billings.cashType }}</td>\\n      </tr>\\n    </tbody>\\n    <tbody *ngIf=\\\"billing?.length == 0\\\">\\n        <tr>\\n          <td class=\\\"no-data-available\\\" colspan=\\\"4\\\">No Data Available in datatable</td>\\n        </tr>\\n      </tbody>\\n  </table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Billing } from '../../KOT/billing/billing';\nimport { DatePipe } from '../../../../../../node_modules/@angular/common';\nimport { ReportService } from '../report.service';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-paymentwise-report',\n  templateUrl: './paymentwise-report.component.html',\n  styleUrls: ['./paymentwise-report.component.css'],\n  providers: [DatePipe]\n})\nexport class PaymentwiseReportComponent implements OnInit {\n  dtOptions: any = {};\n  private billing: Billing[] = [];\n  dtTrigger: Subject<any> = new Subject();\n  private date;\n  private date2;\n  constructor(private datePipe: DatePipe,\n    private router: Router,\n    private reportService: ReportService) { }\n\n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      lengthMenu: [\n        [10, 25, 50, -1],\n        ['10 rows', '25 rows', '50 rows', 'Show all']\n      ],\n      dom: 'Blfrtip',\n      buttons: [\n        'print', 'excel', 'pdf'\n      ]\n    }\n    this.billing = [];\n  }\n\n  getPaymentModeWiseReport(fromDate, toDate, cashType) {\n    this.date = this.datePipe.transform(fromDate, 'yyyy-MM-dd');\n    this.date2 = this.datePipe.transform(toDate, 'yyyy-MM-dd');\n    this.reportService.getPaymentModeWiseReport(this.date, this.date2, cashType).subscribe((data) => {\n      this.billing = data;\n      this.dtTrigger.next();\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  back() {\n    this.router.navigate(['restaurants/admin/report'])\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ReportComponent } from './report.component';\r\nimport {MenuReportComponent} from './menu-report/menu-report.component';\r\nimport {InventoryReportComponent} from './inventory-report/inventory-report.component';\r\nimport {AllReportComponent} from './all-report/all-report.component';\r\nimport {DatewiseReportComponent} from './datewise-report/datewise-report.component';\r\nimport {WaiterwiseReportComponent} from './waiterwise-report/waiterwise-report.component';\r\nimport {TablewiseReportComponent} from './tablewise-report/tablewise-report.component';\r\nimport {PaymentwiseReportComponent} from './paymentwise-report/paymentwise-report.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: ReportComponent\r\n    },\r\n    {\r\n        path: 'allReport', component: AllReportComponent\r\n    },   \r\n    {\r\n        path: 'datewiseReport', component: DatewiseReportComponent\r\n    },\r\n    {\r\n        path: 'waiterwiseReport', component: WaiterwiseReportComponent\r\n    },\r\n    {\r\n        path: 'tablewiseReport', component: TablewiseReportComponent\r\n    },\r\n    {\r\n        path: 'paymentwiseReport', component: PaymentwiseReportComponent\r\n    },    \r\n    {\r\n        path:'menuReport',component:MenuReportComponent\r\n    },\r\n    {\r\n        path:'inventoryReport',component:InventoryReportComponent\r\n    }\r\n  \r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ReportRoutingModule {\r\n}\r\n","module.exports = \"table{\\r\\n    text-align: center;\\r\\n    font-size: 14px;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n}\\r\\nbutton{\\r\\n    background-color: green;\\r\\n}\\r\\n#row1{\\r\\n    margin-left:100px;\\r\\n    margin-right:100px;\\r\\n    margin-bottom:50px;\\r\\n    margin-top:50px;\\r\\n\\r\\n}\\r\\n#row2{\\r\\n    margin-left:100px;\\r\\n    margin-right:100px;\\r\\n    margin-top:50px;\\r\\n}\\r\\n#row3{\\r\\n    margin-top:50px;\\r\\n    margin-right:300px;\\r\\n    margin-left:300px;\\r\\n}\\r\\n#row4{\\r\\n    margin-top:50px;\\r\\n}\\r\\nh2{\\r\\n    margin-top:50px;\\r\\n}\\r\\nbutton{\\r\\n    width:250px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2 style=\\\"text-align: center;color: orangered\\\" > <i><u>Reports</u></i></h2>\\n  <div class=\\\"row\\\" id=\\\"row1\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <button mat-flat-button color=\\\"primary\\\"  (click)=\\\"getAllReport()\\\">All Report</button>\\n    </div>\\n    <div class=\\\"col-sm-4\\\">\\n      <button mat-flat-button color=\\\"primary\\\" (click)=\\\"datewisereport()\\\">Datewise Report</button>\\n    </div>\\n    <div class=\\\"col-sm-4\\\">\\n      <button mat-flat-button color=\\\"primary\\\" (click)=\\\"waiterwisereport()\\\">Waiterwise Report</button>\\n    </div>\\n    </div>\\n    <div class=\\\"row\\\" id=\\\"row2\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <button mat-flat-button color=\\\"primary\\\" (click)=\\\"tablewisereport()\\\">Tablewise Report</button>\\n    </div> \\n    <div class=\\\"col-sm-4\\\">\\n      <button mat-flat-button color=\\\"primary\\\" (click)=\\\"paymentwisereport()\\\">Paymentwise Report</button>\\n    </div>\\n    <div class=\\\"col-sm-4\\\">\\n      \\n    </div>\\n  </div>\\n  <h2 style=\\\"text-align: center;color:orangered\\\"><u><i>Menuwise Reports</i></u></h2>\\n  <div class=\\\"row\\\"  id=\\\"row3\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <button mat-flat-button color=\\\"primary\\\" (click)=\\\"menuReport()\\\">Menu Report</button>\\n    </div>\\n    <div class=\\\"col-sm-6\\\">\\n      <button mat-flat-button color=\\\"primary\\\" (click)=\\\"datewisemenuReport()\\\">Datewise MenuReport</button>\\n    </div>\\n    </div>\\n    <h2 style=\\\"text-align: center;color:orangered\\\"> <u><i>Inventory Report</i></u></h2>\\n    <div class=\\\"row\\\" id=\\\"row4\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <button mat-flat-button color=\\\"primary\\\" (click)=\\\"inventoryReport()\\\">Inventory Report</button>\\n    </div>\\n  </div>\\n  </div>\\n\\n \"","import { Component,  OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit{\n  constructor(\n    private router: Router) { }\n  ngOnInit(): void {\n\n  }\n  getAllReport() {\n    this.router.navigate(['restaurants/admin/report/allReport'])\n  }\n  datewisereport() {\n    this.router.navigate(['restaurants/admin/report/datewiseReport'])\n  }\n  waiterwisereport() {\n    this.router.navigate(['restaurants/admin/report/waiterwiseReport'])\n  }\n  tablewisereport() {\n    this.router.navigate(['restaurants/admin/report/tablewiseReport'])\n  }\n  paymentwisereport() {\n    this.router.navigate(['restaurants/admin/report/paymentwiseReport'])\n  }\n\n\n\n\n\n\n\n\n\n\n\n  menuReport() {\n    this.router.navigate(['restaurants/admin/report/menuReport'])\n  }\n\n  inventoryReport() {\n    this.router.navigate(['restaurants/admin/report/inventoryReport'])\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReportComponent } from './report.component';\nimport { ReportRoutingModule } from './report-routing.module';\nimport { MainReportComponent } from './main-report/main-report.component';\nimport { MenuReportComponent } from './menu-report/menu-report.component';\nimport { InventoryReportComponent } from './inventory-report/inventory-report.component';\nimport { TableService } from '../KOT/table/table.service';\nimport { MenuMasterService } from '../KOT/menu-master/menu-master.service';\nimport { HttpModule } from '@angular/http';\nimport { ReportService } from './report.service';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { DataTablesModule } from 'angular-datatables';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatTableModule, MatDialogModule, MatButtonModule, MatDatepickerModule, MatAutocompleteModule,\n  MatInputModule, MatPaginatorModule, MatIconModule, MatNativeDateModule,\n  MatSortModule, MatToolbarModule, MatSelectModule, MatTooltipModule, MatDividerModule\n} from '@angular/material';\nimport { EmployeeService } from '../HRM/employee/employee.service';\nimport { OrderService } from '../KOT/order/order.service';\nimport { AllReportComponent } from './all-report/all-report.component';\nimport { DatewiseReportComponent } from './datewise-report/datewise-report.component';\nimport { TimewiseReportComponent } from './timewise-report/timewise-report.component';\nimport { WaiterwiseReportComponent } from './waiterwise-report/waiterwise-report.component';\nimport { TablewiseReportComponent } from './tablewise-report/tablewise-report.component';\nimport { PaymentwiseReportComponent } from './paymentwise-report/paymentwise-report.component';\nimport { InvoiceListComponent } from './invoice-list/invoice-list.component';\n@NgModule({\n  imports: [\n    CommonModule, MatDatepickerModule, MatNativeDateModule,\n    ReportRoutingModule, FormsModule, ReactiveFormsModule, MatAutocompleteModule,\n    HttpModule, MatTableModule, MatDialogModule, MatButtonModule,\n    MatInputModule, MatPaginatorModule, MatIconModule, MatDividerModule,\n    MatSortModule, MatToolbarModule, MatSelectModule, MatTooltipModule, DataTablesModule\n  ],\n  providers: [\n    TableService, ReportService, EmployeeService, MenuMasterService,OrderService\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  declarations: [ReportComponent, MainReportComponent, MenuReportComponent, InventoryReportComponent, AllReportComponent, DatewiseReportComponent, TimewiseReportComponent, WaiterwiseReportComponent, TablewiseReportComponent, PaymentwiseReportComponent, InvoiceListComponent]\n})\nexport class ReportModule { }\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  map, filter, catchError, mergeMap,\n} from 'rxjs/operators';\n\nimport { Time } from '../../../../../node_modules/@angular/common';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService {\n  private baseUrl: string = 'http://localhost:8080/api';\n\n  private headers = new Headers({ 'Content-Type': 'application/json' });\n\n  private options = new RequestOptions({ headers: this.headers });\n  dialogData: any;\n\n  constructor(private _http: Http) { }\n\n  getAllReport() {\n    return this._http.get(this.baseUrl + '/getAllReport', this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  getDateWiseReport(fromDate: Date, toDate: Date) {\n    return this._http.get(this.baseUrl + '/getDateWiseReport/' + fromDate + '/' + toDate, this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  getTimeWiseReport(date: Date, fromTime: Time, toTime: Time) {\n    return this._http.get(this.baseUrl + '/getTimeWiseReport/' + date + '/' + fromTime + '/' + toTime, this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  getWaiterWiseReport(fromDate: Date, toDate: Date, waiterId: number) {\n    return this._http.get(this.baseUrl + '/getWaiterWiseReport/' + fromDate + '/' + toDate + '/' + waiterId, this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n  getTableWiseReport(fromDate: Date, toDate: Date, tableId: number) {\n    return this._http.get(this.baseUrl + '/getTableWiseReport/' + fromDate + '/' + toDate + '/' + tableId, this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  getPaymentModeWiseReport(fromDate: Date, toDate: Date, cashType: number) {\n    return this._http.get(this.baseUrl + '/getPaymentModeWiseReport/' + fromDate + '/' + toDate + '/' + cashType, this.options)\n      .pipe(map((response: Response) => response.json()),\n        catchError((error: any) => {\n          return Observable.throw(error);\n        }));\n  }\n\n  getMenuWiseReport(fromDate: Date, toDate: Date, menuName: String){\n    return this._http.get(this.baseUrl + '/getMenuWiseReport/' + fromDate + '/' + toDate + '/' + menuName, this.options)\n    .pipe(map((response: Response) => response.json()),\n      catchError((error: any) => {\n        return Observable.throw(error);\n      }));\n  }\n\n  getMenuReport(){\n    return this._http.get(this.baseUrl + '/getMenuReport' , this.options)\n    .pipe(map((response: Response) => response.json()),\n      catchError((error: any) => {\n        return Observable.throw(error);\n      }));\n  }\n\n  private extractData(res: Response) {\n    const body = res.json();\n    return body.data || {};\n  }\n}\n","module.exports = \"\"","module.exports = \"<button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" style=\\\"float: right; margin-top: 20px; margin-bottom: 30px;\\\" (click)=\\\"back()\\\">Previous Page</button>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-3\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"My date\\\" [matDatepicker]=\\\"myDate\\\" #fromDate>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"myDate\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #myDate></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"To Date\\\" #toDate name=\\\"toDate\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n      <div class=\\\"form\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput  placeholder=\\\"Table Name\\\" aria-label=\\\"Table Name\\\" [matAutocomplete]=\\\"table1\\\" #tableId [formControl]=\\\"stateCtrl\\\">\\n              <mat-autocomplete #table1=\\\"matAutocomplete\\\">\\n                  <mat-option #table1 *ngFor=\\\"let tables of table\\\" [value]=\\\"tables.tableId\\\">\\n                          {{tables.tableName}}\\n                  </mat-option>\\n              </mat-autocomplete>\\n          </mat-form-field>\\n      </div>\\n    </div>\\n  <div class=\\\"col-sm-3\\\">\\n    <button type=\\\"submit\\\" id=\\\"newOrder\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"getTableWiseReport(fromDate.value,toDate.value,tableId.value)\\\">Report</button>\\n  </div>\\n</div>\\n<mat-divider style=\\\"margin-top: 10px; margin-bottom: 10px;\\\"></mat-divider>\\n  <table datatable id=\\\"example\\\" [dtOptions]=\\\"dtOptions\\\"  [dtTrigger]=\\\"dtTrigger\\\" class=\\\"display nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\n    <thead>\\n      <tr>\\n        <th>Biling No</th>\\n        <th>Waiter Name</th>\\n        <th>Table Id</th>\\n        <th>Amount</th>\\n        <th>GST Amount</th>\\n        <th>Service Charge</th>\\n        <th>Discount</th>\\n        <th>Payment Mode</th> \\n      </tr>\\n    </thead>\\n    <tbody *ngIf=\\\"billing?.length > 0\\\"> \\n      <tr *ngFor=\\\"let billings of billing\\\">\\n        <td>{{ billings.billingId }}</td>\\n        <td>{{ billings.waiterId }}</td>\\n        <td>{{ billings.tableId }}</td>\\n        <td>{{ billings.totalAmount}}</td>\\n        <td>{{ billings.gstAmount }}</td>\\n        <td>{{ billings.serviceCharge }}</td>\\n        <td>{{ billings.discount}}</td>\\n        <td>{{ billings.cashType }}</td>\\n      </tr>\\n    </tbody>\\n    <tbody *ngIf=\\\"billing?.length == 0\\\">\\n        <tr>\\n          <td class=\\\"no-data-available\\\" colspan=\\\"4\\\">No Data Available in datatable</td>\\n        </tr>\\n      </tbody>\\n  </table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ReportService } from '../report.service';\nimport { DatePipe } from '@angular/common';\nimport { Billing } from '../../KOT/billing/billing';\nimport { Table } from '../../KOT/table/table';\nimport { Subject } from 'rxjs';\nimport { TableService } from '../../KOT/table/table.service';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-tablewise-report',\n  templateUrl: './tablewise-report.component.html',\n  styleUrls: ['./tablewise-report.component.css'],\n  providers: [DatePipe]\n})\nexport class TablewiseReportComponent implements OnInit {\n  dtOptions: any = {};\n  private billing: Billing[] = [];\n  dtTrigger: Subject<any> = new Subject();\n  private table: Table[];\n  private date;\n  private date2;\n  constructor(private reportService: ReportService,\n    private datePipe: DatePipe,\n    private router: Router,\n    private tableService: TableService) { }\n\n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      lengthMenu: [\n        [10, 25, 50, -1],\n        ['10 rows', '25 rows', '50 rows', 'Show all']\n      ],\n      dom: 'Blfrtip',\n      buttons: [\n        'print', 'excel', 'pdf'\n      ]\n    }\n    this.billing = [];\n    this.table = [];\n    this.getAllTable();\n  }\n  getAllTable() {\n    this.tableService.getAllTableList().subscribe((data) => {\n      this.table = data;\n      console.log(this.table);\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n\n  getTableWiseReport(fromDate, toDate, tableId) {\n    this.date = this.datePipe.transform(fromDate, 'yyyy-MM-dd');\n    this.date2 = this.datePipe.transform(toDate, 'yyyy-MM-dd');\n    this.reportService.getTableWiseReport(this.date, this.date2, tableId).subscribe((data) => {\n      this.billing = data;\n      this.dtTrigger.next();\n    }, (error) => {\n      console.log(error);\n    });\n  }\n  back() {\n    this.router.navigate(['restaurants/admin/report'])\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  timewise-report works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-timewise-report',\n  templateUrl: './timewise-report.component.html',\n  styleUrls: ['./timewise-report.component.css']\n})\nexport class TimewiseReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" style=\\\"float: right; margin-top: 20px; margin-bottom: 30px;\\\" (click)=\\\"back()\\\">Previous Page</button>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-3\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"My date\\\" [matDatepicker]=\\\"myDate\\\" #fromDate (click)=\\\"refresh()\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"myDate\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #myDate></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"To Date\\\" #toDate name=\\\"toDate\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput #input placeholder=\\\"Waiter Name\\\" aria-label=\\\"Waiter Name\\\" [matAutocomplete]=\\\"auto3\\\" [formControl]=\\\"waiterCtrl\\\">\\n      <mat-autocomplete #auto3=\\\"matAutocomplete\\\">\\n          <mat-option #waiter *ngFor=\\\"let state of waiter | async\\\" [value]=\\\"state.employeeName\\\" (click)=\\\"getWaiterId(state.employeeId)\\\">\\n              {{state.employeeName}}\\n          </mat-option>\\n      </mat-autocomplete>\\n  </mat-form-field>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n    <button type=\\\"submit\\\" id=\\\"newOrder\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"getWaiterWiseReport(fromDate.value,toDate.value)\\\">Report</button>\\n  </div>\\n</div>\\n<mat-divider style=\\\"margin-top: 10px; margin-bottom: 10px;\\\"></mat-divider>\\n<table datatable id=\\\"example\\\" [dtOptions]=\\\"dtOptions\\\"  [dtTrigger]=\\\"dtTrigger\\\" class=\\\"row-border hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\n  <thead>\\n    <tr>\\n      <th>Biling No</th>\\n      <th>Waiter Name</th>\\n      <th>Table Id</th>\\n      <th>Amount</th>\\n      <th>GST Amount</th>\\n      <th>Service Charge</th>\\n      <th>Discount</th>\\n      <th>Payment Mode</th> \\n    </tr>\\n  </thead>\\n  <tbody *ngIf=\\\"billing?.length > 0\\\"> \\n    <tr *ngFor=\\\"let billings of billing\\\">\\n      <td>{{ billings.billingId }}</td>\\n      <td>{{ billings.waiterId }}</td>\\n      <td>{{ billings.tableId }}</td>\\n      <td>{{ billings.totalAmount}}</td>\\n      <td>{{ billings.gstAmount }}</td>\\n      <td>{{ billings.serviceCharge }}</td>\\n      <td>{{ billings.discount}}</td>\\n      <td>{{ billings.cashType }}</td>\\n    </tr>\\n  </tbody>\\n  <tbody *ngIf=\\\"billing?.length == 0\\\">\\n      <tr>\\n        <td class=\\\"no-data-available\\\" colspan=\\\"4\\\">No Data Available in datatable</td>\\n      </tr>\\n    </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Billing } from '../../KOT/billing/billing';\nimport { ReportService } from '../report.service';\nimport { DatePipe } from '@angular/common';\nimport { EmployeeService } from '../../HRM/employee/employee.service';\nimport { Employee } from '../../HRM/employee/employee';\nimport { Router } from '@angular/router';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { OrderService } from '../../KOT/order/order.service';\n@Component({\n  selector: 'app-waiterwise-report',\n  templateUrl: './waiterwise-report.component.html',\n  styleUrls: ['./waiterwise-report.component.css'],\n  providers: [DatePipe]\n})\nexport class WaiterwiseReportComponent implements OnInit {\n  dtOptions: any = {};\n  private billing: Billing[] = [];\n  dtTrigger: Subject<any> = new Subject();\n  private employee: Employee[];\n  private date;\n  private date2;\n  private waiterId;\n  waiterCtrl=new FormControl();\n  waiter:Observable<Employee[]>\n  private employeeName=[]\n  constructor(private reportService: ReportService,\n    private datePipe: DatePipe,\n    private router: Router,\n    private orderService: OrderService) { }\n\n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      retrieve: true,\n      destroy: true,\n      infoEmpty: \"No entries to show\",\n      lengthMenu: [\n        [10, 25, 50, -1],\n        ['10 rows', '25 rows', '50 rows', 'Show all']\n      ],\n      dom: 'Blfrtip',\n      buttons: [\n        'print', 'excel', 'pdf'\n      ]\n    }\n    this.billing = [];\n    this.getAllWaiter();\n\n  }\n\n  getAllWaiter() {\n    this.orderService.getAllWaiter().subscribe((data) => {\n      this.employee = data;\n      \n      this.billing = [];\n      this.waiter = this.waiterCtrl.valueChanges\n      .pipe(\n        startWith(''),\n        map(state => state ? this._filterState(state) : this.employee.slice())\n      );\n    }, (error) => {\n      console.log(error);\n    })\n  }\n\n  private _filterState(value: string): Employee[] {\n    const filterValue = value.toLowerCase();\n    return this.employee.filter(emp => emp.employeeName.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  getWaiterId(waiterId:number){\n    console.log(waiterId)\n    this.waiterId=waiterId;\n  }\n\n  getWaiterWiseReport(fromDate, toDate) {\n    console.log(this.waiterId)\n    this.date = this.datePipe.transform(fromDate, 'yyyy-MM-dd');\n    this.date2 = this.datePipe.transform(toDate, 'yyyy-MM-dd');\n    this.reportService.getWaiterWiseReport(this.date, this.date2, this.waiterId).subscribe((data) => {\n      console.log(data);\n      this.billing = data;\n      this.dtOptions = {\n        pagingType: 'full_numbers',\n        pageLength: 10,\n        retrieve: true,\n        destroy: true,\n        lengthMenu: [\n          [10, 25, 50, -1],\n          ['10 rows', '25 rows', '50 rows', 'Show all']\n        ],\n        dom: 'Blfrtip',\n        buttons: [\n          'print', 'excel', 'pdf'\n        ]\n      }\n      this.dtTrigger.next();\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  back() {\n    this.router.navigate(['restaurants/admin/report'])\n  }\n}\n"],"sourceRoot":""}