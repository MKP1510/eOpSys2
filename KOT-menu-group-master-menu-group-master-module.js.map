{"version":3,"sources":["webpack:///./src/app/restaurants/admin/KOT/menu-group-master/add-menu-group/add-menu-group.component.css","webpack:///./src/app/restaurants/admin/KOT/menu-group-master/add-menu-group/add-menu-group.component.html","webpack:///./src/app/restaurants/admin/KOT/menu-group-master/add-menu-group/add-menu-group.component.ts","webpack:///./src/app/restaurants/admin/KOT/menu-group-master/delete-menu-group/delete-menu-group.component.css","webpack:///./src/app/restaurants/admin/KOT/menu-group-master/delete-menu-group/delete-menu-group.component.html","webpack:///./src/app/restaurants/admin/KOT/menu-group-master/delete-menu-group/delete-menu-group.component.ts","webpack:///./src/app/restaurants/admin/KOT/menu-group-master/edit-menu-group/edit-menu-group.component.css","webpack:///./src/app/restaurants/admin/KOT/menu-group-master/edit-menu-group/edit-menu-group.component.html","webpack:///./src/app/restaurants/admin/KOT/menu-group-master/edit-menu-group/edit-menu-group.component.ts","webpack:///./src/app/restaurants/admin/KOT/menu-group-master/menu-group-master-routing.module.ts","webpack:///./src/app/restaurants/admin/KOT/menu-group-master/menu-group-master.component.css","webpack:///./src/app/restaurants/admin/KOT/menu-group-master/menu-group-master.component.html","webpack:///./src/app/restaurants/admin/KOT/menu-group-master/menu-group-master.component.ts","webpack:///./src/app/restaurants/admin/KOT/menu-group-master/menu-group-master.module.ts","webpack:///./src/app/restaurants/admin/KOT/menu-group-master/menu-group-master.ts"],"names":[],"mappings":"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","file":"KOT-menu-group-master-menu-group-master-module.js","sourcesContent":["module.exports = \"h6{\\r\\n    text-align: center;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    font-size: 20px;\\r\\n  }\\r\\n  .example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n  }\\r\\n  .container{\\r\\n      width: 300px;\\r\\n  }\\r\\n  button{\\r\\n      margin-left: 30px;\\r\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n  <h6> Add Menu Group</h6>\\n  <form class=\\\"mat-dialog-content\\\" (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\">\\n    <div class=\\\"example-form\\\">\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput #input placeholder=\\\"Menu group Name\\\" name=\\\"menuGroupName\\\" [(ngModel)]=\\\"menuGroup.menuGroupName\\\" required>\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"example-form\\\">\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-select name=\\\"menuGroupCategory\\\" placeholder=\\\"Menu Group Category\\\" [(ngModel)]=\\\"menuGroup.menuGroupCategory\\\" required>\\n          <mat-option value=\\\"TIFFIN\\\">Tiffin</mat-option>\\n          <mat-option value=\\\"MEALS\\\">Meals</mat-option>\\n          <mat-option value=\\\"SIDE DISH\\\">Side Dish</mat-option>\\n          <mat-option value=\\\"OTHERS\\\">Others</mat-option>\\n          </mat-select>\\n      </mat-form-field>\\n    </div>\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\"  (click)=\\\"saveMenuGroup()\\\">Save</button>\\n    <button type=\\\"reset\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\" onNoClick()\\\">Cancel</button>\\n  </form>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MenuGroupMaster } from '../menu-group-master';\nimport { MenuGroupMasterService } from '../menu-group-master.service';\n@Component({\n  selector: 'app-add-menu-group',\n  templateUrl: './add-menu-group.component.html',\n  styleUrls: ['./add-menu-group.component.css']\n})\nexport class AddMenuGroupComponent implements OnInit {\n\n  private menuGroup: MenuGroupMaster;\n  constructor(public dialogRef: MatDialogRef<AddMenuGroupComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: MenuGroupMaster,\n    private menuGroupService: MenuGroupMasterService) { }\n\n  ngOnInit() {\n    this.menuGroup = this.menuGroupService.getter();\n    this.menuGroup = new MenuGroupMaster();\n  }\n  saveMenuGroup() {\n    this.menuGroupService.saveMenuGroup(this.menuGroup).subscribe((data) => {\n      alert(\"Save Successfully\");\n      this.dialogRef.close();\n    }, (error) => {\n      console.log(error);\n    })\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"h6,p{\\r\\n    text-align: center;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    font-size: 20px;\\r\\n  }\\r\\n  button{\\r\\n    margin-left: 30px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <h6 mat-dialog-title>Are you sure?</h6>\\n  <div mat-dialog-content>\\n    <p> Menu Group Id: {{data.menuGroupId}}</p>\\n    <p> Menu Group Name: {{data.menuGroupName}}</p>\\n    <p> Menu Group Category: {{data.menuGroupCategory}}</p>\\n  </div>\\n  <div mat-dialog-actions>\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\"  (click)=\\\"deleteMenuGroup()\\\">Delete</button>\\n    <button type=\\\"reset\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n  </div>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MenuGroupMaster } from '../menu-group-master';\nimport { MenuGroupMasterService } from '../menu-group-master.service';\n@Component({\n  selector: 'app-delete-menu-group',\n  templateUrl: './delete-menu-group.component.html',\n  styleUrls: ['./delete-menu-group.component.css']\n})\nexport class DeleteMenuGroupComponent implements OnInit {\n  constructor(public dialogRef: MatDialogRef<DeleteMenuGroupComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: MenuGroupMaster,\n    private menuGroupService: MenuGroupMasterService) { }\n\n  ngOnInit() {\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  deleteMenuGroup() {\n    this.menuGroupService.deleteMenuGroup(this.data.menuGroupId).subscribe((data) => {\n      alert(\"Delete Successfully\");\n      this.dialogRef.close();\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n}\n","module.exports = \"h6{\\r\\n    text-align: center;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    font-size: 20px;\\r\\n  }\\r\\n  .example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n  }\\r\\n  .container{\\r\\n      width: 300px;\\r\\n  }\\r\\n  button{\\r\\n      margin-left: 30px;\\r\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n  <h6>Edit Menu Group</h6>\\n  <form class=\\\"mat-dialog-content\\\" (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\">\\n    <div class=\\\"example-form\\\">\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput #input placeholder=\\\"Menu group Name\\\" name=\\\"menuGroupName\\\" [(ngModel)]=\\\"data.menuGroupName\\\" required>\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"example-form\\\">\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-select name=\\\"menuGroupCategory\\\" placeholder=\\\"Menu Group Category\\\" [(ngModel)]=\\\"data.menuGroupCategory\\\" required>\\n          <mat-option value=\\\"TIFFIN\\\">Tiffin</mat-option>\\n          <mat-option value=\\\"MEALS\\\">Meals</mat-option>\\n          <mat-option value=\\\"SIDE DISH\\\">Side Dish</mat-option>\\n          <mat-option value=\\\"OTHERS\\\">Others</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"updateMenuGroup()\\\">Save</button>\\n    <button type=\\\"reset\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\" onNoClick()\\\">Cancel</button>\\n  </form>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MenuGroupMaster } from '../menu-group-master';\nimport { MenuGroupMasterService } from '../menu-group-master.service';\n@Component({\n  selector: 'app-edit-menu-group',\n  templateUrl: './edit-menu-group.component.html',\n  styleUrls: ['./edit-menu-group.component.css']\n})\nexport class EditMenuGroupComponent implements OnInit {\n  private menuGroup: MenuGroupMaster;\n  constructor(public dialogRef: MatDialogRef<EditMenuGroupComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: MenuGroupMaster,\n    private menuGroupService: MenuGroupMasterService) { }\n\n  ngOnInit() {\n    console.log(this.data)\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  updateMenuGroup(){\n    this.menuGroupService.updateMenuGroup(this.data).subscribe((data)=>{\n      alert(\"Edit Successfully\");\n      this.dialogRef.close();\n    },(error)=>{\n      console.log(error);\n    })\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MenuGroupMasterComponent } from './menu-group-master.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: MenuGroupMasterComponent,\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class MenuGroupMasterRoutingModule{\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n  padding-left: 20px;\\r\\n  padding-top: 20px;\\r\\n  padding-right: 20px;\\r\\n}\\r\\n\\r\\nbutton{\\r\\n  margin-left: 20px;\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\nh6{\\r\\n  text-align: center;\\r\\n  font-family: 'Times New Roman', Times, serif;\\r\\n  font-size: 20px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"\\n\\n <div class=\\\"container\\\">\\n   <h6>Menu Group</h6>\\n  <div class=\\\"example-container mat-elevation-z8\\\">\\n    <div class=\\\"example-header\\\">\\n      <mat-form-field>\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n      </mat-form-field>\\n    </div>\\n    <mat-header-cell *matHeaderCellDef>\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n      </button>\\n    </mat-header-cell>\\n    <table mat-table #table [dataSource]=\\\"dataSource\\\" matSort >\\n  \\n      <!-- Position Column -->\\n      <ng-container matColumnDef=\\\"menuGroupId\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Menu Group Id </th>\\n        <td mat-cell *matCellDef=\\\"let menugroup\\\"> {{menugroup.menuGroupId}} </td>\\n      </ng-container>\\n  \\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"menuGroupName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Menu Group Name </th>\\n        <td mat-cell *matCellDef=\\\"let menugroup\\\"> {{menugroup.menuGroupName}} </td>\\n      </ng-container>\\n  \\n      <!-- Weight Column -->\\n      <ng-container matColumnDef=\\\"menuGroupCategory\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Menu Group Category</th>\\n        <td mat-cell *matCellDef=\\\"let menugroup\\\"> {{menugroup.menuGroupCategory}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <mat-header-cell *matHeaderCellDef>\\n          <button mat-icon-button matTooltip=\\\"Add Menu Group\\\" color=\\\"primary\\\" (click)=\\\"addMenuGroup()\\\">\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n          </button>\\n          <button mat-icon-button matTooltip=\\\"Refresh\\\" (click)=\\\"MenuGroupList()\\\">\\n            <mat-icon>refresh</mat-icon>\\n          </button>\\n        </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let menugroup; let i=index;\\\">\\n          <button mat-icon-button matTooltip=\\\"Edit Menu Group\\\" color=\\\"accent\\\" (click)=\\\"editMenuGroup(i,menugroup.menuGroupId,menugroup.menuGroupName,menugroup.menuGroupCategory)\\\">\\n            <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\n          </button>\\n          <button mat-icon-button matTooltip=\\\"Delete Menu Group\\\" color=\\\"accent\\\" (click)=\\\"deleteMenuGroup(i,menugroup.menuGroupId,menugroup.menuGroupName,menugroup.menuGroupCategory)\\\">\\n            <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\n          </button>\\n        </mat-cell>\\n      </ng-container>\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let menugroup; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 20]\\\" showFirstLastButtons></mat-paginator>\\n  </div>\\n  </div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Observable } from \"rxjs\";\nimport { Router } from '@angular/router';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatDialog } from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\nimport { MatTableDataSource, MatPaginator ,MatSort} from '@angular/material';\nimport { MenuGroupMasterService } from './menu-group-master.service';\nimport { MenuGroupMaster } from './menu-group-master';\nimport { AddMenuGroupComponent } from './add-menu-group/add-menu-group.component';\nimport { DeleteMenuGroupComponent } from './delete-menu-group/delete-menu-group.component';\nimport { EditMenuGroupComponent } from './edit-menu-group/edit-menu-group.component';\n@Component({\n  selector: 'app-menu-group-master',\n  templateUrl: './menu-group-master.component.html',\n  styleUrls: ['./menu-group-master.component.css']\n})\nexport class MenuGroupMasterComponent implements OnInit {\n  private menuGroup: MenuGroupMaster[];\n  exampleDatabase: MenuGroupMasterService | null;\n  dataSource;\n  displayedColumns = ['menuGroupId', 'menuGroupName', 'menuGroupCategory', 'actions'];\n  constructor(private _menuGroupServiceservice: MenuGroupMasterService,\n    private _router: Router,\n    private _http: HttpClient,\n    private _dialog: MatDialog) { }\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild('filter') filter: ElementRef;\n  @ViewChild(MatSort) sort:MatSort;\n\n  ngOnInit() {\n    this.getMenuGroup();\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n  MenuGroupList(){\n    this.getMenuGroup();\n  }\n  getMenuGroup() {\n    this._menuGroupServiceservice.getMenuGroup().subscribe((data) => {\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort=this.sort;\n    }, (error) => {\n      console.log(error);\n    });\n  }\n  addMenuGroup(menuGroup:MenuGroupMaster) {\n    const dialogRef = this._dialog.open(AddMenuGroupComponent, {\n      data:{menuGroup:menuGroup}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n        this.getMenuGroup();\n    });\n  }\n  editMenuGroup(i: number, menuGroupId: number, menuGroupName: string, menuGroupCategory: string) {\n    const dialogRef = this._dialog.open(EditMenuGroupComponent, {\n      data: { menuGroupId: menuGroupId, menuGroupName: menuGroupName, menuGroupCategory: menuGroupCategory }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n        this.getMenuGroup();\n    });\n  }\n  deleteMenuGroup(i: number, menuGroupId: number, menuGroupName: string, menuGroupCategory: string) {\n    const dialogRef = this._dialog.open(DeleteMenuGroupComponent, {\n      data: { menuGroupId: menuGroupId, menuGroupName: menuGroupName, menuGroupCategory: menuGroupCategory }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n        this.getMenuGroup();\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MenuGroupMasterComponent } from './menu-group-master.component';\nimport { MenuGroupMasterRoutingModule } from './menu-group-master-routing.module';\nimport { MenuGroupMasterService } from './menu-group-master.service';\nimport {\n  MatTableModule, MatDialogModule, MatButtonModule, MatRadioModule,\n  MatInputModule, MatPaginatorModule, MatIconModule, MatTooltipModule,\n  MatFormFieldModule, MatToolbarModule, MatSortModule, MatSelectModule, MatDatepickerModule\n} from '@angular/material';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AddMenuGroupComponent } from '../../KOT/menu-group-master/add-menu-group/add-menu-group.component';\nimport { EditMenuGroupComponent } from '../../KOT/menu-group-master/edit-menu-group/edit-menu-group.component';\nimport { DeleteMenuGroupComponent } from '../../KOT/menu-group-master/delete-menu-group/delete-menu-group.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    MenuGroupMasterRoutingModule,\n    MatTableModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatFormFieldModule,\n    MatToolbarModule,\n    MatSortModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule\n  ], providers: [\n    MenuGroupMasterService\n  ],schemas:[\n    CUSTOM_ELEMENTS_SCHEMA\n  ],entryComponents:[\n    AddMenuGroupComponent, EditMenuGroupComponent, DeleteMenuGroupComponent\n  ],\n  declarations: [MenuGroupMasterComponent, AddMenuGroupComponent, EditMenuGroupComponent, DeleteMenuGroupComponent]\n})\nexport class MenuGroupMasterModule { }\n","export class MenuGroupMaster {\n    menuGroupId:number;\n    menuGroupName:string;\n    menuGroupCategory:string;\n}\n"],"sourceRoot":""}